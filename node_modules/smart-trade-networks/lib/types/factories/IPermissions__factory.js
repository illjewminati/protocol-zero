"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IPermissions__factory = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ethers = require("ethers");

/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
var IPermissions__factory = /*#__PURE__*/function () {
  function IPermissions__factory() {
    (0, _classCallCheck2["default"])(this, IPermissions__factory);
  }

  (0, _createClass2["default"])(IPermissions__factory, null, [{
    key: "connect",
    value: function connect(address, signerOrProvider) {
      return new _ethers.Contract(address, _abi, signerOrProvider);
    }
  }]);
  return IPermissions__factory;
}();

exports.IPermissions__factory = IPermissions__factory;
var _abi = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "companiesContract",
    type: "address"
  }],
  name: "SetCompaniesContract",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint8",
    name: "action",
    type: "uint8"
  }, {
    indexed: true,
    internalType: "address",
    name: "company",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "nftAddress",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "allow",
    type: "bool"
  }],
  name: "SetPermission",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "_companies",
    type: "address"
  }],
  name: "setCompaniesContract",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint8",
    name: "_action",
    type: "uint8"
  }, {
    internalType: "address",
    name: "_company",
    type: "address"
  }, {
    internalType: "address",
    name: "_nftAddress",
    type: "address"
  }, {
    internalType: "bool",
    name: "_allow",
    type: "bool"
  }],
  name: "setPermission",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint8[]",
    name: "_permissions",
    type: "uint8[]"
  }, {
    internalType: "address",
    name: "_company",
    type: "address"
  }, {
    internalType: "address",
    name: "_nftAddress",
    type: "address"
  }, {
    internalType: "bool",
    name: "_allow",
    type: "bool"
  }],
  name: "setPermissions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bool[16]",
    name: "_permissions",
    type: "bool[16]"
  }, {
    internalType: "address",
    name: "_company",
    type: "address"
  }, {
    internalType: "address",
    name: "_nftAddress",
    type: "address"
  }],
  name: "setBoolPermissions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint8",
    name: "_action",
    type: "uint8"
  }, {
    internalType: "address",
    name: "_company",
    type: "address"
  }, {
    internalType: "address",
    name: "_nftAddress",
    type: "address"
  }, {
    internalType: "address",
    name: "_signer",
    type: "address"
  }],
  name: "getPermission",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_company",
    type: "address"
  }, {
    internalType: "address",
    name: "_nftAddress",
    type: "address"
  }],
  name: "getPermissions",
  outputs: [{
    internalType: "bool[]",
    name: "",
    type: "bool[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_company",
    type: "address"
  }, {
    internalType: "address",
    name: "_signer",
    type: "address"
  }],
  name: "isSignerApproved",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getCompaniesContract",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,