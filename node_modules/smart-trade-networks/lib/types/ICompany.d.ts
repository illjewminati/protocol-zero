/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ICompanyInterface extends ethers.utils.Interface {
  functions: {
    "changeName(string)": FunctionFragment;
    "changeIpfsLink(bytes32)": FunctionFragment;
    "getData()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "changeName", values: [string]): string;
  encodeFunctionData(
    functionFragment: "changeIpfsLink",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "getData", values?: undefined): string;

  decodeFunctionResult(functionFragment: "changeName", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeIpfsLink",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getData", data: BytesLike): Result;

  events: {
    "ChangeIpfsLink(bytes32,bytes32)": EventFragment;
    "ChangeName(string,string)": EventFragment;
    "NewSignatorie(address)": EventFragment;
    "RemovedSignatorie(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ChangeIpfsLink"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ChangeName"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewSignatorie"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemovedSignatorie"): EventFragment;
}

export class ICompany extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ICompanyInterface;

  functions: {
    changeName(
      _name: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "changeName(string)"(
      _name: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    changeIpfsLink(
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "changeIpfsLink(bytes32)"(
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getData(
      overrides?: CallOverrides
    ): Promise<
      [
        [string, string, BigNumber, string] & {
          name: string;
          ipfsLink: string;
          createdAt: BigNumber;
          owner: string;
        }
      ]
    >;

    "getData()"(
      overrides?: CallOverrides
    ): Promise<
      [
        [string, string, BigNumber, string] & {
          name: string;
          ipfsLink: string;
          createdAt: BigNumber;
          owner: string;
        }
      ]
    >;
  };

  changeName(
    _name: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "changeName(string)"(
    _name: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  changeIpfsLink(
    _ipfsLink: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "changeIpfsLink(bytes32)"(
    _ipfsLink: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getData(
    overrides?: CallOverrides
  ): Promise<
    [string, string, BigNumber, string] & {
      name: string;
      ipfsLink: string;
      createdAt: BigNumber;
      owner: string;
    }
  >;

  "getData()"(
    overrides?: CallOverrides
  ): Promise<
    [string, string, BigNumber, string] & {
      name: string;
      ipfsLink: string;
      createdAt: BigNumber;
      owner: string;
    }
  >;

  callStatic: {
    changeName(_name: string, overrides?: CallOverrides): Promise<void>;

    "changeName(string)"(
      _name: string,
      overrides?: CallOverrides
    ): Promise<void>;

    changeIpfsLink(
      _ipfsLink: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "changeIpfsLink(bytes32)"(
      _ipfsLink: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    getData(
      overrides?: CallOverrides
    ): Promise<
      [string, string, BigNumber, string] & {
        name: string;
        ipfsLink: string;
        createdAt: BigNumber;
        owner: string;
      }
    >;

    "getData()"(
      overrides?: CallOverrides
    ): Promise<
      [string, string, BigNumber, string] & {
        name: string;
        ipfsLink: string;
        createdAt: BigNumber;
        owner: string;
      }
    >;
  };

  filters: {
    ChangeIpfsLink(oldIpfsLink: null, newIpfsLink: null): EventFilter;

    ChangeName(oldName: null, newName: null): EventFilter;

    NewSignatorie(newSignatorie: string | null): EventFilter;

    RemovedSignatorie(signatorie: string | null): EventFilter;
  };

  estimateGas: {
    changeName(_name: string, overrides?: Overrides): Promise<BigNumber>;

    "changeName(string)"(
      _name: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    changeIpfsLink(
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "changeIpfsLink(bytes32)"(
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getData(overrides?: CallOverrides): Promise<BigNumber>;

    "getData()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    changeName(
      _name: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "changeName(string)"(
      _name: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    changeIpfsLink(
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "changeIpfsLink(bytes32)"(
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getData(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getData()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
