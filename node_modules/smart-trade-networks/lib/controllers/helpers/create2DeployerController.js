"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Create2DeployerController = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _ethers = require("ethers");

var _prefabContractFactory = require("../../chain/prefabContractFactory");

var Create2DeployerController = /*#__PURE__*/function () {
  function Create2DeployerController(create2DeployerAddress, signerOrProvider) {
    (0, _classCallCheck2["default"])(this, Create2DeployerController);
    (0, _defineProperty2["default"])(this, "_signer", void 0);
    (0, _defineProperty2["default"])(this, "_create2DeployerAddress", void 0);
    (0, _defineProperty2["default"])(this, "_create2DeployerContract", void 0);
    this._create2DeployerAddress = create2DeployerAddress;

    if (signerOrProvider instanceof _ethers.Signer || signerOrProvider instanceof _ethers.ethers.providers.JsonRpcSigner) {
      this._signer = signerOrProvider;
    } else {
      var web3Wrapper = new _ethers.ethers.providers.Web3Provider(signerOrProvider);
      this._signer = web3Wrapper.getSigner();
    }
  }

  (0, _createClass2["default"])(Create2DeployerController, [{
    key: "_getCreate2DeployerContract",
    value: function () {
      var _getCreate2DeployerContract2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
        var contract;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!this._create2DeployerContract) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return", this._create2DeployerContract);

              case 2:
                _context.prev = 2;
                _context.next = 5;
                return (0, _prefabContractFactory.getCreate2DeployerContract)(this._create2DeployerAddress, this._signer);

              case 5:
                contract = _context.sent;
                this._create2DeployerContract = contract;
                return _context.abrupt("return", contract);

              case 10:
                _context.prev = 10;
                _context.t0 = _context["catch"](2);
                throw Error("Failed to get Create2 contract: ".concat(_context.t0));

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[2, 10]]);
      }));

      function _getCreate2DeployerContract() {
        return _getCreate2DeployerContract2.apply(this, arguments);
      }

      return _getCreate2DeployerContract;
    }()
    /**Getters */

  }, {
    key: "getContract",
    value: function () {
      var _getContract = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
        var contract;
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this._getCreate2DeployerContract();

              case 2:
                contract = _context2.sent;
                return _context2.abrupt("return", contract);

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getContract() {
        return _getContract.apply(this, arguments);
      }

      return getContract;
    }()
  }, {
    key: "precomputeAddress",
    value: function precomputeAddress(contractBytecode, salt, constructorTypes, constructorArgs) {
      return buildCreate2Address(this._create2DeployerAddress, saltToHex(salt), buildBytecode(constructorTypes, constructorArgs, contractBytecode));
    }
    /**Setters */

  }, {
    key: "deployContract",
    value: function () {
      var _deployContract = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(salt, contractBytecode, constructorTypes, constructorArgs) {
        var contract, saltHex, bytecode;
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this._getCreate2DeployerContract();

              case 2:
                contract = _context3.sent;
                saltHex = saltToHex(salt);
                bytecode = buildBytecode(constructorTypes, constructorArgs, contractBytecode);
                return _context3.abrupt("return", contract.functions.deploy(bytecode, saltHex));

              case 6:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function deployContract(_x, _x2, _x3, _x4) {
        return _deployContract.apply(this, arguments);
      }

      return deployContract;
    }()
  }]);
  return Create2DeployerController;
}();
/** Class helpers */


exports.Create2DeployerController = Create2DeployerController;

var buildCreate2Address = function buildCreate2Address(factoryAddress, saltHex, byteCode) {
  return "0x".concat(_ethers.ethers.utils.keccak256("0x".concat(['ff', factoryAddress, saltHex, _ethers.ethers.utils.keccak256(byteCode)].map(function (x) {
    return x.replace(/0x/, '');
  }).join(''))).slice(-40)).toLowerCase();
};

var buildBytecode = function buildBytecode(constructorTypes, constructorArgs, contractBytecode) {
  return "".concat(contractBytecode).concat(encodeParams(constructorTypes, constructorArgs).slice(2));
};

var encodeParams = function encodeParams(dataTypes, data) {
  var abiCoder = _ethers.ethers.utils.defaultAbiCoder;
  return abiCoder.encode(dataTypes, data);
};

var saltToHex = function saltToHex(salt) {
  return _ethers.ethers.utils.id(salt.toString());
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,