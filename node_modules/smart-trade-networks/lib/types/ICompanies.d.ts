/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ICompaniesInterface extends ethers.utils.Interface {
  functions: {
    "addCompany(address,string,bytes32)": FunctionFragment;
    "removeCompany(address)": FunctionFragment;
    "addSignatorie(address)": FunctionFragment;
    "removeSignatorie(address)": FunctionFragment;
    "setCompanyData(string,bytes32)": FunctionFragment;
    "getAllCompanies()": FunctionFragment;
    "isAddressCompany(address)": FunctionFragment;
    "getCompanyBySignatorie(address)": FunctionFragment;
    "getCompanyByAddress(address)": FunctionFragment;
    "getCompanyByName(string)": FunctionFragment;
    "isSignatorieAuthorized(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addCompany",
    values: [string, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeCompany",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addSignatorie",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeSignatorie",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setCompanyData",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getAllCompanies",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isAddressCompany",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getCompanyBySignatorie",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getCompanyByAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getCompanyByName",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isSignatorieAuthorized",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "addCompany", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeCompany",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addSignatorie",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeSignatorie",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCompanyData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllCompanies",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAddressCompany",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCompanyBySignatorie",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCompanyByAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCompanyByName",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isSignatorieAuthorized",
    data: BytesLike
  ): Result;

  events: {
    "ChangeCompanyIPFS(bytes32,bytes32)": EventFragment;
    "ChangeCompanyName(string,string)": EventFragment;
    "NewCompany(address,string)": EventFragment;
    "NewSignatorie(address,address)": EventFragment;
    "RemoveCompany(address)": EventFragment;
    "RemoveSignatorie(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ChangeCompanyIPFS"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ChangeCompanyName"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewCompany"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewSignatorie"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemoveCompany"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemoveSignatorie"): EventFragment;
}

export class ICompanies extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ICompaniesInterface;

  functions: {
    addCompany(
      _company: string,
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addCompany(address,string,bytes32)"(
      _company: string,
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    removeCompany(
      _company: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeCompany(address)"(
      _company: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    addSignatorie(
      _signatorie: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addSignatorie(address)"(
      _signatorie: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    removeSignatorie(
      _signatorie: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeSignatorie(address)"(
      _signatorie: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setCompanyData(
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setCompanyData(string,bytes32)"(
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    /**
     * Getters
     */
    getAllCompanies(overrides?: CallOverrides): Promise<[string[]]>;

    /**
     * Getters
     */
    "getAllCompanies()"(overrides?: CallOverrides): Promise<[string[]]>;

    isAddressCompany(
      _company: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isAddressCompany(address)"(
      _company: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getCompanyBySignatorie(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getCompanyBySignatorie(address)"(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getCompanyByAddress(
      _company: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, string[], string, string] & {
          createdAt: BigNumber;
          signatories: string[];
          name: string;
          ipfsLink: string;
        },
        boolean
      ]
    >;

    "getCompanyByAddress(address)"(
      _company: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, string[], string, string] & {
          createdAt: BigNumber;
          signatories: string[];
          name: string;
          ipfsLink: string;
        },
        boolean
      ]
    >;

    getCompanyByName(
      _stringName: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, string[], string, string] & {
          createdAt: BigNumber;
          signatories: string[];
          name: string;
          ipfsLink: string;
        },
        boolean
      ]
    >;

    "getCompanyByName(string)"(
      _stringName: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, string[], string, string] & {
          createdAt: BigNumber;
          signatories: string[];
          name: string;
          ipfsLink: string;
        },
        boolean
      ]
    >;

    isSignatorieAuthorized(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isSignatorieAuthorized(address)"(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  addCompany(
    _company: string,
    _name: string,
    _ipfsLink: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addCompany(address,string,bytes32)"(
    _company: string,
    _name: string,
    _ipfsLink: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  removeCompany(
    _company: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeCompany(address)"(
    _company: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  addSignatorie(
    _signatorie: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addSignatorie(address)"(
    _signatorie: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  removeSignatorie(
    _signatorie: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeSignatorie(address)"(
    _signatorie: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setCompanyData(
    _name: string,
    _ipfsLink: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setCompanyData(string,bytes32)"(
    _name: string,
    _ipfsLink: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  /**
   * Getters
   */
  getAllCompanies(overrides?: CallOverrides): Promise<string[]>;

  /**
   * Getters
   */
  "getAllCompanies()"(overrides?: CallOverrides): Promise<string[]>;

  isAddressCompany(
    _company: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isAddressCompany(address)"(
    _company: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getCompanyBySignatorie(
    _signatorie: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "getCompanyBySignatorie(address)"(
    _signatorie: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getCompanyByAddress(
    _company: string,
    overrides?: CallOverrides
  ): Promise<
    [
      [BigNumber, string[], string, string] & {
        createdAt: BigNumber;
        signatories: string[];
        name: string;
        ipfsLink: string;
      },
      boolean
    ]
  >;

  "getCompanyByAddress(address)"(
    _company: string,
    overrides?: CallOverrides
  ): Promise<
    [
      [BigNumber, string[], string, string] & {
        createdAt: BigNumber;
        signatories: string[];
        name: string;
        ipfsLink: string;
      },
      boolean
    ]
  >;

  getCompanyByName(
    _stringName: string,
    overrides?: CallOverrides
  ): Promise<
    [
      [BigNumber, string[], string, string] & {
        createdAt: BigNumber;
        signatories: string[];
        name: string;
        ipfsLink: string;
      },
      boolean
    ]
  >;

  "getCompanyByName(string)"(
    _stringName: string,
    overrides?: CallOverrides
  ): Promise<
    [
      [BigNumber, string[], string, string] & {
        createdAt: BigNumber;
        signatories: string[];
        name: string;
        ipfsLink: string;
      },
      boolean
    ]
  >;

  isSignatorieAuthorized(
    _signatorie: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isSignatorieAuthorized(address)"(
    _signatorie: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    addCompany(
      _company: string,
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "addCompany(address,string,bytes32)"(
      _company: string,
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    removeCompany(_company: string, overrides?: CallOverrides): Promise<void>;

    "removeCompany(address)"(
      _company: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addSignatorie(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addSignatorie(address)"(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeSignatorie(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeSignatorie(address)"(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setCompanyData(
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setCompanyData(string,bytes32)"(
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    /**
     * Getters
     */
    getAllCompanies(overrides?: CallOverrides): Promise<string[]>;

    /**
     * Getters
     */
    "getAllCompanies()"(overrides?: CallOverrides): Promise<string[]>;

    isAddressCompany(
      _company: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isAddressCompany(address)"(
      _company: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getCompanyBySignatorie(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "getCompanyBySignatorie(address)"(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getCompanyByAddress(
      _company: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, string[], string, string] & {
          createdAt: BigNumber;
          signatories: string[];
          name: string;
          ipfsLink: string;
        },
        boolean
      ]
    >;

    "getCompanyByAddress(address)"(
      _company: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, string[], string, string] & {
          createdAt: BigNumber;
          signatories: string[];
          name: string;
          ipfsLink: string;
        },
        boolean
      ]
    >;

    getCompanyByName(
      _stringName: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, string[], string, string] & {
          createdAt: BigNumber;
          signatories: string[];
          name: string;
          ipfsLink: string;
        },
        boolean
      ]
    >;

    "getCompanyByName(string)"(
      _stringName: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, string[], string, string] & {
          createdAt: BigNumber;
          signatories: string[];
          name: string;
          ipfsLink: string;
        },
        boolean
      ]
    >;

    isSignatorieAuthorized(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isSignatorieAuthorized(address)"(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {
    ChangeCompanyIPFS(lastIPFS: null, newIPFS: null): EventFilter;

    ChangeCompanyName(lastName: null, newName: null): EventFilter;

    NewCompany(company: string | null, name: null): EventFilter;

    NewSignatorie(company: string | null, signatorie: null): EventFilter;

    RemoveCompany(company: string | null): EventFilter;

    RemoveSignatorie(company: string | null, signatorie: null): EventFilter;
  };

  estimateGas: {
    addCompany(
      _company: string,
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addCompany(address,string,bytes32)"(
      _company: string,
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    removeCompany(_company: string, overrides?: Overrides): Promise<BigNumber>;

    "removeCompany(address)"(
      _company: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    addSignatorie(
      _signatorie: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addSignatorie(address)"(
      _signatorie: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    removeSignatorie(
      _signatorie: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeSignatorie(address)"(
      _signatorie: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setCompanyData(
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setCompanyData(string,bytes32)"(
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    /**
     * Getters
     */
    getAllCompanies(overrides?: CallOverrides): Promise<BigNumber>;

    /**
     * Getters
     */
    "getAllCompanies()"(overrides?: CallOverrides): Promise<BigNumber>;

    isAddressCompany(
      _company: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isAddressCompany(address)"(
      _company: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCompanyBySignatorie(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCompanyBySignatorie(address)"(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCompanyByAddress(
      _company: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCompanyByAddress(address)"(
      _company: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCompanyByName(
      _stringName: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCompanyByName(string)"(
      _stringName: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isSignatorieAuthorized(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isSignatorieAuthorized(address)"(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addCompany(
      _company: string,
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addCompany(address,string,bytes32)"(
      _company: string,
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    removeCompany(
      _company: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeCompany(address)"(
      _company: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    addSignatorie(
      _signatorie: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addSignatorie(address)"(
      _signatorie: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    removeSignatorie(
      _signatorie: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeSignatorie(address)"(
      _signatorie: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setCompanyData(
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setCompanyData(string,bytes32)"(
      _name: string,
      _ipfsLink: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    /**
     * Getters
     */
    getAllCompanies(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    /**
     * Getters
     */
    "getAllCompanies()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isAddressCompany(
      _company: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isAddressCompany(address)"(
      _company: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCompanyBySignatorie(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCompanyBySignatorie(address)"(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCompanyByAddress(
      _company: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCompanyByAddress(address)"(
      _company: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCompanyByName(
      _stringName: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCompanyByName(string)"(
      _stringName: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isSignatorieAuthorized(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isSignatorieAuthorized(address)"(
      _signatorie: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
