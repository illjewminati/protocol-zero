"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IAccessControl__factory = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ethers = require("ethers");

/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
var IAccessControl__factory = /*#__PURE__*/function () {
  function IAccessControl__factory() {
    (0, _classCallCheck2["default"])(this, IAccessControl__factory);
  }

  (0, _createClass2["default"])(IAccessControl__factory, null, [{
    key: "connect",
    value: function connect(address, signerOrProvider) {
      return new _ethers.Contract(address, _abi, signerOrProvider);
    }
  }]);
  return IAccessControl__factory;
}();

exports.IAccessControl__factory = IAccessControl__factory;
var _abi = [{
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBlcy9mYWN0b3JpZXMvSUFjY2Vzc0NvbnRyb2xfX2ZhY3RvcnkudHMiXSwibmFtZXMiOlsiSUFjY2Vzc0NvbnRyb2xfX2ZhY3RvcnkiLCJhZGRyZXNzIiwic2lnbmVyT3JQcm92aWRlciIsIkNvbnRyYWN0IiwiX2FiaSIsImlucHV0cyIsImludGVybmFsVHlwZSIsIm5hbWUiLCJ0eXBlIiwib3V0cHV0cyIsInN0YXRlTXV0YWJpbGl0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUlBOztBQUpBOztBQUNBOztBQUNBO0lBT2FBLHVCOzs7Ozs7O1dBQ1gsaUJBQ0VDLE9BREYsRUFFRUMsZ0JBRkYsRUFHa0I7QUFDaEIsYUFBTyxJQUFJQyxnQkFBSixDQUFhRixPQUFiLEVBQXNCRyxJQUF0QixFQUE0QkYsZ0JBQTVCLENBQVA7QUFDRDs7Ozs7O0FBR0gsSUFBTUUsSUFBSSxHQUFHLENBQ1g7QUFDRUMsRUFBQUEsTUFBTSxFQUFFLENBQ047QUFDRUMsSUFBQUEsWUFBWSxFQUFFLFNBRGhCO0FBRUVDLElBQUFBLElBQUksRUFBRSxNQUZSO0FBR0VDLElBQUFBLElBQUksRUFBRTtBQUhSLEdBRE0sRUFNTjtBQUNFRixJQUFBQSxZQUFZLEVBQUUsU0FEaEI7QUFFRUMsSUFBQUEsSUFBSSxFQUFFLFNBRlI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFO0FBSFIsR0FOTSxDQURWO0FBYUVELEVBQUFBLElBQUksRUFBRSxTQWJSO0FBY0VFLEVBQUFBLE9BQU8sRUFBRSxDQUNQO0FBQ0VILElBQUFBLFlBQVksRUFBRSxNQURoQjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsRUFGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUU7QUFIUixHQURPLENBZFg7QUFxQkVFLEVBQUFBLGVBQWUsRUFBRSxNQXJCbkI7QUFzQkVGLEVBQUFBLElBQUksRUFBRTtBQXRCUixDQURXLEVBeUJYO0FBQ0VILEVBQUFBLE1BQU0sRUFBRSxDQUNOO0FBQ0VDLElBQUFBLFlBQVksRUFBRSxTQURoQjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsTUFGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUU7QUFIUixHQURNLENBRFY7QUFRRUQsRUFBQUEsSUFBSSxFQUFFLGNBUlI7QUFTRUUsRUFBQUEsT0FBTyxFQUFFLENBQ1A7QUFDRUgsSUFBQUEsWUFBWSxFQUFFLFNBRGhCO0FBRUVDLElBQUFBLElBQUksRUFBRSxFQUZSO0FBR0VDLElBQUFBLElBQUksRUFBRTtBQUhSLEdBRE8sQ0FUWDtBQWdCRUUsRUFBQUEsZUFBZSxFQUFFLE1BaEJuQjtBQWlCRUYsRUFBQUEsSUFBSSxFQUFFO0FBakJSLENBekJXLEVBNENYO0FBQ0VILEVBQUFBLE1BQU0sRUFBRSxDQUNOO0FBQ0VDLElBQUFBLFlBQVksRUFBRSxTQURoQjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsTUFGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUU7QUFIUixHQURNLEVBTU47QUFDRUYsSUFBQUEsWUFBWSxFQUFFLFNBRGhCO0FBRUVDLElBQUFBLElBQUksRUFBRSxTQUZSO0FBR0VDLElBQUFBLElBQUksRUFBRTtBQUhSLEdBTk0sQ0FEVjtBQWFFRCxFQUFBQSxJQUFJLEVBQUUsV0FiUjtBQWNFRSxFQUFBQSxPQUFPLEVBQUUsRUFkWDtBQWVFQyxFQUFBQSxlQUFlLEVBQUUsWUFmbkI7QUFnQkVGLEVBQUFBLElBQUksRUFBRTtBQWhCUixDQTVDVyxFQThEWDtBQUNFSCxFQUFBQSxNQUFNLEVBQUUsQ0FDTjtBQUNFQyxJQUFBQSxZQUFZLEVBQUUsU0FEaEI7QUFFRUMsSUFBQUEsSUFBSSxFQUFFLE1BRlI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFO0FBSFIsR0FETSxFQU1OO0FBQ0VGLElBQUFBLFlBQVksRUFBRSxTQURoQjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsU0FGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUU7QUFIUixHQU5NLENBRFY7QUFhRUQsRUFBQUEsSUFBSSxFQUFFLFlBYlI7QUFjRUUsRUFBQUEsT0FBTyxFQUFFLEVBZFg7QUFlRUMsRUFBQUEsZUFBZSxFQUFFLFlBZm5CO0FBZ0JFRixFQUFBQSxJQUFJLEVBQUU7QUFoQlIsQ0E5RFcsRUFnRlg7QUFDRUgsRUFBQUEsTUFBTSxFQUFFLENBQ047QUFDRUMsSUFBQUEsWUFBWSxFQUFFLFNBRGhCO0FBRUVDLElBQUFBLElBQUksRUFBRSxNQUZSO0FBR0VDLElBQUFBLElBQUksRUFBRTtBQUhSLEdBRE0sRUFNTjtBQUNFRixJQUFBQSxZQUFZLEVBQUUsU0FEaEI7QUFFRUMsSUFBQUEsSUFBSSxFQUFFLFNBRlI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFO0FBSFIsR0FOTSxDQURWO0FBYUVELEVBQUFBLElBQUksRUFBRSxjQWJSO0FBY0VFLEVBQUFBLE9BQU8sRUFBRSxFQWRYO0FBZUVDLEVBQUFBLGVBQWUsRUFBRSxZQWZuQjtBQWdCRUYsRUFBQUEsSUFBSSxFQUFFO0FBaEJSLENBaEZXLENBQWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBdXRvZ2VuZXJhdGVkIGZpbGUuIERvIG5vdCBlZGl0IG1hbnVhbGx5LiAqL1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmltcG9ydCB7IENvbnRyYWN0LCBTaWduZXIgfSBmcm9tIFwiZXRoZXJzXCI7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJAZXRoZXJzcHJvamVjdC9wcm92aWRlcnNcIjtcblxuaW1wb3J0IHR5cGUgeyBJQWNjZXNzQ29udHJvbCB9IGZyb20gXCIuLi9JQWNjZXNzQ29udHJvbFwiO1xuXG5leHBvcnQgY2xhc3MgSUFjY2Vzc0NvbnRyb2xfX2ZhY3Rvcnkge1xuICBzdGF0aWMgY29ubmVjdChcbiAgICBhZGRyZXNzOiBzdHJpbmcsXG4gICAgc2lnbmVyT3JQcm92aWRlcjogU2lnbmVyIHwgUHJvdmlkZXJcbiAgKTogSUFjY2Vzc0NvbnRyb2wge1xuICAgIHJldHVybiBuZXcgQ29udHJhY3QoYWRkcmVzcywgX2FiaSwgc2lnbmVyT3JQcm92aWRlcikgYXMgSUFjY2Vzc0NvbnRyb2w7XG4gIH1cbn1cblxuY29uc3QgX2FiaSA9IFtcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcInJvbGVcIixcbiAgICAgICAgdHlwZTogXCJieXRlczMyXCIsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcImFjY291bnRcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgbmFtZTogXCJoYXNSb2xlXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYm9vbFwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImJvb2xcIixcbiAgICAgIH0sXG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcInJvbGVcIixcbiAgICAgICAgdHlwZTogXCJieXRlczMyXCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgbmFtZTogXCJnZXRSb2xlQWRtaW5cIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlczMyXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgfSxcbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlczMyXCIsXG4gICAgICAgIG5hbWU6IFwicm9sZVwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiYWNjb3VudFwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgIH0sXG4gICAgXSxcbiAgICBuYW1lOiBcImdyYW50Um9sZVwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlczMyXCIsXG4gICAgICAgIG5hbWU6IFwicm9sZVwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiYWNjb3VudFwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgIH0sXG4gICAgXSxcbiAgICBuYW1lOiBcInJldm9rZVJvbGVcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcInJvbGVcIixcbiAgICAgICAgdHlwZTogXCJieXRlczMyXCIsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcImFjY291bnRcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgbmFtZTogXCJyZW5vdW5jZVJvbGVcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgfSxcbl07XG4iXX0=