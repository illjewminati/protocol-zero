{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/common/steps_modal/admin_set_min_gas.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getStepsModalCurrentStep } from '../../../store/ui/selectors';\nimport { BaseStepModal } from './base_step_modal';\nimport { initBalances, setPamasterMinGas } from '../../../store/actions';\nimport { getWeb3Wrapper } from '../../../services/web3_wrapper';\n\nclass SetMinGasStep extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"render\", () => {\n      const {\n        buildStepsProgress,\n        step\n      } = this.props;\n      const title = `Set Min Gas Per Swap: ${step.amount} Gas`;\n      const confirmCaption = `Confirm on Metamask Send Transaction`;\n      const loadingCaption = \"Sending Transaction\";\n      const doneCaption = \"Transaction Mined\";\n      const errorCaption = `Failed to Send Transaction`;\n      const loadingFooterCaption = `Waiting for confirmation...`;\n      const doneFooterCaption = `Sent`;\n      return /*#__PURE__*/_jsxDEV(BaseStepModal, {\n        step: step,\n        title: title,\n        confirmCaption: confirmCaption,\n        loadingCaption: loadingCaption,\n        doneCaption: doneCaption,\n        errorCaption: errorCaption,\n        loadingFooterCaption: loadingFooterCaption,\n        doneFooterCaption: doneFooterCaption,\n        buildStepsProgress: buildStepsProgress,\n        estimatedTxTimeMs: 30000,\n        runAction: this._runAction,\n        showPartialProgress: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this);\n    });\n\n    _defineProperty(this, \"_runAction\", async ({\n      onLoading,\n      onDone,\n      onError\n    }) => {\n      const {\n        step,\n        onSend,\n        initBalances\n      } = this.props;\n      const web3Wrapper = await getWeb3Wrapper();\n\n      try {\n        const contractTransaction = await onSend(step.amount);\n        onLoading();\n        const contractReceipt = await contractTransaction.wait();\n        await web3Wrapper.waitForTransaction(contractReceipt.transactionHash);\n        initBalances();\n        onDone();\n      } catch (e) {\n        console.log(e);\n        onError(e);\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    step: getStepsModalCurrentStep(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSend: amount => dispatch(setPamasterMinGas(amount)),\n    initBalances: () => dispatch(initBalances())\n  };\n};\n\nconst SetMinGasStepContainer = connect(mapStateToProps, mapDispatchToProps)(SetMinGasStep);\nexport { SetMinGasStep, SetMinGasStepContainer };","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/common/steps_modal/admin_set_min_gas.tsx"],"names":["React","connect","getStepsModalCurrentStep","BaseStepModal","initBalances","setPamasterMinGas","getWeb3Wrapper","SetMinGasStep","Component","buildStepsProgress","step","props","title","amount","confirmCaption","loadingCaption","doneCaption","errorCaption","loadingFooterCaption","doneFooterCaption","_runAction","onLoading","onDone","onError","onSend","web3Wrapper","contractTransaction","contractReceipt","wait","waitForTransaction","transactionHash","e","console","log","mapStateToProps","state","mapDispatchToProps","dispatch","SetMinGasStepContainer"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,wBAAT,QAAyC,6BAAzC;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AAGA,SAASC,YAAT,EAAuBC,iBAAvB,QAAgD,wBAAhD;AAEA,SAASC,cAAT,QAA+B,gCAA/B;;AAkBA,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAAmD;AAAA;AAAA;;AAAA,oCAC/B,MAAM;AAClB,YAAM;AAAEC,QAAAA,kBAAF;AAAsBC,QAAAA;AAAtB,UAA+B,KAAKC,KAA1C;AAEA,YAAMC,KAAK,GAAI,yBAAwBF,IAAI,CAACG,MAAO,MAAnD;AACA,YAAMC,cAAc,GAAI,sCAAxB;AACA,YAAMC,cAAc,GAAG,qBAAvB;AACA,YAAMC,WAAW,GAAG,mBAApB;AACA,YAAMC,YAAY,GAAI,4BAAtB;AACA,YAAMC,oBAAoB,GAAI,6BAA9B;AACA,YAAMC,iBAAiB,GAAI,MAA3B;AAEA,0BACI,QAAC,aAAD;AACI,QAAA,IAAI,EAAET,IADV;AAEI,QAAA,KAAK,EAAEE,KAFX;AAGI,QAAA,cAAc,EAAEE,cAHpB;AAII,QAAA,cAAc,EAAEC,cAJpB;AAKI,QAAA,WAAW,EAAEC,WALjB;AAMI,QAAA,YAAY,EAAEC,YANlB;AAOI,QAAA,oBAAoB,EAAEC,oBAP1B;AAQI,QAAA,iBAAiB,EAAEC,iBARvB;AASI,QAAA,kBAAkB,EAAEV,kBATxB;AAUI,QAAA,iBAAiB,EAAE,KAVvB;AAWI,QAAA,SAAS,EAAE,KAAKW,UAXpB;AAYI,QAAA,mBAAmB,EAAE;AAZzB;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBH,KA5B8C;;AAAA,wCA8BjB,OAAO;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,MAAb;AAAqBC,MAAAA;AAArB,KAAP,KAA+C;AACzE,YAAM;AAAEb,QAAAA,IAAF;AAAQc,QAAAA,MAAR;AAAgBpB,QAAAA;AAAhB,UAAiC,KAAKO,KAA5C;AAEA,YAAMc,WAAW,GAAG,MAAMnB,cAAc,EAAxC;;AAEA,UAAI;AACA,cAAMoB,mBAAwC,GAAG,MAAMF,MAAM,CAACd,IAAI,CAACG,MAAN,CAA7D;AACAQ,QAAAA,SAAS;AAET,cAAMM,eAAgC,GAAG,MAAMD,mBAAmB,CAACE,IAApB,EAA/C;AACA,cAAMH,WAAW,CAACI,kBAAZ,CAA+BF,eAAe,CAACG,eAA/C,CAAN;AACA1B,QAAAA,YAAY;AACZkB,QAAAA,MAAM;AACT,OARD,CAQE,OAAMS,CAAN,EAAS;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAR,QAAAA,OAAO,CAACQ,CAAD,CAAP;AACH;AAEJ,KAhD8C;AAAA;;AAAA;;AAmDnD,MAAMG,eAAe,GAAIC,KAAD,IAAmC;AACvD,SAAO;AACHzB,IAAAA,IAAI,EAAER,wBAAwB,CAACiC,KAAD;AAD3B,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAkC;AACzD,SAAO;AACHb,IAAAA,MAAM,EAAGX,MAAD,IACJwB,QAAQ,CAAChC,iBAAiB,CAACQ,MAAD,CAAlB,CAFT;AAGHT,IAAAA,YAAY,EAAE,MAAMiC,QAAQ,CAACjC,YAAY,EAAb;AAHzB,GAAP;AAKH,CAND;;AAQA,MAAMkC,sBAAsB,GAAGrC,OAAO,CAClCiC,eADkC,EAElCE,kBAFkC,CAAP,CAG7B7B,aAH6B,CAA/B;AAKA,SAASA,aAAT,EAAwB+B,sBAAxB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getStepsModalCurrentStep } from '../../../store/ui/selectors';\nimport { StoreState } from '../../../types/store';\nimport { BaseStepModal } from './base_step_modal';\nimport { StepItem } from './steps_progress';\nimport { ContractReceipt, ContractTransaction } from 'ethers';\nimport { initBalances, setPamasterMinGas } from '../../../store/actions';\nimport { StepSetMinGas } from '../../../types/steps-modal';\nimport { getWeb3Wrapper } from '../../../services/web3_wrapper';\n\ninterface OwnProps {\n    buildStepsProgress: (currentStepItem: StepItem) => StepItem[];\n}\ninterface StateProps {\n    step: StepSetMinGas;\n}\n\ninterface DispatchProps {\n    onSend: (\n        amount: string\n    ) => Promise<any>;\n    initBalances: () => any\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass SetMinGasStep extends React.Component<Props> {\n    public render = () => {\n        const { buildStepsProgress, step } = this.props;\n\n        const title = `Set Min Gas Per Swap: ${step.amount} Gas`;\n        const confirmCaption = `Confirm on Metamask Send Transaction`;\n        const loadingCaption = \"Sending Transaction\";\n        const doneCaption = \"Transaction Mined\";\n        const errorCaption = `Failed to Send Transaction`;\n        const loadingFooterCaption = `Waiting for confirmation...`;\n        const doneFooterCaption = `Sent`;\n\n        return (\n            <BaseStepModal\n                step={step}\n                title={title}\n                confirmCaption={confirmCaption}\n                loadingCaption={loadingCaption}\n                doneCaption={doneCaption}\n                errorCaption={errorCaption}\n                loadingFooterCaption={loadingFooterCaption}\n                doneFooterCaption={doneFooterCaption}\n                buildStepsProgress={buildStepsProgress}\n                estimatedTxTimeMs={30000}\n                runAction={this._runAction}\n                showPartialProgress={true}\n            />\n        );\n    };\n\n    private readonly _runAction = async ({ onLoading, onDone, onError }: any) => {\n        const { step, onSend, initBalances } = this.props;\n\n        const web3Wrapper = await getWeb3Wrapper();\n\n        try {\n            const contractTransaction: ContractTransaction = await onSend(step.amount);\n            onLoading();\n    \n            const contractReceipt: ContractReceipt = await contractTransaction.wait();\n            await web3Wrapper.waitForTransaction(contractReceipt.transactionHash);\n            initBalances()\n            onDone()\n        } catch(e) {\n            console.log(e)\n            onError(e)\n        }\n\n    };\n}\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n    return {\n        step: getStepsModalCurrentStep(state) as StepSetMinGas,\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => {\n    return {\n        onSend: (amount: string) => \n            dispatch(setPamasterMinGas(amount)),\n        initBalances: () => dispatch(initBalances())\n    }\n}\n\nconst SetMinGasStepContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SetMinGasStep);\n\nexport { SetMinGasStep, SetMinGasStepContainer };\n"]},"metadata":{},"sourceType":"module"}