{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/common/steps_modal/steps_progress.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Interval } from '../interval';\n\nconst checkMark = () => {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"10\",\n    height: \"8\",\n    viewBox: \"0 0 10 8\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M1.6665 4.23416L3.94864 6.51339L8.44045 1.33331\",\n      strokeWidth: \"2\",\n      strokeLinecap: \"round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\nexport const StepsProgress = props => {\n  const {\n    steps\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"steps\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n    className: \"steps-progress-wrapper\"\n  }, restProps), {}, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"starting-dot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), steps.map((item, index) => {\n      const {\n        progress\n      } = item;\n      const getProgress = progress instanceof Function ? progress : now => progress;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${item.isLong ? \"long\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(Interval, {\n          delay: 250,\n          children: now => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-line-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `step-title ${item.active || getProgress(now.valueOf()) >= 100 ? \"active\" : \"\"}`,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-line\",\n                style: {\n                  width: `${getProgress(now.valueOf())}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `step-dot ${getProgress(now.valueOf()) >= 100 ? \"long_step\" : \"\"}`,\n              children: checkMark()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this);\n    })]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/common/steps_modal/steps_progress.tsx"],"names":["React","Interval","checkMark","StepsProgress","props","steps","restProps","map","item","index","progress","getProgress","Function","now","isLong","active","valueOf","title","width"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAsC,OAAtC;AAEA,SAASC,QAAT,QAAyB,aAAzB;;AAeA,MAAMC,SAAS,GAAG,MAAM;AACpB,sBACI;AAAK,IAAA,KAAK,EAAC,IAAX;AAAgB,IAAA,MAAM,EAAC,GAAvB;AAA2B,IAAA,OAAO,EAAC,UAAnC;AAA8C,IAAA,IAAI,EAAC,MAAnD;AAA0D,IAAA,KAAK,EAAC,4BAAhE;AAAA,2BACI;AAAM,MAAA,CAAC,EAAC,iDAAR;AAA0D,MAAA,WAAW,EAAC,GAAtE;AAA0E,MAAA,aAAa,EAAC;AAAxF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;AAQA,OAAO,MAAMC,aAA8B,GAAGC,KAAK,IAAI;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAA0BD,KAAhC;AAAA,QAAkBE,SAAlB,4BAAgCF,KAAhC;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA4CE,SAA5C;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKD,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAeF,IAArB;AAEA,YAAMG,WAAW,GAAGD,QAAQ,YAAYE,QAApB,GAA+BF,QAA/B,GAA2CG,GAAD,IAAiBH,QAA/E;AAEA,0BACI;AAAK,QAAA,SAAS,EAAG,QAAOF,IAAI,CAACM,MAAL,GAAc,MAAd,GAAuB,EAAG,EAAlD;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,GAAjB;AAAA,oBACKD,GAAG,iBACA;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAG,cAAaL,IAAI,CAACO,MAAL,IAAeJ,WAAW,CAACE,GAAG,CAACG,OAAJ,EAAD,CAAX,IAA8B,GAA7C,GAAmD,QAAnD,GAA6D,EAAG,EAA9F;AAAA,0BACKR,IAAI,CAACS;AADV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAK,gBAAA,SAAS,EAAC,WAAf;AAA2B,gBAAA,KAAK,EAAE;AAACC,kBAAAA,KAAK,EAAG,GAAEP,WAAW,CAACE,GAAG,CAACG,OAAJ,EAAD,CAAgB;AAAtC;AAAlC;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI;AAAK,cAAA,SAAS,EAAG,YAAWL,WAAW,CAACE,GAAG,CAACG,OAAJ,EAAD,CAAX,IAA8B,GAA9B,GAAoC,WAApC,GAAgD,EAAG,EAA/E;AAAA,wBAAmFd,SAAS;AAA5F;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ,SAA0DO,KAA1D;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH,KAvBA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAhCM","sourcesContent":["import React, { HTMLAttributes } from 'react';\n\nimport { Interval } from '../interval';\n\nexport type GetProgress = (now: number) => number;\n\nexport interface StepItem {\n    active: boolean;\n    progress: number | GetProgress;\n    title: string;\n    isLong: boolean;\n}\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n    steps: StepItem[];\n}\n\nconst checkMark = () => {\n    return (\n        <svg width=\"10\" height=\"8\" viewBox=\"0 0 10 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M1.6665 4.23416L3.94864 6.51339L8.44045 1.33331\" strokeWidth=\"2\" strokeLinecap=\"round\" />\n        </svg>\n    );\n};\n\nexport const StepsProgress: React.FC<Props> = props => {\n    const { steps, ...restProps } = props;\n\n    return (\n        <div className=\"steps-progress-wrapper\" {...restProps}>\n            <div className=\"starting-dot\" />\n            {steps.map((item, index) => {\n                const { progress } = item;\n\n                const getProgress = progress instanceof Function ? progress : (now: number) => progress;\n\n                return (\n                    <div className={`step ${item.isLong ? \"long\" : \"\"}`} key={index}>\n                        <Interval delay={250}>\n                            {now => (\n                                <>\n                                    <div className=\"step-line-container\">\n                                        <div className={`step-title ${item.active || getProgress(now.valueOf()) >= 100 ? \"active\": \"\"}`}>\n                                            {item.title}\n                                        </div>\n                                        <div className=\"step-line\" style={{width: `${getProgress(now.valueOf())}%`}}>\n                                        </div>\n                                    </div>\n                                    <div className={`step-dot ${getProgress(now.valueOf()) >= 100 ? \"long_step\":\"\"}`}>{checkMark()}</div>\n                                </>\n                            )}\n                        </Interval>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}