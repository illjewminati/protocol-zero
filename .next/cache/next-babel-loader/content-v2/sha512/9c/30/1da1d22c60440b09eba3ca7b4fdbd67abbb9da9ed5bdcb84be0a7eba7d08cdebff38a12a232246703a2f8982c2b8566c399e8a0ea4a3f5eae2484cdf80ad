{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { getStepTitle, makeGetProgress } from '../../../util/steps';\nimport { ComponentUnmountedException } from '../../exceptions/component_unmounted_exception';\nimport { ModalStatusTextLight, ModalText, StepStatus, StepStatusConfirmOnMetamask, StepStatusDone, StepStatusError, StepStatusLoading, Title } from './steps_common';\nimport { StepsProgress } from './steps_progress';\nimport { StepPendingTime } from './step_pending_time';\nexport var BaseStepModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(BaseStepModal, _React$Component);\n\n  var _super = _createSuper(BaseStepModal);\n\n  function BaseStepModal(props) {\n    var _this;\n\n    _classCallCheck(this, BaseStepModal);\n\n    _this = _super.call(this, props); // we set the value of the estimated tx time, so that the progress bar length is not updated in the middle of the step\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      status: StepStatus.ConfirmOnMetamask,\n      loadingStarted: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_estimatedTxTimeMs\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_isUnmounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this._runAction();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillUnmount\", function () {\n      _this._isUnmounted = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var _this$props = _this.props,\n          confirmCaption = _this$props.confirmCaption,\n          loadingCaption = _this$props.loadingCaption,\n          doneCaption = _this$props.doneCaption,\n          errorCaption = _this$props.errorCaption,\n          loadingFooterCaption = _this$props.loadingFooterCaption,\n          doneFooterCaption = _this$props.doneFooterCaption,\n          title = _this$props.title;\n      var _this$state = _this.state,\n          loadingStarted = _this$state.loadingStarted,\n          status = _this$state.status;\n\n      var retry = function retry() {\n        return _this._retry();\n      };\n\n      var content;\n      var bodyText;\n      var footer = _this.props.showPartialProgress ? null : /*#__PURE__*/_jsx(ModalStatusTextLight, {});\n\n      switch (status) {\n        case StepStatus.Loading:\n          content = /*#__PURE__*/_jsx(StepStatusLoading, {});\n          bodyText = /*#__PURE__*/_jsx(ModalText, {\n            children: loadingCaption\n          });\n          break;\n\n        case StepStatus.Done:\n          content = /*#__PURE__*/_jsx(StepStatusDone, {});\n          bodyText = /*#__PURE__*/_jsx(ModalText, {\n            children: doneCaption\n          });\n          footer = /*#__PURE__*/_jsx(ModalStatusTextLight, {\n            children: doneFooterCaption\n          });\n          break;\n\n        case StepStatus.Error:\n          content = /*#__PURE__*/_jsx(StepStatusError, {});\n          bodyText = /*#__PURE__*/_jsxs(ModalText, {\n            children: [errorCaption, /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"span\", {\n              className: \"modal-text-clickable\",\n              onClick: retry,\n              children: \"Click here to try again\"\n            })]\n          });\n          break;\n\n        default:\n          content = /*#__PURE__*/_jsx(StepStatusConfirmOnMetamask, {});\n          bodyText = /*#__PURE__*/_jsx(ModalText, {\n            children: confirmCaption\n          });\n          footer = /*#__PURE__*/_jsx(ModalStatusTextLight, {\n            children: loadingFooterCaption\n          });\n          break;\n      }\n\n      var getProgress = function getProgress() {\n        return 0;\n      };\n\n      if (status === StepStatus.Loading && _this.props.showPartialProgress && loadingStarted !== null) {\n        getProgress = makeGetProgress(loadingStarted, _this._estimatedTxTimeMs);\n      } else if (status === StepStatus.Done) {\n        getProgress = function getProgress() {\n          return 100;\n        };\n      }\n\n      var stepsProgress = _this.props.buildStepsProgress({\n        title: getStepTitle(_this.props.step),\n        active: true,\n        progress: getProgress,\n        isLong: false\n      });\n\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [content, /*#__PURE__*/_jsx(Title, {\n          children: title\n        }), bodyText, /*#__PURE__*/_jsx(StepsProgress, {\n          steps: stepsProgress\n        }), _this.props.showPartialProgress && /*#__PURE__*/_jsx(ModalStatusTextLight, {\n          children: /*#__PURE__*/_jsx(StepPendingTime, {\n            txStarted: loadingStarted,\n            stepStatus: status,\n            estimatedTxTimeMs: _this._estimatedTxTimeMs\n          })\n        }), footer]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_runAction\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var onLoading, onDone, onError;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              onLoading = function onLoading() {\n                _this._throwIfUnmounted();\n\n                _this.setState({\n                  status: StepStatus.Loading,\n                  loadingStarted: Date.now()\n                });\n              };\n\n              onDone = function onDone() {\n                _this._throwIfUnmounted();\n\n                _this.setState({\n                  status: StepStatus.Done\n                });\n              };\n\n              onError = function onError(err) {\n                if (err instanceof ComponentUnmountedException) {\n                  return;\n                }\n\n                _this.setState({\n                  status: StepStatus.Error\n                });\n              };\n\n              return _context2.abrupt(\"return\", _this.props.runAction({\n                onLoading: onLoading,\n                onDone: onDone,\n                onError: onError\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_retry\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                status: StepStatus.ConfirmOnMetamask\n              });\n\n              _context3.next = 3;\n              return _this._runAction();\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_throwIfUnmounted\", function () {\n      if (_this._isUnmounted) {\n        throw new ComponentUnmountedException('BaseStepModal');\n      }\n    });\n\n    _this._estimatedTxTimeMs = props.estimatedTxTimeMs;\n    return _this;\n  }\n\n  return BaseStepModal;\n}(React.Component);","map":null,"metadata":{},"sourceType":"module"}