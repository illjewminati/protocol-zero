{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { getWeb3State } from '../store/blockchain/selectors';\nimport { connect } from 'react-redux';\nimport { BalancesContainer } from './account/balances_container';\nimport { Button, Container, Form, InputGroup, Modal } from 'react-bootstrap';\nimport { startPaymasterSetFee, startPaymasterSetForwarder, startPaymasterSetGasUsedByPost, startPaymasterSetMinBalance, startPaymasterSetMinGas, startPaymasterSetPaymentToken, startPaymasterSetRelayHub, startPaymasterSetTarget, startPaymasterWhitelisToken, startPaymasterWithdraw } from '../store/actions';\nimport { ethers } from 'ethers';\nvar Errors;\n\n(function (Errors) {\n  Errors[Errors[\"SetMinBalance\"] = 0] = \"SetMinBalance\";\n  Errors[Errors[\"SetPaymentToken\"] = 1] = \"SetPaymentToken\";\n  Errors[Errors[\"SetFee\"] = 2] = \"SetFee\";\n  Errors[Errors[\"Whitelist\"] = 3] = \"Whitelist\";\n  Errors[Errors[\"SetGasUsedByPost\"] = 4] = \"SetGasUsedByPost\";\n  Errors[Errors[\"SetMinGas\"] = 5] = \"SetMinGas\";\n  Errors[Errors[\"SetTarget\"] = 6] = \"SetTarget\";\n  Errors[Errors[\"SetRelayHub\"] = 7] = \"SetRelayHub\";\n  Errors[Errors[\"SetForwarder\"] = 8] = \"SetForwarder\";\n  Errors[Errors[\"Withdraw\"] = 9] = \"Withdraw\";\n})(Errors || (Errors = {}));\n\nclass Admin extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      errorMessage: null,\n      minBalance: \"\",\n      errorType: null,\n      paymentToken: \"\",\n      fee: \"\",\n      whitelistTokenAdd: \"\",\n      whitelistToken: true,\n      gasUsedByPost: \"\",\n      minGas: \"\",\n      target: \"\",\n      relayHub: \"\",\n      forwarder: \"\",\n      withdrawReceiver: \"\",\n      withdrawAmount: \"\"\n    });\n\n    _defineProperty(this, \"onSetMinBalance\", () => {\n      const {\n        minBalance\n      } = this.state;\n      if (isNaN(Number(minBalance))) return this.setState({\n        errorMessage: \"Invalid Number\",\n        errorType: Errors.SetMinBalance\n      });\n      this.props.setMinBalance(minBalance);\n    });\n\n    _defineProperty(this, \"onSetPaymentToken\", () => {\n      const {\n        paymentToken\n      } = this.state;\n\n      if (!ethers.utils.isAddress(paymentToken.trim())) {\n        return this.setState({\n          errorMessage: \"Invalid Address\",\n          errorType: Errors.SetPaymentToken\n        });\n      }\n\n      this.props.setPaymentToken(paymentToken);\n    });\n\n    _defineProperty(this, \"onSetFee\", () => {\n      const {\n        fee\n      } = this.state;\n      if (isNaN(Number(fee))) return this.setState({\n        errorMessage: \"Invalid Number\",\n        errorType: Errors.SetFee\n      });\n      this.props.setFee(fee);\n    });\n\n    _defineProperty(this, \"onWhitelist\", () => {\n      const {\n        whitelistToken,\n        whitelistTokenAdd\n      } = this.state;\n\n      if (!ethers.utils.isAddress(whitelistTokenAdd.trim())) {\n        return this.setState({\n          errorMessage: \"Invalid Address\",\n          errorType: Errors.Whitelist\n        });\n      }\n\n      this.props.whitelistToken(whitelistTokenAdd, whitelistToken);\n    });\n\n    _defineProperty(this, \"onSetGasUsedByPost\", () => {\n      const {\n        gasUsedByPost\n      } = this.state;\n      if (isNaN(Number(gasUsedByPost))) return this.setState({\n        errorMessage: \"Invalid Number\",\n        errorType: Errors.SetGasUsedByPost\n      });\n      this.props.setGasUsedByPost(gasUsedByPost);\n    });\n\n    _defineProperty(this, \"onSetMinGas\", () => {\n      const {\n        minGas\n      } = this.state;\n      if (isNaN(Number(minGas))) return this.setState({\n        errorMessage: \"Invalid Number\",\n        errorType: Errors.SetMinGas\n      });\n      this.props.setMinGas(minGas);\n    });\n\n    _defineProperty(this, \"onSetTarget\", () => {\n      const {\n        target\n      } = this.state;\n\n      if (!ethers.utils.isAddress(target.trim())) {\n        return this.setState({\n          errorMessage: \"Invalid Address\",\n          errorType: Errors.SetTarget\n        });\n      }\n\n      this.props.setTarget(target);\n    });\n\n    _defineProperty(this, \"onSetRelayHub\", () => {\n      const {\n        relayHub\n      } = this.state;\n\n      if (!ethers.utils.isAddress(relayHub.trim())) {\n        return this.setState({\n          errorMessage: \"Invalid Address\",\n          errorType: Errors.SetRelayHub\n        });\n      }\n\n      this.props.setRelayHub(relayHub);\n    });\n\n    _defineProperty(this, \"onSetForwarder\", () => {\n      const {\n        forwarder\n      } = this.state;\n\n      if (!ethers.utils.isAddress(forwarder.trim())) {\n        return this.setState({\n          errorMessage: \"Invalid Address\",\n          errorType: Errors.SetForwarder\n        });\n      }\n\n      this.props.setForwarder(forwarder);\n    });\n\n    _defineProperty(this, \"onWithdraw\", () => {\n      const {\n        withdrawAmount,\n        withdrawReceiver\n      } = this.state;\n\n      if (!ethers.utils.isAddress(withdrawReceiver.trim())) {\n        return this.setState({\n          errorMessage: \"Invalid Address\",\n          errorType: Errors.Withdraw\n        });\n      }\n\n      if (isNaN(Number(withdrawAmount))) return this.setState({\n        errorMessage: \"Invalid Number\",\n        errorType: Errors.Withdraw\n      });\n      this.props.withdraw(withdrawAmount, withdrawReceiver);\n    });\n\n    _defineProperty(this, \"renderSetMinBalance\", () => {\n      return /*#__PURE__*/_jsx(Container, {\n        className: \"swap\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsxs(InputGroup, {\n            className: \"mb-\",\n            style: {\n              width: \"600px\",\n              margin: \"3em auto 0px auto\"\n            },\n            children: [/*#__PURE__*/_jsx(Form.Control, {\n              placeholder: \"Set Min Balance\",\n              \"aria-label\": \"Set Min Balance\",\n              \"aria-describedby\": \"basic-addon1\",\n              type: \"number\",\n              isInvalid: this.state.errorType === Errors.SetMinBalance,\n              value: this.state.minBalance,\n              onChange: ({\n                target\n              }) => this.setState({\n                minBalance: target.value,\n                errorMessage: null,\n                errorType: null\n              })\n            }), /*#__PURE__*/_jsx(Button, {\n              variant: \"outline-secondary\",\n              onClick: this.onSetMinBalance,\n              children: \"Send\"\n            })]\n          })\n        })\n      });\n    });\n\n    _defineProperty(this, \"renderSetPaymentToken\", () => {\n      return /*#__PURE__*/_jsx(Container, {\n        className: \"swap\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsxs(InputGroup, {\n            className: \"mb-\",\n            style: {\n              width: \"600px\",\n              margin: \"3em auto 0px auto\"\n            },\n            children: [/*#__PURE__*/_jsx(Form.Control, {\n              placeholder: \"Set Payment Token\",\n              \"aria-label\": \"Set Payment Token\",\n              \"aria-describedby\": \"basic-addon1\",\n              isInvalid: this.state.errorType === Errors.SetPaymentToken,\n              value: this.state.paymentToken,\n              onChange: ({\n                target\n              }) => this.setState({\n                paymentToken: target.value,\n                errorMessage: null,\n                errorType: null\n              })\n            }), /*#__PURE__*/_jsx(Button, {\n              variant: \"outline-secondary\",\n              onClick: this.onSetPaymentToken,\n              children: \"Send\"\n            })]\n          })\n        })\n      });\n    });\n\n    _defineProperty(this, \"renderSetFee\", () => {\n      return /*#__PURE__*/_jsx(Container, {\n        className: \"swap\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsxs(InputGroup, {\n            className: \"mb-\",\n            style: {\n              width: \"600px\",\n              margin: \"3em auto 0px auto\"\n            },\n            children: [/*#__PURE__*/_jsx(Form.Control, {\n              placeholder: \"Set Fee\",\n              \"aria-label\": \"Set Fee\",\n              \"aria-describedby\": \"basic-addon1\",\n              type: \"number\",\n              isInvalid: this.state.errorType === Errors.SetFee,\n              value: this.state.fee,\n              onChange: ({\n                target\n              }) => this.setState({\n                fee: target.value,\n                errorMessage: null,\n                errorType: null\n              })\n            }), /*#__PURE__*/_jsx(Button, {\n              variant: \"outline-secondary\",\n              onClick: this.onSetFee,\n              children: \"Send\"\n            })]\n          })\n        })\n      });\n    });\n\n    _defineProperty(this, \"renderwhitelistToken\", () => {\n      return /*#__PURE__*/_jsx(Container, {\n        className: \"swap\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsxs(InputGroup, {\n            className: \"mb-\",\n            style: {\n              width: \"600px\",\n              margin: \"3em auto 0px auto\"\n            },\n            children: [/*#__PURE__*/_jsx(InputGroup.Checkbox, {\n              \"aria-label\": \"True/False\",\n              checked: this.state.whitelistToken,\n              onChange: ({\n                target\n              }) => this.setState({\n                whitelistToken: target.checked,\n                errorMessage: null,\n                errorType: null\n              })\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              placeholder: \"Token Whitelist\",\n              \"aria-label\": \"Token Whitelist\",\n              \"aria-describedby\": \"basic-addon1\",\n              isInvalid: this.state.errorType === Errors.SetFee,\n              value: this.state.whitelistTokenAdd,\n              onChange: ({\n                target\n              }) => this.setState({\n                whitelistTokenAdd: target.value,\n                errorMessage: null,\n                errorType: null\n              })\n            }), /*#__PURE__*/_jsx(Button, {\n              variant: \"outline-secondary\",\n              onClick: this.onWhitelist,\n              children: \"Send\"\n            })]\n          })\n        })\n      });\n    });\n\n    _defineProperty(this, \"renderSetGasUsedByPost\", () => {\n      return /*#__PURE__*/_jsx(Container, {\n        className: \"swap\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsxs(InputGroup, {\n            className: \"mb-\",\n            style: {\n              width: \"600px\",\n              margin: \"3em auto 0px auto\"\n            },\n            children: [/*#__PURE__*/_jsx(Form.Control, {\n              placeholder: \"Set Gas Used By Post\",\n              \"aria-label\": \"Set Gas Used By Post\",\n              \"aria-describedby\": \"basic-addon1\",\n              type: \"number\",\n              isInvalid: this.state.errorType === Errors.SetGasUsedByPost,\n              value: this.state.gasUsedByPost,\n              onChange: ({\n                target\n              }) => this.setState({\n                gasUsedByPost: target.value,\n                errorMessage: null,\n                errorType: null\n              })\n            }), /*#__PURE__*/_jsx(Button, {\n              variant: \"outline-secondary\",\n              onClick: this.onSetGasUsedByPost,\n              children: \"Send\"\n            })]\n          })\n        })\n      });\n    });\n\n    _defineProperty(this, \"renderSetMinGas\", () => {\n      return /*#__PURE__*/_jsx(Container, {\n        className: \"swap\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsxs(InputGroup, {\n            className: \"mb-\",\n            style: {\n              width: \"600px\",\n              margin: \"3em auto 0px auto\"\n            },\n            children: [/*#__PURE__*/_jsx(Form.Control, {\n              placeholder: \"Set Min Gas Per Token Swap\",\n              \"aria-label\": \"Set Min Gas Per Token Swap\",\n              \"aria-describedby\": \"basic-addon1\",\n              type: \"number\",\n              isInvalid: this.state.errorType === Errors.SetMinGas,\n              value: this.state.minGas,\n              onChange: ({\n                target\n              }) => this.setState({\n                minGas: target.value,\n                errorMessage: null,\n                errorType: null\n              })\n            }), /*#__PURE__*/_jsx(Button, {\n              variant: \"outline-secondary\",\n              onClick: this.onSetMinGas,\n              children: \"Send\"\n            })]\n          })\n        })\n      });\n    });\n\n    _defineProperty(this, \"renderSetTarget\", () => {\n      return /*#__PURE__*/_jsx(Container, {\n        className: \"swap\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsxs(InputGroup, {\n            className: \"mb-\",\n            style: {\n              width: \"600px\",\n              margin: \"3em auto 0px auto\"\n            },\n            children: [/*#__PURE__*/_jsx(Form.Control, {\n              placeholder: \"Set Target Contract\",\n              \"aria-label\": \"Set Target Contract\",\n              \"aria-describedby\": \"basic-addon1\",\n              isInvalid: this.state.errorType === Errors.SetTarget,\n              value: this.state.target,\n              onChange: ({\n                target\n              }) => this.setState({\n                target: target.value,\n                errorMessage: null,\n                errorType: null\n              })\n            }), /*#__PURE__*/_jsx(Button, {\n              variant: \"outline-secondary\",\n              onClick: this.onSetTarget,\n              children: \"Send\"\n            })]\n          })\n        })\n      });\n    });\n\n    _defineProperty(this, \"renderSetRelayHub\", () => {\n      return /*#__PURE__*/_jsx(Container, {\n        className: \"swap\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsxs(InputGroup, {\n            className: \"mb-\",\n            style: {\n              width: \"600px\",\n              margin: \"3em auto 0px auto\"\n            },\n            children: [/*#__PURE__*/_jsx(Form.Control, {\n              placeholder: \"Set Relay Hub Contract\",\n              \"aria-label\": \"Set Relay Hub Contract\",\n              \"aria-describedby\": \"basic-addon1\",\n              isInvalid: this.state.errorType === Errors.SetRelayHub,\n              value: this.state.relayHub,\n              onChange: ({\n                target\n              }) => this.setState({\n                relayHub: target.value,\n                errorMessage: null,\n                errorType: null\n              })\n            }), /*#__PURE__*/_jsx(Button, {\n              variant: \"outline-secondary\",\n              onClick: this.onSetRelayHub,\n              children: \"Send\"\n            })]\n          })\n        })\n      });\n    });\n\n    _defineProperty(this, \"renderSetForwarder\", () => {\n      return /*#__PURE__*/_jsx(Container, {\n        className: \"swap\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsxs(InputGroup, {\n            className: \"mb-\",\n            style: {\n              width: \"600px\",\n              margin: \"3em auto 0px auto\"\n            },\n            children: [/*#__PURE__*/_jsx(Form.Control, {\n              placeholder: \"Set Forwarder Contract\",\n              \"aria-label\": \"Set Forwarder Contract\",\n              \"aria-describedby\": \"basic-addon1\",\n              isInvalid: this.state.errorType === Errors.SetForwarder,\n              value: this.state.forwarder,\n              onChange: ({\n                target\n              }) => this.setState({\n                forwarder: target.value,\n                errorMessage: null,\n                errorType: null\n              })\n            }), /*#__PURE__*/_jsx(Button, {\n              variant: \"outline-secondary\",\n              onClick: this.onSetForwarder,\n              children: \"Send\"\n            })]\n          })\n        })\n      });\n    });\n\n    _defineProperty(this, \"renderWithdraw\", () => {\n      return /*#__PURE__*/_jsx(Container, {\n        className: \"swap\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsxs(InputGroup, {\n            className: \"mb-\",\n            style: {\n              width: \"900px\",\n              margin: \"3em auto 0px auto\"\n            },\n            children: [/*#__PURE__*/_jsx(Form.Control, {\n              placeholder: \"Withdraw Amount\",\n              \"aria-label\": \"Withdraw Amount\",\n              \"aria-describedby\": \"basic-addon1\",\n              isInvalid: this.state.errorType === Errors.Withdraw,\n              value: this.state.withdrawAmount,\n              type: \"number\",\n              onChange: ({\n                target\n              }) => this.setState({\n                withdrawAmount: target.value,\n                errorMessage: null,\n                errorType: null\n              })\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              placeholder: \"Receiver Address\",\n              \"aria-label\": \"Receiver Address\",\n              \"aria-describedby\": \"basic-addon1\",\n              isInvalid: this.state.errorType === Errors.Withdraw,\n              value: this.state.withdrawReceiver,\n              onChange: ({\n                target\n              }) => this.setState({\n                withdrawReceiver: target.value,\n                errorMessage: null,\n                errorType: null\n              })\n            }), /*#__PURE__*/_jsx(Button, {\n              variant: \"outline-secondary\",\n              onClick: this.onWithdraw,\n              children: \"Send\"\n            })]\n          })\n        })\n      });\n    });\n\n    _defineProperty(this, \"renderErrorModal\", () => {\n      return /*#__PURE__*/_jsxs(Modal, {\n        show: !!this.state.errorMessage,\n        onHide: () => this.setState({\n          errorMessage: null\n        }),\n        children: [/*#__PURE__*/_jsx(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsx(Modal.Title, {\n            children: \"Error\"\n          })\n        }), /*#__PURE__*/_jsx(Modal.Body, {\n          children: this.state.errorMessage\n        }), /*#__PURE__*/_jsx(Modal.Footer, {\n          children: /*#__PURE__*/_jsx(Button, {\n            variant: \"secondary\",\n            onClick: () => this.setState({\n              errorMessage: null\n            }),\n            children: \"Close\"\n          })\n        })]\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"admin\",\n      children: [/*#__PURE__*/_jsx(BalancesContainer, {}), this.renderErrorModal(), this.renderWithdraw(), this.renderSetMinBalance(), this.renderSetPaymentToken(), this.renderSetFee(), this.renderwhitelistToken(), this.renderSetGasUsedByPost(), this.renderSetMinGas(), this.renderSetTarget(), this.renderSetRelayHub(), this.renderSetForwarder()]\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    web3State: getWeb3State(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMinBalance: amount => dispatch(startPaymasterSetMinBalance(amount)),\n    setPaymentToken: address => dispatch(startPaymasterSetPaymentToken(address)),\n    setFee: amount => dispatch(startPaymasterSetFee(amount)),\n    whitelistToken: (address, whitelist) => dispatch(startPaymasterWhitelisToken(address, whitelist)),\n    setGasUsedByPost: amount => dispatch(startPaymasterSetGasUsedByPost(amount)),\n    setMinGas: amount => dispatch(startPaymasterSetMinGas(amount)),\n    setTarget: address => dispatch(startPaymasterSetTarget(address)),\n    setRelayHub: address => dispatch(startPaymasterSetRelayHub(address)),\n    setForwarder: address => dispatch(startPaymasterSetForwarder(address)),\n    withdraw: (amount, receiver) => dispatch(startPaymasterWithdraw(amount, receiver))\n  };\n};\n\nconst AdminContainer = connect(mapStateToProps, mapDispatchToProps)(Admin);\nexport { AdminContainer };","map":null,"metadata":{},"sourceType":"module"}