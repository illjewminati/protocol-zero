// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface ISTN721 {

    event ChildAttached(address indexed stn721Child, uint256 tokenId);

    function attachChild(address stn721Child, uint256 tokenId) external returns (bool);

    function mint(bool divisible, uint256[] memory tokenIds, address receiver) external;

    function getParentAddress() external view returns(address);

    function getParentId() external view returns(uint256);

    function isDivisible(uint256 tokenId) external view returns(bool);

    function getChildIndexById(uint256 tokenId) external view returns(address);

    function getChildIndexByAddress(address stn721) external view returns(uint256);
}