{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport { StepKind } from '../../../types/steps-modal';\nimport { getStepTitle } from '../../../util/steps';\nimport { CloseModalButton } from '../icons/close_modal_button';\nimport { ModalContent } from './steps_common';\nimport { getStepsModalCurrentStep, getStepsModalDoneSteps, getStepsModalPendingSteps } from '../../../store/ui/selectors';\nimport { stepsModalReset } from '../../../store/actions';\nimport { AllowanceStepContainer } from './allowance_step';\nimport { SwapTokensStepContainer } from './swap_step';\nimport { SetMinBalanceStepContainer } from './admin_set_min_balance_step';\nimport { SetPaymentTokenStepContainer } from './admin_set_payment_token';\nimport { SetFeeStepStepContainer } from './admin_set_fee';\nimport { WhitelistTokenStepContainer } from './admin_whitelist_token_step';\nimport { SetGasUsedByPostStepContainer } from './admin_set_gas_used_by_post_step';\nimport { SetMinGasStepContainer } from './admin_set_min_gas';\nimport { SetTargetStepContainer } from './admin_set_target';\nimport { SetRelayHubStepContainer } from './admin_set_relay_hub_step';\nimport { SetForwarderStepContainer } from './admin_set_forwarder_step';\nimport { WithdrawStepContainer } from './admin_withdraw_step';\nconst modalThemeStyle = {\n  content: {\n    backgroundColor: '#fff',\n    borderColor: '#dedede',\n    bottom: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: '0',\n    left: 'auto',\n    maxHeight: '90%',\n    minWidth: '350px',\n    overflow: 'hidden',\n    padding: '16px',\n    position: 'relative',\n    right: 'auto',\n    top: 'auto'\n  },\n  overlay: {\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    display: 'flex',\n    justifyContent: 'center',\n    zIndex: '12345'\n  }\n};\n\nclass StepsModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"render\", () => {\n      const {\n        currentStep,\n        doneSteps,\n        pendingSteps,\n        reset\n      } = this.props;\n      const isOpen = currentStep !== null;\n\n      const buildStepsProgress = currentStepItem => [...doneSteps.map(doneStep => ({\n        title: getStepTitle(doneStep),\n        progress: 100,\n        active: false,\n        isLong: false\n      })), currentStepItem, ...pendingSteps.map(pendingStep => ({\n        title: getStepTitle(pendingStep),\n        progress: 0,\n        active: false,\n        isLong: false\n      }))]; // this is used to avoid an issue with two consecutive steps of the same kind\n\n\n      const stepIndex = doneSteps.length;\n      return /*#__PURE__*/_jsxs(Modal, {\n        ariaHideApp: false,\n        isOpen: isOpen,\n        style: modalThemeStyle,\n        children: [/*#__PURE__*/_jsx(CloseModalButton, {\n          onClick: reset\n        }), /*#__PURE__*/_jsxs(ModalContent, {\n          children: [currentStep && currentStep.kind === StepKind.Allowance && /*#__PURE__*/_jsx(AllowanceStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex), currentStep && currentStep.kind === StepKind.Swap && /*#__PURE__*/_jsx(SwapTokensStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex), currentStep && currentStep.kind === StepKind.SetMinBalance && /*#__PURE__*/_jsx(SetMinBalanceStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex), currentStep && currentStep.kind === StepKind.SetPaymentToken && /*#__PURE__*/_jsx(SetPaymentTokenStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex), currentStep && currentStep.kind === StepKind.SetFee && /*#__PURE__*/_jsx(SetFeeStepStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex), currentStep && currentStep.kind === StepKind.Whitelist && /*#__PURE__*/_jsx(WhitelistTokenStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex), currentStep && currentStep.kind === StepKind.SetGasUsedByPost && /*#__PURE__*/_jsx(SetGasUsedByPostStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex), currentStep && currentStep.kind === StepKind.SetMinGas && /*#__PURE__*/_jsx(SetMinGasStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex), currentStep && currentStep.kind === StepKind.SetTarget && /*#__PURE__*/_jsx(SetTargetStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex), currentStep && currentStep.kind === StepKind.SetTarget && /*#__PURE__*/_jsx(SetRelayHubStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex), currentStep && currentStep.kind === StepKind.SetForwarder && /*#__PURE__*/_jsx(SetForwarderStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex), currentStep && currentStep.kind === StepKind.Withdraw && /*#__PURE__*/_jsx(WithdrawStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex)]\n        })]\n      });\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentStep: getStepsModalCurrentStep(state),\n    doneSteps: getStepsModalDoneSteps(state),\n    pendingSteps: getStepsModalPendingSteps(state)\n  };\n};\n\nconst StepsModalContainer = connect(mapStateToProps, {\n  reset: stepsModalReset\n})(StepsModal);\nexport { StepsModal, StepsModalContainer };","map":null,"metadata":{},"sourceType":"module"}