{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getContract } from \"./contract_loader\";\nimport * as artifact from \"../../artifacts/@opengsn/contracts/src/interfaces/IRelayHub.sol/IRelayHub.json\";\nvar address = process.env.GSN_RELAY_HUB;\nexport var loadRelayHubContract = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(signer) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", getContract(address, artifact.abi, signer));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadRelayHubContract(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/services/relay_hub.ts"],"names":["getContract","artifact","address","process","env","GSN_RELAY_HUB","loadRelayHubContract","signer","abi"],"mappings":";;AACA,SAASA,WAAT,QAA4B,mBAA5B;AAEA,OAAO,KAAKC,QAAZ,MAA0B,gFAA1B;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAA5B;AAEA,OAAO,IAAMC,oBAAoB;AAAA,sEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6CACzBP,WAAW,CAACE,OAAD,EAAUD,QAAQ,CAACO,GAAnB,EAAwBD,MAAxB,CADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBD,oBAAoB;AAAA;AAAA;AAAA,GAA1B","sourcesContent":["import { Contract, ethers, Signer } from \"ethers\"\nimport { getContract } from \"./contract_loader\"\n\nimport * as artifact from \"../../artifacts/@opengsn/contracts/src/interfaces/IRelayHub.sol/IRelayHub.json\";\n\nconst address = process.env.GSN_RELAY_HUB;\n\nexport const loadRelayHubContract = async (signer: Signer): Promise<Contract> => {\n    return getContract(address, artifact.abi, signer)\n}"]},"metadata":{},"sourceType":"module"}