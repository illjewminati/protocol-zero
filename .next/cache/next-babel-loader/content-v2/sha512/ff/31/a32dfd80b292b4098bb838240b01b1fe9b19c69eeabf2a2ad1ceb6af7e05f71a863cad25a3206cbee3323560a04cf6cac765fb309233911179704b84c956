{"ast":null,"code":"export var configSchema = {\n  id: '/configSchema',\n  properties: {\n    tokens: {\n      type: 'array',\n      items: {\n        $ref: '/tokenMetaDataSchema'\n      }\n    }\n  },\n  required: ['tokens'],\n  type: 'object'\n};\nexport var schemas = [{\n  id: '/wholeNumberSchema',\n  anyOf: [{\n    type: 'string',\n    pattern: '^\\\\d+$'\n  }, {\n    type: 'integer'\n  }]\n}, {\n  id: '/tokenMetaDataSchema',\n  properties: {\n    symbol: {\n      type: 'string'\n    },\n    name: {\n      type: 'string'\n    },\n    icon: {\n      type: 'string'\n    },\n    primaryColor: {\n      type: 'string'\n    },\n    decimals: {\n      $ref: '/wholeNumberSchema'\n    },\n    displayDecimals: {\n      $ref: '/wholeNumberSchema'\n    }\n  },\n  required: ['decimals', 'symbol', 'name', 'addresses'],\n  type: 'object'\n}, {\n  id: '/configSchema',\n  properties: {\n    tokens: {\n      type: 'array',\n      items: {\n        $ref: '/tokenMetaDataSchema'\n      }\n    }\n  },\n  required: ['tokens'],\n  type: 'object'\n}];","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/common/configSchema.ts"],"names":["configSchema","id","properties","tokens","type","items","$ref","required","schemas","anyOf","pattern","symbol","name","icon","primaryColor","decimals","displayDecimals"],"mappings":"AAEA,OAAO,IAAMA,YAAoB,GAAG;AAChCC,EAAAA,EAAE,EAAE,eAD4B;AAEhCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAAxB;AADA,GAFoB;AAKhCC,EAAAA,QAAQ,EAAE,CAAC,QAAD,CALsB;AAMhCH,EAAAA,IAAI,EAAE;AAN0B,CAA7B;AASP,OAAO,IAAMI,OAAiB,GAAG,CAC7B;AACIP,EAAAA,EAAE,EAAE,oBADR;AAEIQ,EAAAA,KAAK,EAAE,CACH;AACIL,IAAAA,IAAI,EAAE,QADV;AAEIM,IAAAA,OAAO,EAAE;AAFb,GADG,EAKH;AACIN,IAAAA,IAAI,EAAE;AADV,GALG;AAFX,CAD6B,EAc7B;AACIH,EAAAA,EAAE,EAAE,sBADR;AAEIC,EAAAA,UAAU,EAAE;AACRS,IAAAA,MAAM,EAAE;AAAEP,MAAAA,IAAI,EAAE;AAAR,KADA;AAERQ,IAAAA,IAAI,EAAE;AAAER,MAAAA,IAAI,EAAE;AAAR,KAFE;AAGRS,IAAAA,IAAI,EAAE;AAAET,MAAAA,IAAI,EAAE;AAAR,KAHE;AAIRU,IAAAA,YAAY,EAAE;AAAEV,MAAAA,IAAI,EAAE;AAAR,KAJN;AAKRW,IAAAA,QAAQ,EAAE;AAAET,MAAAA,IAAI,EAAE;AAAR,KALF;AAMRU,IAAAA,eAAe,EAAE;AAAEV,MAAAA,IAAI,EAAE;AAAR;AANT,GAFhB;AAUIC,EAAAA,QAAQ,EAAE,CAAC,UAAD,EAAa,QAAb,EAAuB,MAAvB,EAA+B,WAA/B,CAVd;AAWIH,EAAAA,IAAI,EAAE;AAXV,CAd6B,EA4B7B;AACIH,EAAAA,EAAE,EAAE,eADR;AAEIC,EAAAA,UAAU,EAAE;AACRC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAAxB;AADA,GAFhB;AAKIC,EAAAA,QAAQ,EAAE,CAAC,QAAD,CALd;AAMIH,EAAAA,IAAI,EAAE;AANV,CA5B6B,CAA1B","sourcesContent":["import { Schema } from 'jsonschema';\n\nexport const configSchema: Schema = {\n    id: '/configSchema',\n    properties: {\n        tokens: { type: 'array', items: { $ref: '/tokenMetaDataSchema' } },\n    },\n    required: ['tokens'],\n    type: 'object',\n};\n\nexport const schemas: Schema[] = [\n    {\n        id: '/wholeNumberSchema',\n        anyOf: [\n            {\n                type: 'string',\n                pattern: '^\\\\d+$',\n            },\n            {\n                type: 'integer',\n            },\n        ],\n    },\n\n    {\n        id: '/tokenMetaDataSchema',\n        properties: {\n            symbol: { type: 'string' },\n            name: { type: 'string' },\n            icon: { type: 'string' },\n            primaryColor: { type: 'string' },\n            decimals: { $ref: '/wholeNumberSchema' },\n            displayDecimals: { $ref: '/wholeNumberSchema' },\n        },\n        required: ['decimals', 'symbol', 'name', 'addresses'],\n        type: 'object',\n    },\n\n    {\n        id: '/configSchema',\n        properties: {\n            tokens: { type: 'array', items: { $ref: '/tokenMetaDataSchema' } },\n        },\n        required: ['tokens'],\n        type: 'object',\n    },\n];\n"]},"metadata":{},"sourceType":"module"}