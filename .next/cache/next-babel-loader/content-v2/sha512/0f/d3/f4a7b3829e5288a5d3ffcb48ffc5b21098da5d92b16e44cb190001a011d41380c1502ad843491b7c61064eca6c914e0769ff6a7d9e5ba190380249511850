{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { BigNumber } from 'bignumber.js';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { ETH, getAddress, TokensFactoryPublic, TradeDirection, UniswapPair, UniswapPairSettings, UniswapSubscription } from 'simple-uniswap-sdk';\nimport { ChainService } from './chain';\nimport { CoinGecko } from './coin-gecko';\nimport { EthereumProvider } from './ethereum-provider';\nimport { MiningAction, SelectTokenActionFrom, TransactionStatus } from './models';\nimport { Theming } from './theming';\nimport { TokenService } from './token';\nimport { Utils } from './utils';\n\nvar UniswapDappSharedLogic =\n/** @class */\nfunction () {\n  function UniswapDappSharedLogic(_context) {\n    this._context = _context;\n    this.inputToken$ = new Subject();\n    this.outputToken$ = new Subject();\n    this.tradeContext$ = new Subject();\n    this.newPriceTradeContext$ = new Subject();\n    this.loading$ = new BehaviorSubject(false);\n    this.supportedTokenBalances = [];\n    this.uniswapPairSettings = new UniswapPairSettings();\n    this.uniswapPairSettings$ = new Subject();\n    this.selectorOpenFrom$ = new Subject();\n    this.chainId$ = new Subject();\n    this.supportedNetwork = false;\n    this.supportedNetwork$ = new BehaviorSubject(false);\n    this.miningTransaction$ = new BehaviorSubject(undefined);\n    this.tradeCompleted$ = new BehaviorSubject(false);\n    this._confirmSwapOpened = false;\n    this._inputAmount = new BigNumber('0');\n    this._quoteSubscription = UniswapSubscription.EMPTY; // services\n\n    this._ethereumProvider = new EthereumProvider(this._context.ethereumAddress, this._context.ethereumProvider);\n    this._coinGecko = new CoinGecko();\n    this._theming = new Theming(this._context.theming);\n    this._tokenService = new TokenService(this._ethereumProvider, this._context.supportedNetworkTokens);\n    this._chainService = new ChainService(this._ethereumProvider);\n    this._blockStream = Subscription.EMPTY;\n\n    if (this._context.settings) {\n      this.uniswapPairSettings = this._context.settings;\n    }\n\n    this.uniswapPairSettings$.next(this.uniswapPairSettings);\n  }\n  /**\r\n   * Init the shared logic\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.init = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var eth, supportedNetworkTokens, inputToken, _a, _c;\n\n      var _this = this;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            this.loading$.next(true);\n            this.supportedNetwork = false;\n            this.supportedNetwork$.next(this.supportedNetwork);\n\n            this._quoteSubscription.unsubscribe();\n\n            this._blockStream.unsubscribe();\n\n            return [4\n            /*yield*/\n            , this.setupEthereumContext()];\n\n          case 1:\n            _d.sent();\n\n            if (!this.supportedNetwork) {\n              this.loading$.next(false);\n              return [2\n              /*return*/\n              ];\n            }\n\n            eth = ETH.info(this.chainId);\n            supportedNetworkTokens = this._context.supportedNetworkTokens.find(function (t) {\n              return t.chainId === _this.chainId;\n            });\n\n            if (supportedNetworkTokens.defaultInputValue && this._inputAmount.isZero()) {\n              this._inputAmount = new BigNumber(supportedNetworkTokens.defaultInputValue);\n            }\n\n            if (!supportedNetworkTokens.supportedTokens.find(function (c) {\n              return c.contractAddress.toLowerCase() === eth.contractAddress.toLowerCase();\n            })) {\n              supportedNetworkTokens.supportedTokens.push({\n                contractAddress: eth.contractAddress\n              });\n            }\n\n            inputToken = supportedNetworkTokens.defaultInputToken || eth.contractAddress;\n            _a = this;\n            return [4\n            /*yield*/\n            , this._tokenService.getTokenInformation(inputToken, this._context.ethereumProvider)];\n\n          case 2:\n            _a.inputToken = _d.sent();\n            this.inputToken$.next(this.inputToken);\n            return [4\n            /*yield*/\n            , this.getBalances()];\n\n          case 3:\n            _d.sent();\n\n            this._blockStream = this.subscribeToBlockStream();\n\n            this._theming.apply();\n\n            if (!supportedNetworkTokens.defaultOutputToken) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.buildFactory(this.inputToken.contractAddress, supportedNetworkTokens.defaultOutputToken)];\n\n          case 4:\n            _d.sent();\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 5:\n            _c = this;\n            return [4\n            /*yield*/\n            , this._tokenService.getTokenInformation(inputToken, this._context.ethereumProvider)];\n\n          case 6:\n            _c.inputToken = _d.sent();\n            this.inputToken$.next(this.inputToken);\n            _d.label = 7;\n\n          case 7:\n            if (this._inputAmount && this.inputToken && this.outputToken) {\n              this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress);\n            } // resync once got context so ordering of tokens\n            // can sync\n\n\n            this.getBalances();\n            this.loading$.next(false);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Destroy logic\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.destroy = function () {\n    var _a;\n\n    this._quoteSubscription.unsubscribe();\n\n    this._blockStream.unsubscribe();\n\n    this._chainService.unwatch();\n\n    (_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.destroy();\n  };\n  /**\r\n   * Change ethereum address for your dApp if your provider does not\r\n   * emit the event `accountsChanged`\r\n   * @param ethereumAddress The ethereum address\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeEthereumAddress = function (ethereumAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this._quoteSubscription.unsubscribe();\n\n        this._ethereumProvider.updateEthereumAddress(ethereumAddress);\n\n        this.init();\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\r\n   * Change the chain for your dApp if your provider does not\r\n   * emit the event `chainChanged`. Your ethereum provider you passed\r\n   * to the lib if changed will work without passing a `newEthereumProvider`\r\n   * if its a brand new instance you need to pass the lib the new ethereum provider\r\n   * @param newEthereumProvider The new ethereum provider\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeChain = function (newEthereumProvider) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (newEthereumProvider) {\n          this._context.ethereumProvider = newEthereumProvider;\n        }\n\n        this._ethereumProvider = new EthereumProvider(this._context.ethereumAddress, this._context.ethereumProvider);\n        this._chainService = new ChainService(this._ethereumProvider);\n        this._tokenService = new TokenService(this._ethereumProvider, this._context.supportedNetworkTokens);\n\n        this._quoteSubscription.unsubscribe();\n\n        this.init();\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\r\n   * Setup ethereum context\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.setupEthereumContext = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      var _this = this;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this;\n            return [4\n            /*yield*/\n            , this._ethereumProvider.provider.getNetwork()];\n\n          case 1:\n            _a.chainId = _c.sent().chainId;\n            this.chainId$.next(this.chainId);\n            this.supportedNetwork = this._ethereumProvider.isSupportedChain(this.chainId, this._context.supportedNetworkTokens);\n            this.supportedNetwork$.next(this.supportedNetwork);\n\n            if (this.supportedNetwork) {\n              this._tokensFactoryPublic = new TokensFactoryPublic({\n                chainId: this.chainId\n              });\n            } // handle chain and account changes automatically\n            // if they have event handlers on\n\n\n            if (this._context.ethereumProvider.on) {\n              this._context.ethereumProvider.on('accountsChanged', function (accounts) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4\n                        /*yield*/\n                        , this.changeEthereumAddress(accounts[0])];\n\n                      case 1:\n                        _a.sent();\n\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                });\n              });\n\n              this._context.ethereumProvider.on('chainChanged', function () {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4\n                        /*yield*/\n                        , this.changeChain()];\n\n                      case 1:\n                        _a.sent();\n\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                });\n              });\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Send the approve allowance\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.approveAllowance = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this._theming.hideSettings();\n\n            this.miningTransaction = {\n              status: TransactionStatus.waitingForConfirmation,\n              miningAction: MiningAction.approval\n            };\n            this.miningTransaction$.next(this.miningTransaction);\n            return [4\n            /*yield*/\n            , this.handleTransaction(this.tradeContext.approvalTransaction, this.miningTransaction)];\n\n          case 1:\n            _a.sent();\n\n            if (this.miningTransaction.status === TransactionStatus.completed) {\n              this.miningTransaction = undefined;\n              this.miningTransaction$.next(this.miningTransaction);\n              this.tradeContext.approvalTransaction = undefined;\n              this.tradeContext.hasEnoughAllowance = true;\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Send the swap transaction\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.swapTransaction = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.miningTransaction = {\n              status: TransactionStatus.waitingForConfirmation,\n              miningAction: MiningAction.swap\n            };\n            this.miningTransaction$.next(this.miningTransaction);\n            this.showTransaction();\n            return [4\n            /*yield*/\n            , this.handleTransaction(this.tradeContext.transaction, this.miningTransaction)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Toggle showing and hiding the settings\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.toggleSettings = function () {\n    if (!this.transactionInProcess()) {\n      this._theming.toggleSettings();\n    }\n  };\n  /**\r\n   * Open token selector from\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.openTokenSelectorFrom = function () {\n    this._theming.showTokenSelector();\n\n    this.selectorOpenFrom = SelectTokenActionFrom.input;\n    this.selectorOpenFrom$.next(this.selectorOpenFrom);\n  };\n  /**\r\n   * Open token selector to\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.openTokenSelectorTo = function () {\n    this._theming.showTokenSelector();\n\n    this.selectorOpenFrom = SelectTokenActionFrom.output;\n    this.selectorOpenFrom$.next(this.selectorOpenFrom);\n  };\n  /**\r\n   * Hide the token selector\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.hideTokenSelector = function () {\n    this.selectorOpenFrom = undefined;\n    this.currentTokenSearch = undefined;\n\n    this._theming.hideTokenSelector();\n  };\n  /**\r\n   * Show the confirm swap modal\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.showConfirmSwap = function () {\n    this._theming.showConfirmSwap();\n\n    this._confirmSwapOpened = true;\n  };\n  /**\r\n   * Hide the confirm swap modal\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.hideConfirmSwap = function () {\n    this._theming.hideConfirmSwap();\n\n    this._confirmSwapOpened = false;\n    this.acceptPriceChange();\n  };\n  /**\r\n   * Show transaction modal\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.showTransaction = function () {\n    this._theming.hideConfirmSwap();\n\n    this._theming.showTransaction();\n  };\n  /**\r\n   * Hide the transaction modal\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.hideTransaction = function () {\n    var _a;\n\n    this._theming.hideTransaction();\n\n    this.miningTransaction = undefined;\n    this.miningTransaction$.next(this.miningTransaction);\n    (_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.destroy();\n    this.tradeContext = undefined;\n    this.tradeContext$.next(undefined);\n    this._inputAmount = new BigNumber(0); // let the client know the swap all done to clear down the fields\n\n    this.tradeCompleted$.next(true);\n    this.tradeCompleted$.next(false);\n    this.hideConfirmSwap();\n  };\n  /**\r\n   * Change token selected\r\n   * @param contractAddress The contract address\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeToken = function (contractAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this.selectorOpenFrom;\n\n            switch (_a) {\n              case SelectTokenActionFrom.input:\n                return [3\n                /*break*/\n                , 1];\n\n              case SelectTokenActionFrom.output:\n                return [3\n                /*break*/\n                , 3];\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 1:\n            return [4\n            /*yield*/\n            , this.changeInputToken(contractAddress)];\n\n          case 2:\n            _c.sent();\n\n            return [2\n            /*return*/\n            ];\n\n          case 3:\n            return [4\n            /*yield*/\n            , this.changeOutputToken(contractAddress)];\n\n          case 4:\n            _c.sent();\n\n            _c.label = 5;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Change trade price\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeTradePrice = function (amount, directon) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (directon === TradeDirection.input) {\n              this._inputAmount = new BigNumber(amount);\n            }\n\n            if (!!this.factory) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [4\n            /*yield*/\n            , this.trade(new BigNumber(amount), directon)];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Set max input\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.setMaxInput = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var maxBalance;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            maxBalance = this.inputToken.balance.toFixed();\n            return [4\n            /*yield*/\n            , this.changeTradePrice(maxBalance, TradeDirection.input)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , maxBalance];\n        }\n      });\n    });\n  };\n  /**\r\n   * Swap switch\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.swapSwitch = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var clonedOutput, clonedInput, amount, amount;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            clonedOutput = Utils.deepClone(this.outputToken);\n            clonedInput = Utils.deepClone(this.inputToken);\n            return [4\n            /*yield*/\n            , this.buildFactory(clonedOutput.contractAddress, clonedInput.contractAddress, false)];\n\n          case 1:\n            _a.sent();\n\n            if (!this.tradeContext) return [3\n            /*break*/\n            , 6];\n            if (!(this.tradeContext.quoteDirection === TradeDirection.output)) return [3\n            /*break*/\n            , 3];\n            amount = Utils.deepClone(this.tradeContext.baseConvertRequest);\n            return [4\n            /*yield*/\n            , this.trade(new BigNumber(amount), TradeDirection.input)];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , {\n              outputValue: this.tradeContext.expectedConvertQuote,\n              inputValue: amount\n            }];\n\n          case 3:\n            amount = Utils.deepClone(this.tradeContext.baseConvertRequest);\n            return [4\n            /*yield*/\n            , this.trade(new BigNumber(amount), TradeDirection.output)];\n\n          case 4:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , {\n              outputValue: amount,\n              inputValue: this.tradeContext.expectedConvertQuote\n            }];\n\n          case 5:\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            return [2\n            /*return*/\n            , {\n              outputValue: '',\n              inputValue: ''\n            }];\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Accept the price change\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.acceptPriceChange = function () {\n    if (this.newPriceTradeContext) {\n      this.tradeContext = this.newPriceTradeContext;\n      this.tradeContext$.next(this.tradeContext);\n    }\n\n    this.newPriceTradeContext = undefined;\n    this.newPriceTradeContext$.next(undefined);\n  };\n  /**\r\n   * work out what 1 is equal to\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.workOutOneEqualTo = function () {\n    return Utils.toPrecision(new BigNumber(+this.tradeContext.expectedConvertQuote / +this.tradeContext.baseConvertRequest));\n  };\n  /**\r\n   * Set multihops\r\n   * @param disableMultihops The status of disable multihops\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.setDisableMultihops = function (disableMultihops) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (disableMultihops === this.uniswapPairSettings.disableMultihops) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            this.uniswapPairSettings.disableMultihops = disableMultihops;\n            this.uniswapPairSettings$.next(this.uniswapPairSettings);\n            return [4\n            /*yield*/\n            , this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress, false)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.executeTradeAndHonourLastTradeDirection()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Set transaction deadline\r\n   * @param deadlineMinutes The deadline minutes the tx has to be mined before it fails\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.setTransactionDeadline = function (deadlineMinutes) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (Number(deadlineMinutes) === this.uniswapPairSettings.deadlineMinutes) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (deadlineMinutes === '') {\n              this.uniswapPairSettings.deadlineMinutes = 20;\n            } else {\n              this.uniswapPairSettings.deadlineMinutes = Number(deadlineMinutes);\n            }\n\n            this.uniswapPairSettings$.next(this.uniswapPairSettings);\n            return [4\n            /*yield*/\n            , this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress, false)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.executeTradeAndHonourLastTradeDirection()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Set transaction slippage\r\n   * @param slippage The slippage the route can take\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.setSlippage = function (slippage) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (Number(slippage) / 100 === this.uniswapPairSettings.slippage) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (slippage === '') {\n              this.uniswapPairSettings.slippage = 0.005;\n            } else {\n              this.uniswapPairSettings.slippage = Number(slippage) / 100;\n            }\n\n            this.uniswapPairSettings$.next(this.uniswapPairSettings);\n            return [4\n            /*yield*/\n            , this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress, false)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.executeTradeAndHonourLastTradeDirection()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Search for tokens\r\n   * @param search The search term\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.searchToken = function (search) {\n    this.currentTokenSearch = search;\n    this.supportedTokenBalances = this._tokenService.searchToken(search, this.supportedTokenBalances);\n    return this.supportedTokenBalances;\n  };\n  /**\r\n   * See if the transaction is in process\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.transactionInProcess = function () {\n    var _a, _c;\n\n    return ((_a = this.miningTransaction) === null || _a === void 0 ? void 0 : _a.status) === TransactionStatus.waitingForConfirmation || ((_c = this.miningTransaction) === null || _c === void 0 ? void 0 : _c.status) === TransactionStatus.mining;\n  };\n  /**\r\n   * View the tx on etherscan\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.viewOnEtherscan = function () {\n    var _a;\n\n    if ((_a = this.miningTransaction) === null || _a === void 0 ? void 0 : _a.blockExplorerLink) {\n      window.open(this.miningTransaction.blockExplorerLink, '_blank');\n    }\n  };\n  /**\r\n   * Execute the trade but honour the last trade direction\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.executeTradeAndHonourLastTradeDirection = function () {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!(((_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.quoteDirection) === TradeDirection.output)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.trade(new BigNumber(Utils.deepClone(this.tradeContext.baseConvertRequest)), TradeDirection.output)];\n\n          case 1:\n            _c.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this.trade(this._inputAmount, TradeDirection.input)];\n\n          case 3:\n            _c.sent();\n\n            _c.label = 4;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Handle transaction\r\n   * @param transaction The transaction\r\n   * @param miningTransaction The mining transaction\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.handleTransaction = function (transaction, miningTransaction) {\n    return __awaiter(this, void 0, void 0, function () {\n      var txHash_1, blockStream_1, error_1;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._ethereumProvider.sendAsync(transaction)];\n\n          case 1:\n            txHash_1 = _a.sent();\n\n            this._quoteSubscription.unsubscribe();\n\n            miningTransaction.status = TransactionStatus.mining;\n            miningTransaction.txHash = txHash_1;\n            miningTransaction.blockExplorerLink = this._chainService.getBlockExplorerLinkForTransactionHash(this.chainId, txHash_1);\n            this.miningTransaction$.next(miningTransaction);\n            blockStream_1 = Subscription.EMPTY;\n            return [4\n            /*yield*/\n            , new Promise(function (resolve, reject) {\n              blockStream_1 = _this._chainService.newBlock$.subscribe(function () {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var receipt, error_2;\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        _a.trys.push([0, 2,, 3]);\n\n                        return [4\n                        /*yield*/\n                        , this._ethereumProvider.provider.getTransactionReceipt(txHash_1)];\n\n                      case 1:\n                        receipt = _a.sent();\n\n                        if (receipt) {\n                          resolve();\n                          this.miningTransaction.status = TransactionStatus.completed;\n                          this.miningTransaction$.next(miningTransaction);\n                        }\n\n                        return [3\n                        /*break*/\n                        , 3];\n\n                      case 2:\n                        error_2 = _a.sent();\n                        blockStream_1.unsubscribe();\n                        reject(error_2);\n                        return [3\n                        /*break*/\n                        , 3];\n\n                      case 3:\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                });\n              });\n            })];\n\n          case 2:\n            _a.sent();\n\n            blockStream_1.unsubscribe();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _a.sent();\n            miningTransaction.status = TransactionStatus.rejected;\n            this.miningTransaction$.next(miningTransaction);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Change input token\r\n   * @param contractAddress The contract address\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeInputToken = function (contractAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.changeTokenHandler(contractAddress, this.outputToken.contractAddress)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Change output token\r\n   * @param contractAddress The contract address\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeOutputToken = function (contractAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.changeTokenHandler(this.inputToken.contractAddress, contractAddress)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Change token handler\r\n   * @param inputToken The input token\r\n   * @param outputToken The output token\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeTokenHandler = function (inputToken, outputToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.hideTokenSelector();\n            return [4\n            /*yield*/\n            , this.buildFactory(inputToken, outputToken, false)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.executeTradeAndHonourLastTradeDirection()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Build factory\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.buildFactory = function (inputToken, outputToken, executeTrade) {\n    var _a;\n\n    if (executeTrade === void 0) {\n      executeTrade = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var uniswapPair, _c, fiatPrices, _d, _e, _f, _g, _h, _j, _k, _l;\n\n      return __generator(this, function (_m) {\n        switch (_m.label) {\n          case 0:\n            (_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.destroy();\n            inputToken = getAddress(inputToken, true);\n            outputToken = getAddress(outputToken, true);\n            uniswapPair = this.createUniswapPairContext(inputToken, outputToken, this.uniswapPairSettings);\n            _c = this;\n            return [4\n            /*yield*/\n            , uniswapPair.createFactory()];\n\n          case 1:\n            _c.factory = _m.sent();\n            return [4\n            /*yield*/\n            , this._coinGecko.getCoinGeckoFiatPrices([this.factory.fromToken.contractAddress, this.factory.toToken.contractAddress], this.chainId)];\n\n          case 2:\n            fiatPrices = _m.sent();\n            _d = this;\n            _f = (_e = this._tokenService).buildExtendedToken;\n            _g = [this.factory.fromToken];\n            return [4\n            /*yield*/\n            , this.factory.getFromTokenBalance()];\n\n          case 3:\n            return [4\n            /*yield*/\n            , _f.apply(_e, _g.concat([_m.sent(), fiatPrices]))];\n\n          case 4:\n            _d.inputToken = _m.sent();\n            this.inputToken$.next(this.inputToken);\n            _h = this;\n            _k = (_j = this._tokenService).buildExtendedToken;\n            _l = [this.factory.toToken];\n            return [4\n            /*yield*/\n            , this.factory.getToTokenBalance()];\n\n          case 5:\n            return [4\n            /*yield*/\n            , _k.apply(_j, _l.concat([_m.sent(), fiatPrices]))];\n\n          case 6:\n            _h.outputToken = _m.sent();\n            this.outputToken$.next(this.outputToken);\n            if (!executeTrade) return [3\n            /*break*/\n            , 8];\n            return [4\n            /*yield*/\n            , this.trade(this._inputAmount, TradeDirection.input)];\n\n          case 7:\n            _m.sent();\n\n            _m.label = 8;\n\n          case 8:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Create uniswap pair context\r\n   * @param inputToken The input token\r\n   * @param outputToken The output token\r\n   * @param settings The settings\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.createUniswapPairContext = function (inputToken, outputToken, settings) {\n    if (this._context.ethereumProvider) {\n      return new UniswapPair({\n        fromTokenContractAddress: inputToken,\n        toTokenContractAddress: outputToken,\n        ethereumAddress: this._ethereumProvider.address,\n        ethereumProvider: this._context.ethereumProvider,\n        settings: settings\n      });\n    }\n\n    return new UniswapPair({\n      fromTokenContractAddress: inputToken,\n      toTokenContractAddress: outputToken,\n      ethereumAddress: this._ethereumProvider.address,\n      chainId: this.chainId,\n      ethereumProvider: this._ethereumProvider.provider,\n      settings: settings\n    });\n  };\n  /**\r\n   * Execute the trade quote\r\n   * @param amount The amount\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.trade = function (amount, direction) {\n    return __awaiter(this, void 0, void 0, function () {\n      var context;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!amount.isGreaterThan(0)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.factory.trade(amount.toFixed(), direction)];\n\n          case 1:\n            context = _a.sent();\n            this.tradeContext = this.formatTradeContext(context);\n            this.tradeContext$.next(this.tradeContext);\n            this._quoteSubscription = this.tradeContext.quoteChanged$.subscribe(function (quote) {\n              var _a, _c, _d;\n\n              if (((_a = _this.miningTransaction) === null || _a === void 0 ? void 0 : _a.miningAction) === MiningAction.swap && (((_c = _this.miningTransaction) === null || _c === void 0 ? void 0 : _c.status) === TransactionStatus.mining || ((_d = _this.miningTransaction) === null || _d === void 0 ? void 0 : _d.status) === TransactionStatus.completed)) {\n                _this._quoteSubscription.unsubscribe();\n\n                return;\n              }\n\n              var formattedQuote = _this.formatTradeContext(quote);\n\n              if (_this._confirmSwapOpened) {\n                _this.newPriceTradeContext = formattedQuote;\n\n                _this.newPriceTradeContext$.next(_this.newPriceTradeContext);\n              } else {\n                _this.tradeContext = formattedQuote;\n\n                _this.tradeContext$.next(_this.tradeContext);\n              }\n            });\n\n            if (this.tradeContext.quoteDirection === TradeDirection.output) {\n              this._inputAmount = new BigNumber(Utils.deepClone(this.tradeContext.expectedConvertQuote));\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Format trade context values\r\n   * @param context The context\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.formatTradeContext = function (context) {\n    context.liquidityProviderFee = Utils.toPrecision(context.liquidityProviderFee);\n\n    if (context.minAmountConvertQuote) {\n      context.minAmountConvertQuote = Utils.toPrecision(context.minAmountConvertQuote);\n    }\n\n    if (context.maximumSent) {\n      context.maximumSent = Utils.toPrecision(context.maximumSent);\n    }\n\n    context.expectedConvertQuote = Utils.toPrecision(context.expectedConvertQuote);\n    return context;\n  };\n  /**\r\n   * Subscribe to the block stream\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.subscribeToBlockStream = function () {\n    var _this = this;\n\n    return this._chainService.newBlock$.subscribe(function (block) {\n      _this.blockNumber = block;\n\n      _this.getBalances();\n    });\n  };\n  /**\r\n   * Get the balances of the supported contracts\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.getBalances = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var tokenWithAllowanceInfo, fiatPrices_1, _a, inputToken, newInputBalance, newInputFiatPrice, outputToken, newOutputBalance, newOutputFiatPrice;\n\n      var _this = this;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!this.supportedNetwork) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this._tokensFactoryPublic.getAllowanceAndBalanceOfForContracts(this._ethereumProvider.address, this._context.supportedNetworkTokens.find(function (t) {\n              return t.chainId === _this.chainId;\n            }).supportedTokens.map(function (c) {\n              return getAddress(c.contractAddress, true);\n            }), true)];\n\n          case 1:\n            tokenWithAllowanceInfo = _c.sent();\n            return [4\n            /*yield*/\n            , this._coinGecko.getCoinGeckoFiatPrices(tokenWithAllowanceInfo.map(function (c) {\n              return c.token.contractAddress;\n            }), this.chainId)];\n\n          case 2:\n            fiatPrices_1 = _c.sent();\n            _a = this;\n            return [4\n            /*yield*/\n            , Promise.all(tokenWithAllowanceInfo.map(function (item) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var token, canShow;\n\n                var _a;\n\n                return __generator(this, function (_c) {\n                  switch (_c.label) {\n                    case 0:\n                      return [4\n                      /*yield*/\n                      , this._tokenService.buildExtendedToken(item.token, item.allowanceAndBalanceOf.balanceOf, fiatPrices_1)];\n\n                    case 1:\n                      token = _c.sent();\n                      canShow = true;\n\n                      if (this.currentTokenSearch) {\n                        canShow = this.supportedTokenBalances.find(function (c) {\n                          return c.contractAddress.toLowerCase() === item.token.contractAddress.toLowerCase();\n                        }).canShow;\n                      }\n\n                      _a = {\n                        chainId: token.chainId,\n                        contractAddress: token.contractAddress,\n                        decimals: token.decimals,\n                        symbol: token.symbol,\n                        name: token.name,\n                        fiatPrice: token.fiatPrice,\n                        balance: token.balance,\n                        canShow: canShow\n                      };\n                      return [4\n                      /*yield*/\n                      , this._tokenService.getTokenImage(token.contractAddress, token.chainId)];\n\n                    case 2:\n                      return [2\n                      /*return*/\n                      , (_a.tokenImageContext = _c.sent(), _a)];\n                  }\n                });\n              });\n            }))];\n\n          case 3:\n            _a.supportedTokenBalances = _c.sent().sort(function (a, b) {\n              if (a.name < b.name) {\n                return -1;\n              }\n\n              if (a.name > b.name) {\n                return 1;\n              }\n\n              return 0;\n            }).sort(function (a, b) {\n              if (a.balance.isLessThan(b.balance)) {\n                return 1;\n              }\n\n              if (a.balance.isGreaterThan(b.balance)) {\n                return -1;\n              }\n\n              return 0;\n            }).sort(function (a, _b) {\n              var _a;\n\n              if (a.contractAddress === _this.inputToken.contractAddress) {\n                return -1;\n              }\n\n              if (a.contractAddress === ((_a = _this.outputToken) === null || _a === void 0 ? void 0 : _a.contractAddress)) {\n                return -1;\n              }\n\n              return 0;\n            });\n            inputToken = this.supportedTokenBalances.find(function (c) {\n              return c.contractAddress === _this.inputToken.contractAddress;\n            });\n\n            if (inputToken) {\n              newInputBalance = inputToken.balance;\n              newInputFiatPrice = inputToken.fiatPrice;\n\n              if (!this.inputToken.balance.isEqualTo(newInputBalance) || newInputFiatPrice && this.inputToken.fiatPrice && !this.inputToken.fiatPrice.isEqualTo(newInputFiatPrice)) {\n                this.inputToken.balance = newInputBalance;\n                this.inputToken.fiatPrice = newInputFiatPrice;\n                this.inputToken$.next(this.inputToken);\n              }\n            }\n\n            if (this.outputToken) {\n              outputToken = this.supportedTokenBalances.find(function (c) {\n                return c.contractAddress === _this.outputToken.contractAddress;\n              });\n\n              if (outputToken) {\n                newOutputBalance = outputToken.balance;\n                newOutputFiatPrice = outputToken.fiatPrice;\n\n                if (!this.outputToken.balance.isEqualTo(newOutputBalance) || newOutputFiatPrice && this.outputToken.fiatPrice && !this.outputToken.fiatPrice.isEqualTo(newOutputFiatPrice)) {\n                  this.outputToken.balance = newOutputBalance;\n                  this.outputToken.fiatPrice = newOutputFiatPrice;\n                  this.outputToken$.next(this.outputToken);\n                }\n              }\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            this.supportedTokenBalances = [];\n            _c.label = 5;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return UniswapDappSharedLogic;\n}();\n\nexport { UniswapDappSharedLogic };","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/uniswap_components/uniswap-dapp-integration-shared/dist/esm/uniswap-dapp-shared-logic.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","BigNumber","BehaviorSubject","Subject","Subscription","ETH","getAddress","TokensFactoryPublic","TradeDirection","UniswapPair","UniswapPairSettings","UniswapSubscription","ChainService","CoinGecko","EthereumProvider","MiningAction","SelectTokenActionFrom","TransactionStatus","Theming","TokenService","Utils","UniswapDappSharedLogic","_context","inputToken$","outputToken$","tradeContext$","newPriceTradeContext$","loading$","supportedTokenBalances","uniswapPairSettings","uniswapPairSettings$","selectorOpenFrom$","chainId$","supportedNetwork","supportedNetwork$","miningTransaction$","undefined","tradeCompleted$","_confirmSwapOpened","_inputAmount","_quoteSubscription","EMPTY","_ethereumProvider","ethereumAddress","ethereumProvider","_coinGecko","_theming","theming","_tokenService","supportedNetworkTokens","_chainService","_blockStream","settings","prototype","init","eth","inputToken","_a","_c","_this","_d","unsubscribe","setupEthereumContext","info","chainId","find","defaultInputValue","isZero","supportedTokens","c","contractAddress","toLowerCase","defaultInputToken","getTokenInformation","getBalances","subscribeToBlockStream","defaultOutputToken","buildFactory","outputToken","destroy","unwatch","tradeContext","changeEthereumAddress","updateEthereumAddress","changeChain","newEthereumProvider","provider","getNetwork","isSupportedChain","_tokensFactoryPublic","on","accounts","approveAllowance","hideSettings","miningTransaction","status","waitingForConfirmation","miningAction","approval","handleTransaction","approvalTransaction","completed","hasEnoughAllowance","swapTransaction","swap","showTransaction","transaction","toggleSettings","transactionInProcess","openTokenSelectorFrom","showTokenSelector","selectorOpenFrom","input","openTokenSelectorTo","output","hideTokenSelector","currentTokenSearch","showConfirmSwap","hideConfirmSwap","acceptPriceChange","hideTransaction","changeToken","changeInputToken","changeOutputToken","changeTradePrice","amount","directon","factory","trade","setMaxInput","maxBalance","balance","toFixed","swapSwitch","clonedOutput","clonedInput","deepClone","quoteDirection","baseConvertRequest","outputValue","expectedConvertQuote","inputValue","newPriceTradeContext","workOutOneEqualTo","toPrecision","setDisableMultihops","disableMultihops","executeTradeAndHonourLastTradeDirection","setTransactionDeadline","deadlineMinutes","Number","setSlippage","slippage","searchToken","search","mining","viewOnEtherscan","blockExplorerLink","window","open","txHash_1","blockStream_1","error_1","sendAsync","txHash","getBlockExplorerLinkForTransactionHash","newBlock$","subscribe","receipt","error_2","getTransactionReceipt","changeTokenHandler","executeTrade","uniswapPair","fiatPrices","_e","_f","_g","_h","_j","_k","_l","_m","createUniswapPairContext","createFactory","getCoinGeckoFiatPrices","fromToken","toToken","buildExtendedToken","getFromTokenBalance","concat","getToTokenBalance","fromTokenContractAddress","toTokenContractAddress","address","direction","context","isGreaterThan","formatTradeContext","quoteChanged$","quote","formattedQuote","liquidityProviderFee","minAmountConvertQuote","maximumSent","block","blockNumber","tokenWithAllowanceInfo","fiatPrices_1","newInputBalance","newInputFiatPrice","newOutputBalance","newOutputFiatPrice","getAllowanceAndBalanceOfForContracts","map","token","all","item","canShow","allowanceAndBalanceOf","balanceOf","decimals","symbol","name","fiatPrice","getTokenImage","tokenImageContext","sort","a","b","isLessThan","_b","isEqualTo"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\r\nimport { ETH, getAddress, TokensFactoryPublic, TradeDirection, UniswapPair, UniswapPairSettings, UniswapSubscription, } from 'simple-uniswap-sdk';\r\nimport { ChainService } from './chain';\r\nimport { CoinGecko } from './coin-gecko';\r\nimport { EthereumProvider } from './ethereum-provider';\r\nimport { MiningAction, SelectTokenActionFrom, TransactionStatus, } from './models';\r\nimport { Theming } from './theming';\r\nimport { TokenService } from './token';\r\nimport { Utils } from './utils';\r\nvar UniswapDappSharedLogic = /** @class */ (function () {\r\n    function UniswapDappSharedLogic(_context) {\r\n        this._context = _context;\r\n        this.inputToken$ = new Subject();\r\n        this.outputToken$ = new Subject();\r\n        this.tradeContext$ = new Subject();\r\n        this.newPriceTradeContext$ = new Subject();\r\n        this.loading$ = new BehaviorSubject(false);\r\n        this.supportedTokenBalances = [];\r\n        this.uniswapPairSettings = new UniswapPairSettings();\r\n        this.uniswapPairSettings$ = new Subject();\r\n        this.selectorOpenFrom$ = new Subject();\r\n        this.chainId$ = new Subject();\r\n        this.supportedNetwork = false;\r\n        this.supportedNetwork$ = new BehaviorSubject(false);\r\n        this.miningTransaction$ = new BehaviorSubject(undefined);\r\n        this.tradeCompleted$ = new BehaviorSubject(false);\r\n        this._confirmSwapOpened = false;\r\n        this._inputAmount = new BigNumber('0');\r\n        this._quoteSubscription = UniswapSubscription.EMPTY;\r\n        // services\r\n        this._ethereumProvider = new EthereumProvider(this._context.ethereumAddress, this._context.ethereumProvider);\r\n        this._coinGecko = new CoinGecko();\r\n        this._theming = new Theming(this._context.theming);\r\n        this._tokenService = new TokenService(this._ethereumProvider, this._context.supportedNetworkTokens);\r\n        this._chainService = new ChainService(this._ethereumProvider);\r\n        this._blockStream = Subscription.EMPTY;\r\n        if (this._context.settings) {\r\n            this.uniswapPairSettings = this._context.settings;\r\n        }\r\n        this.uniswapPairSettings$.next(this.uniswapPairSettings);\r\n    }\r\n    /**\r\n     * Init the shared logic\r\n     */\r\n    UniswapDappSharedLogic.prototype.init = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var eth, supportedNetworkTokens, inputToken, _a, _c;\r\n            var _this = this;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        this.loading$.next(true);\r\n                        this.supportedNetwork = false;\r\n                        this.supportedNetwork$.next(this.supportedNetwork);\r\n                        this._quoteSubscription.unsubscribe();\r\n                        this._blockStream.unsubscribe();\r\n                        return [4 /*yield*/, this.setupEthereumContext()];\r\n                    case 1:\r\n                        _d.sent();\r\n                        if (!this.supportedNetwork) {\r\n                            this.loading$.next(false);\r\n                            return [2 /*return*/];\r\n                        }\r\n                        eth = ETH.info(this.chainId);\r\n                        supportedNetworkTokens = this._context.supportedNetworkTokens.find(function (t) { return t.chainId === _this.chainId; });\r\n                        if (supportedNetworkTokens.defaultInputValue &&\r\n                            this._inputAmount.isZero()) {\r\n                            this._inputAmount = new BigNumber(supportedNetworkTokens.defaultInputValue);\r\n                        }\r\n                        if (!supportedNetworkTokens.supportedTokens.find(function (c) {\r\n                            return c.contractAddress.toLowerCase() === eth.contractAddress.toLowerCase();\r\n                        })) {\r\n                            supportedNetworkTokens.supportedTokens.push({\r\n                                contractAddress: eth.contractAddress,\r\n                            });\r\n                        }\r\n                        inputToken = supportedNetworkTokens.defaultInputToken || eth.contractAddress;\r\n                        _a = this;\r\n                        return [4 /*yield*/, this._tokenService.getTokenInformation(inputToken, this._context.ethereumProvider)];\r\n                    case 2:\r\n                        _a.inputToken = _d.sent();\r\n                        this.inputToken$.next(this.inputToken);\r\n                        return [4 /*yield*/, this.getBalances()];\r\n                    case 3:\r\n                        _d.sent();\r\n                        this._blockStream = this.subscribeToBlockStream();\r\n                        this._theming.apply();\r\n                        if (!supportedNetworkTokens.defaultOutputToken) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.buildFactory(this.inputToken.contractAddress, supportedNetworkTokens.defaultOutputToken)];\r\n                    case 4:\r\n                        _d.sent();\r\n                        return [3 /*break*/, 7];\r\n                    case 5:\r\n                        _c = this;\r\n                        return [4 /*yield*/, this._tokenService.getTokenInformation(inputToken, this._context.ethereumProvider)];\r\n                    case 6:\r\n                        _c.inputToken = _d.sent();\r\n                        this.inputToken$.next(this.inputToken);\r\n                        _d.label = 7;\r\n                    case 7:\r\n                        if (this._inputAmount && this.inputToken && this.outputToken) {\r\n                            this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress);\r\n                        }\r\n                        // resync once got context so ordering of tokens\r\n                        // can sync\r\n                        this.getBalances();\r\n                        this.loading$.next(false);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Destroy logic\r\n     */\r\n    UniswapDappSharedLogic.prototype.destroy = function () {\r\n        var _a;\r\n        this._quoteSubscription.unsubscribe();\r\n        this._blockStream.unsubscribe();\r\n        this._chainService.unwatch();\r\n        (_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.destroy();\r\n    };\r\n    /**\r\n     * Change ethereum address for your dApp if your provider does not\r\n     * emit the event `accountsChanged`\r\n     * @param ethereumAddress The ethereum address\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeEthereumAddress = function (ethereumAddress) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                this._quoteSubscription.unsubscribe();\r\n                this._ethereumProvider.updateEthereumAddress(ethereumAddress);\r\n                this.init();\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Change the chain for your dApp if your provider does not\r\n     * emit the event `chainChanged`. Your ethereum provider you passed\r\n     * to the lib if changed will work without passing a `newEthereumProvider`\r\n     * if its a brand new instance you need to pass the lib the new ethereum provider\r\n     * @param newEthereumProvider The new ethereum provider\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeChain = function (newEthereumProvider) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (newEthereumProvider) {\r\n                    this._context.ethereumProvider = newEthereumProvider;\r\n                }\r\n                this._ethereumProvider = new EthereumProvider(this._context.ethereumAddress, this._context.ethereumProvider);\r\n                this._chainService = new ChainService(this._ethereumProvider);\r\n                this._tokenService = new TokenService(this._ethereumProvider, this._context.supportedNetworkTokens);\r\n                this._quoteSubscription.unsubscribe();\r\n                this.init();\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Setup ethereum context\r\n     */\r\n    UniswapDappSharedLogic.prototype.setupEthereumContext = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4 /*yield*/, this._ethereumProvider.provider.getNetwork()];\r\n                    case 1:\r\n                        _a.chainId = (_c.sent()).chainId;\r\n                        this.chainId$.next(this.chainId);\r\n                        this.supportedNetwork = this._ethereumProvider.isSupportedChain(this.chainId, this._context.supportedNetworkTokens);\r\n                        this.supportedNetwork$.next(this.supportedNetwork);\r\n                        if (this.supportedNetwork) {\r\n                            this._tokensFactoryPublic = new TokensFactoryPublic({\r\n                                chainId: this.chainId,\r\n                            });\r\n                        }\r\n                        // handle chain and account changes automatically\r\n                        // if they have event handlers on\r\n                        if (this._context.ethereumProvider.on) {\r\n                            this._context.ethereumProvider.on('accountsChanged', function (accounts) { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, this.changeEthereumAddress(accounts[0])];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); });\r\n                            this._context.ethereumProvider.on('chainChanged', function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, this.changeChain()];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); });\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Send the approve allowance\r\n     */\r\n    UniswapDappSharedLogic.prototype.approveAllowance = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this._theming.hideSettings();\r\n                        this.miningTransaction = {\r\n                            status: TransactionStatus.waitingForConfirmation,\r\n                            miningAction: MiningAction.approval,\r\n                        };\r\n                        this.miningTransaction$.next(this.miningTransaction);\r\n                        return [4 /*yield*/, this.handleTransaction(this.tradeContext.approvalTransaction, this.miningTransaction)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (this.miningTransaction.status === TransactionStatus.completed) {\r\n                            this.miningTransaction = undefined;\r\n                            this.miningTransaction$.next(this.miningTransaction);\r\n                            this.tradeContext.approvalTransaction = undefined;\r\n                            this.tradeContext.hasEnoughAllowance = true;\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Send the swap transaction\r\n     */\r\n    UniswapDappSharedLogic.prototype.swapTransaction = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.miningTransaction = {\r\n                            status: TransactionStatus.waitingForConfirmation,\r\n                            miningAction: MiningAction.swap,\r\n                        };\r\n                        this.miningTransaction$.next(this.miningTransaction);\r\n                        this.showTransaction();\r\n                        return [4 /*yield*/, this.handleTransaction(this.tradeContext.transaction, this.miningTransaction)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Toggle showing and hiding the settings\r\n     */\r\n    UniswapDappSharedLogic.prototype.toggleSettings = function () {\r\n        if (!this.transactionInProcess()) {\r\n            this._theming.toggleSettings();\r\n        }\r\n    };\r\n    /**\r\n     * Open token selector from\r\n     */\r\n    UniswapDappSharedLogic.prototype.openTokenSelectorFrom = function () {\r\n        this._theming.showTokenSelector();\r\n        this.selectorOpenFrom = SelectTokenActionFrom.input;\r\n        this.selectorOpenFrom$.next(this.selectorOpenFrom);\r\n    };\r\n    /**\r\n     * Open token selector to\r\n     */\r\n    UniswapDappSharedLogic.prototype.openTokenSelectorTo = function () {\r\n        this._theming.showTokenSelector();\r\n        this.selectorOpenFrom = SelectTokenActionFrom.output;\r\n        this.selectorOpenFrom$.next(this.selectorOpenFrom);\r\n    };\r\n    /**\r\n     * Hide the token selector\r\n     */\r\n    UniswapDappSharedLogic.prototype.hideTokenSelector = function () {\r\n        this.selectorOpenFrom = undefined;\r\n        this.currentTokenSearch = undefined;\r\n        this._theming.hideTokenSelector();\r\n    };\r\n    /**\r\n     * Show the confirm swap modal\r\n     */\r\n    UniswapDappSharedLogic.prototype.showConfirmSwap = function () {\r\n        this._theming.showConfirmSwap();\r\n        this._confirmSwapOpened = true;\r\n    };\r\n    /**\r\n     * Hide the confirm swap modal\r\n     */\r\n    UniswapDappSharedLogic.prototype.hideConfirmSwap = function () {\r\n        this._theming.hideConfirmSwap();\r\n        this._confirmSwapOpened = false;\r\n        this.acceptPriceChange();\r\n    };\r\n    /**\r\n     * Show transaction modal\r\n     */\r\n    UniswapDappSharedLogic.prototype.showTransaction = function () {\r\n        this._theming.hideConfirmSwap();\r\n        this._theming.showTransaction();\r\n    };\r\n    /**\r\n     * Hide the transaction modal\r\n     */\r\n    UniswapDappSharedLogic.prototype.hideTransaction = function () {\r\n        var _a;\r\n        this._theming.hideTransaction();\r\n        this.miningTransaction = undefined;\r\n        this.miningTransaction$.next(this.miningTransaction);\r\n        (_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.destroy();\r\n        this.tradeContext = undefined;\r\n        this.tradeContext$.next(undefined);\r\n        this._inputAmount = new BigNumber(0);\r\n        // let the client know the swap all done to clear down the fields\r\n        this.tradeCompleted$.next(true);\r\n        this.tradeCompleted$.next(false);\r\n        this.hideConfirmSwap();\r\n    };\r\n    /**\r\n     * Change token selected\r\n     * @param contractAddress The contract address\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeToken = function (contractAddress) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _a = this.selectorOpenFrom;\r\n                        switch (_a) {\r\n                            case SelectTokenActionFrom.input: return [3 /*break*/, 1];\r\n                            case SelectTokenActionFrom.output: return [3 /*break*/, 3];\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 1: return [4 /*yield*/, this.changeInputToken(contractAddress)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        return [2 /*return*/];\r\n                    case 3: return [4 /*yield*/, this.changeOutputToken(contractAddress)];\r\n                    case 4:\r\n                        _c.sent();\r\n                        _c.label = 5;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Change trade price\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeTradePrice = function (amount, directon) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (directon === TradeDirection.input) {\r\n                            this._inputAmount = new BigNumber(amount);\r\n                        }\r\n                        if (!!this.factory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [4 /*yield*/, this.trade(new BigNumber(amount), directon)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Set max input\r\n     */\r\n    UniswapDappSharedLogic.prototype.setMaxInput = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var maxBalance;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        maxBalance = this.inputToken.balance.toFixed();\r\n                        return [4 /*yield*/, this.changeTradePrice(maxBalance, TradeDirection.input)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, maxBalance];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Swap switch\r\n     */\r\n    UniswapDappSharedLogic.prototype.swapSwitch = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clonedOutput, clonedInput, amount, amount;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        clonedOutput = Utils.deepClone(this.outputToken);\r\n                        clonedInput = Utils.deepClone(this.inputToken);\r\n                        return [4 /*yield*/, this.buildFactory(clonedOutput.contractAddress, clonedInput.contractAddress, false)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (!this.tradeContext) return [3 /*break*/, 6];\r\n                        if (!(this.tradeContext.quoteDirection === TradeDirection.output)) return [3 /*break*/, 3];\r\n                        amount = Utils.deepClone(this.tradeContext.baseConvertRequest);\r\n                        return [4 /*yield*/, this.trade(new BigNumber(amount), TradeDirection.input)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, {\r\n                                outputValue: this.tradeContext.expectedConvertQuote,\r\n                                inputValue: amount,\r\n                            }];\r\n                    case 3:\r\n                        amount = Utils.deepClone(this.tradeContext.baseConvertRequest);\r\n                        return [4 /*yield*/, this.trade(new BigNumber(amount), TradeDirection.output)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [2 /*return*/, {\r\n                                outputValue: amount,\r\n                                inputValue: this.tradeContext.expectedConvertQuote,\r\n                            }];\r\n                    case 5: return [3 /*break*/, 7];\r\n                    case 6: return [2 /*return*/, {\r\n                            outputValue: '',\r\n                            inputValue: '',\r\n                        }];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Accept the price change\r\n     */\r\n    UniswapDappSharedLogic.prototype.acceptPriceChange = function () {\r\n        if (this.newPriceTradeContext) {\r\n            this.tradeContext = this.newPriceTradeContext;\r\n            this.tradeContext$.next(this.tradeContext);\r\n        }\r\n        this.newPriceTradeContext = undefined;\r\n        this.newPriceTradeContext$.next(undefined);\r\n    };\r\n    /**\r\n     * work out what 1 is equal to\r\n     */\r\n    UniswapDappSharedLogic.prototype.workOutOneEqualTo = function () {\r\n        return Utils.toPrecision(new BigNumber(+this.tradeContext.expectedConvertQuote /\r\n            +this.tradeContext.baseConvertRequest));\r\n    };\r\n    /**\r\n     * Set multihops\r\n     * @param disableMultihops The status of disable multihops\r\n     */\r\n    UniswapDappSharedLogic.prototype.setDisableMultihops = function (disableMultihops) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (disableMultihops === this.uniswapPairSettings.disableMultihops) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.uniswapPairSettings.disableMultihops = disableMultihops;\r\n                        this.uniswapPairSettings$.next(this.uniswapPairSettings);\r\n                        return [4 /*yield*/, this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress, false)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.executeTradeAndHonourLastTradeDirection()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Set transaction deadline\r\n     * @param deadlineMinutes The deadline minutes the tx has to be mined before it fails\r\n     */\r\n    UniswapDappSharedLogic.prototype.setTransactionDeadline = function (deadlineMinutes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (Number(deadlineMinutes) === this.uniswapPairSettings.deadlineMinutes) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (deadlineMinutes === '') {\r\n                            this.uniswapPairSettings.deadlineMinutes = 20;\r\n                        }\r\n                        else {\r\n                            this.uniswapPairSettings.deadlineMinutes = Number(deadlineMinutes);\r\n                        }\r\n                        this.uniswapPairSettings$.next(this.uniswapPairSettings);\r\n                        return [4 /*yield*/, this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress, false)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.executeTradeAndHonourLastTradeDirection()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Set transaction slippage\r\n     * @param slippage The slippage the route can take\r\n     */\r\n    UniswapDappSharedLogic.prototype.setSlippage = function (slippage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (Number(slippage) / 100 === this.uniswapPairSettings.slippage) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (slippage === '') {\r\n                            this.uniswapPairSettings.slippage = 0.005;\r\n                        }\r\n                        else {\r\n                            this.uniswapPairSettings.slippage = Number(slippage) / 100;\r\n                        }\r\n                        this.uniswapPairSettings$.next(this.uniswapPairSettings);\r\n                        return [4 /*yield*/, this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress, false)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.executeTradeAndHonourLastTradeDirection()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Search for tokens\r\n     * @param search The search term\r\n     */\r\n    UniswapDappSharedLogic.prototype.searchToken = function (search) {\r\n        this.currentTokenSearch = search;\r\n        this.supportedTokenBalances = this._tokenService.searchToken(search, this.supportedTokenBalances);\r\n        return this.supportedTokenBalances;\r\n    };\r\n    /**\r\n     * See if the transaction is in process\r\n     */\r\n    UniswapDappSharedLogic.prototype.transactionInProcess = function () {\r\n        var _a, _c;\r\n        return (((_a = this.miningTransaction) === null || _a === void 0 ? void 0 : _a.status) ===\r\n            TransactionStatus.waitingForConfirmation ||\r\n            ((_c = this.miningTransaction) === null || _c === void 0 ? void 0 : _c.status) === TransactionStatus.mining);\r\n    };\r\n    /**\r\n     * View the tx on etherscan\r\n     */\r\n    UniswapDappSharedLogic.prototype.viewOnEtherscan = function () {\r\n        var _a;\r\n        if ((_a = this.miningTransaction) === null || _a === void 0 ? void 0 : _a.blockExplorerLink) {\r\n            window.open(this.miningTransaction.blockExplorerLink, '_blank');\r\n        }\r\n    };\r\n    /**\r\n     * Execute the trade but honour the last trade direction\r\n     */\r\n    UniswapDappSharedLogic.prototype.executeTradeAndHonourLastTradeDirection = function () {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!(((_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.quoteDirection) === TradeDirection.output)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.trade(new BigNumber(Utils.deepClone(this.tradeContext.baseConvertRequest)), TradeDirection.output)];\r\n                    case 1:\r\n                        _c.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 2: return [4 /*yield*/, this.trade(this._inputAmount, TradeDirection.input)];\r\n                    case 3:\r\n                        _c.sent();\r\n                        _c.label = 4;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handle transaction\r\n     * @param transaction The transaction\r\n     * @param miningTransaction The mining transaction\r\n     */\r\n    UniswapDappSharedLogic.prototype.handleTransaction = function (transaction, miningTransaction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var txHash_1, blockStream_1, error_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 3, , 4]);\r\n                        return [4 /*yield*/, this._ethereumProvider.sendAsync(transaction)];\r\n                    case 1:\r\n                        txHash_1 = _a.sent();\r\n                        this._quoteSubscription.unsubscribe();\r\n                        miningTransaction.status = TransactionStatus.mining;\r\n                        miningTransaction.txHash = txHash_1;\r\n                        miningTransaction.blockExplorerLink =\r\n                            this._chainService.getBlockExplorerLinkForTransactionHash(this.chainId, txHash_1);\r\n                        this.miningTransaction$.next(miningTransaction);\r\n                        blockStream_1 = Subscription.EMPTY;\r\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\r\n                                blockStream_1 = _this._chainService.newBlock$.subscribe(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                    var receipt, error_2;\r\n                                    return __generator(this, function (_a) {\r\n                                        switch (_a.label) {\r\n                                            case 0:\r\n                                                _a.trys.push([0, 2, , 3]);\r\n                                                return [4 /*yield*/, this._ethereumProvider.provider.getTransactionReceipt(txHash_1)];\r\n                                            case 1:\r\n                                                receipt = _a.sent();\r\n                                                if (receipt) {\r\n                                                    resolve();\r\n                                                    this.miningTransaction.status = TransactionStatus.completed;\r\n                                                    this.miningTransaction$.next(miningTransaction);\r\n                                                }\r\n                                                return [3 /*break*/, 3];\r\n                                            case 2:\r\n                                                error_2 = _a.sent();\r\n                                                blockStream_1.unsubscribe();\r\n                                                reject(error_2);\r\n                                                return [3 /*break*/, 3];\r\n                                            case 3: return [2 /*return*/];\r\n                                        }\r\n                                    });\r\n                                }); });\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        blockStream_1.unsubscribe();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        miningTransaction.status = TransactionStatus.rejected;\r\n                        this.miningTransaction$.next(miningTransaction);\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Change input token\r\n     * @param contractAddress The contract address\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeInputToken = function (contractAddress) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.changeTokenHandler(contractAddress, this.outputToken.contractAddress)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Change output token\r\n     * @param contractAddress The contract address\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeOutputToken = function (contractAddress) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.changeTokenHandler(this.inputToken.contractAddress, contractAddress)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Change token handler\r\n     * @param inputToken The input token\r\n     * @param outputToken The output token\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeTokenHandler = function (inputToken, outputToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.hideTokenSelector();\r\n                        return [4 /*yield*/, this.buildFactory(inputToken, outputToken, false)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.executeTradeAndHonourLastTradeDirection()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Build factory\r\n     */\r\n    UniswapDappSharedLogic.prototype.buildFactory = function (inputToken, outputToken, executeTrade) {\r\n        var _a;\r\n        if (executeTrade === void 0) { executeTrade = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var uniswapPair, _c, fiatPrices, _d, _e, _f, _g, _h, _j, _k, _l;\r\n            return __generator(this, function (_m) {\r\n                switch (_m.label) {\r\n                    case 0:\r\n                        (_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.destroy();\r\n                        inputToken = getAddress(inputToken, true);\r\n                        outputToken = getAddress(outputToken, true);\r\n                        uniswapPair = this.createUniswapPairContext(inputToken, outputToken, this.uniswapPairSettings);\r\n                        _c = this;\r\n                        return [4 /*yield*/, uniswapPair.createFactory()];\r\n                    case 1:\r\n                        _c.factory = _m.sent();\r\n                        return [4 /*yield*/, this._coinGecko.getCoinGeckoFiatPrices([\r\n                                this.factory.fromToken.contractAddress,\r\n                                this.factory.toToken.contractAddress,\r\n                            ], this.chainId)];\r\n                    case 2:\r\n                        fiatPrices = _m.sent();\r\n                        _d = this;\r\n                        _f = (_e = this._tokenService).buildExtendedToken;\r\n                        _g = [this.factory.fromToken];\r\n                        return [4 /*yield*/, this.factory.getFromTokenBalance()];\r\n                    case 3: return [4 /*yield*/, _f.apply(_e, _g.concat([_m.sent(), fiatPrices]))];\r\n                    case 4:\r\n                        _d.inputToken = _m.sent();\r\n                        this.inputToken$.next(this.inputToken);\r\n                        _h = this;\r\n                        _k = (_j = this._tokenService).buildExtendedToken;\r\n                        _l = [this.factory.toToken];\r\n                        return [4 /*yield*/, this.factory.getToTokenBalance()];\r\n                    case 5: return [4 /*yield*/, _k.apply(_j, _l.concat([_m.sent(), fiatPrices]))];\r\n                    case 6:\r\n                        _h.outputToken = _m.sent();\r\n                        this.outputToken$.next(this.outputToken);\r\n                        if (!executeTrade) return [3 /*break*/, 8];\r\n                        return [4 /*yield*/, this.trade(this._inputAmount, TradeDirection.input)];\r\n                    case 7:\r\n                        _m.sent();\r\n                        _m.label = 8;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create uniswap pair context\r\n     * @param inputToken The input token\r\n     * @param outputToken The output token\r\n     * @param settings The settings\r\n     */\r\n    UniswapDappSharedLogic.prototype.createUniswapPairContext = function (inputToken, outputToken, settings) {\r\n        if (this._context.ethereumProvider) {\r\n            return new UniswapPair({\r\n                fromTokenContractAddress: inputToken,\r\n                toTokenContractAddress: outputToken,\r\n                ethereumAddress: this._ethereumProvider.address,\r\n                ethereumProvider: this._context.ethereumProvider,\r\n                settings: settings,\r\n            });\r\n        }\r\n        return new UniswapPair({\r\n            fromTokenContractAddress: inputToken,\r\n            toTokenContractAddress: outputToken,\r\n            ethereumAddress: this._ethereumProvider.address,\r\n            chainId: this.chainId,\r\n            ethereumProvider: this._ethereumProvider.provider,\r\n            settings: settings,\r\n        });\r\n    };\r\n    /**\r\n     * Execute the trade quote\r\n     * @param amount The amount\r\n     */\r\n    UniswapDappSharedLogic.prototype.trade = function (amount, direction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var context;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!amount.isGreaterThan(0)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.factory.trade(amount.toFixed(), direction)];\r\n                    case 1:\r\n                        context = _a.sent();\r\n                        this.tradeContext = this.formatTradeContext(context);\r\n                        this.tradeContext$.next(this.tradeContext);\r\n                        this._quoteSubscription = this.tradeContext.quoteChanged$.subscribe(function (quote) {\r\n                            var _a, _c, _d;\r\n                            if (((_a = _this.miningTransaction) === null || _a === void 0 ? void 0 : _a.miningAction) === MiningAction.swap &&\r\n                                (((_c = _this.miningTransaction) === null || _c === void 0 ? void 0 : _c.status) === TransactionStatus.mining ||\r\n                                    ((_d = _this.miningTransaction) === null || _d === void 0 ? void 0 : _d.status) === TransactionStatus.completed)) {\r\n                                _this._quoteSubscription.unsubscribe();\r\n                                return;\r\n                            }\r\n                            var formattedQuote = _this.formatTradeContext(quote);\r\n                            if (_this._confirmSwapOpened) {\r\n                                _this.newPriceTradeContext = formattedQuote;\r\n                                _this.newPriceTradeContext$.next(_this.newPriceTradeContext);\r\n                            }\r\n                            else {\r\n                                _this.tradeContext = formattedQuote;\r\n                                _this.tradeContext$.next(_this.tradeContext);\r\n                            }\r\n                        });\r\n                        if (this.tradeContext.quoteDirection === TradeDirection.output) {\r\n                            this._inputAmount = new BigNumber(Utils.deepClone(this.tradeContext.expectedConvertQuote));\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Format trade context values\r\n     * @param context The context\r\n     */\r\n    UniswapDappSharedLogic.prototype.formatTradeContext = function (context) {\r\n        context.liquidityProviderFee = Utils.toPrecision(context.liquidityProviderFee);\r\n        if (context.minAmountConvertQuote) {\r\n            context.minAmountConvertQuote = Utils.toPrecision(context.minAmountConvertQuote);\r\n        }\r\n        if (context.maximumSent) {\r\n            context.maximumSent = Utils.toPrecision(context.maximumSent);\r\n        }\r\n        context.expectedConvertQuote = Utils.toPrecision(context.expectedConvertQuote);\r\n        return context;\r\n    };\r\n    /**\r\n     * Subscribe to the block stream\r\n     */\r\n    UniswapDappSharedLogic.prototype.subscribeToBlockStream = function () {\r\n        var _this = this;\r\n        return this._chainService.newBlock$.subscribe(function (block) {\r\n            _this.blockNumber = block;\r\n            _this.getBalances();\r\n        });\r\n    };\r\n    /**\r\n     * Get the balances of the supported contracts\r\n     */\r\n    UniswapDappSharedLogic.prototype.getBalances = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenWithAllowanceInfo, fiatPrices_1, _a, inputToken, newInputBalance, newInputFiatPrice, outputToken, newOutputBalance, newOutputFiatPrice;\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!this.supportedNetwork) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this._tokensFactoryPublic.getAllowanceAndBalanceOfForContracts(this._ethereumProvider.address, this._context.supportedNetworkTokens\r\n                                .find(function (t) { return t.chainId === _this.chainId; })\r\n                                .supportedTokens.map(function (c) { return getAddress(c.contractAddress, true); }), true)];\r\n                    case 1:\r\n                        tokenWithAllowanceInfo = _c.sent();\r\n                        return [4 /*yield*/, this._coinGecko.getCoinGeckoFiatPrices(tokenWithAllowanceInfo.map(function (c) { return c.token.contractAddress; }), this.chainId)];\r\n                    case 2:\r\n                        fiatPrices_1 = _c.sent();\r\n                        _a = this;\r\n                        return [4 /*yield*/, Promise.all(tokenWithAllowanceInfo.map(function (item) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var token, canShow;\r\n                                var _a;\r\n                                return __generator(this, function (_c) {\r\n                                    switch (_c.label) {\r\n                                        case 0: return [4 /*yield*/, this._tokenService.buildExtendedToken(item.token, item.allowanceAndBalanceOf.balanceOf, fiatPrices_1)];\r\n                                        case 1:\r\n                                            token = _c.sent();\r\n                                            canShow = true;\r\n                                            if (this.currentTokenSearch) {\r\n                                                canShow = this.supportedTokenBalances.find(function (c) {\r\n                                                    return c.contractAddress.toLowerCase() ===\r\n                                                        item.token.contractAddress.toLowerCase();\r\n                                                }).canShow;\r\n                                            }\r\n                                            _a = {\r\n                                                chainId: token.chainId,\r\n                                                contractAddress: token.contractAddress,\r\n                                                decimals: token.decimals,\r\n                                                symbol: token.symbol,\r\n                                                name: token.name,\r\n                                                fiatPrice: token.fiatPrice,\r\n                                                balance: token.balance,\r\n                                                canShow: canShow\r\n                                            };\r\n                                            return [4 /*yield*/, this._tokenService.getTokenImage(token.contractAddress, token.chainId)];\r\n                                        case 2: return [2 /*return*/, (_a.tokenImageContext = _c.sent(),\r\n                                                _a)];\r\n                                    }\r\n                                });\r\n                            }); }))];\r\n                    case 3:\r\n                        _a.supportedTokenBalances = (_c.sent())\r\n                            .sort(function (a, b) {\r\n                            if (a.name < b.name) {\r\n                                return -1;\r\n                            }\r\n                            if (a.name > b.name) {\r\n                                return 1;\r\n                            }\r\n                            return 0;\r\n                        })\r\n                            .sort(function (a, b) {\r\n                            if (a.balance.isLessThan(b.balance)) {\r\n                                return 1;\r\n                            }\r\n                            if (a.balance.isGreaterThan(b.balance)) {\r\n                                return -1;\r\n                            }\r\n                            return 0;\r\n                        })\r\n                            .sort(function (a, _b) {\r\n                            var _a;\r\n                            if (a.contractAddress === _this.inputToken.contractAddress) {\r\n                                return -1;\r\n                            }\r\n                            if (a.contractAddress === ((_a = _this.outputToken) === null || _a === void 0 ? void 0 : _a.contractAddress)) {\r\n                                return -1;\r\n                            }\r\n                            return 0;\r\n                        });\r\n                        inputToken = this.supportedTokenBalances.find(function (c) { return c.contractAddress === _this.inputToken.contractAddress; });\r\n                        if (inputToken) {\r\n                            newInputBalance = inputToken.balance;\r\n                            newInputFiatPrice = inputToken.fiatPrice;\r\n                            if (!this.inputToken.balance.isEqualTo(newInputBalance) ||\r\n                                (newInputFiatPrice &&\r\n                                    this.inputToken.fiatPrice &&\r\n                                    !this.inputToken.fiatPrice.isEqualTo(newInputFiatPrice))) {\r\n                                this.inputToken.balance = newInputBalance;\r\n                                this.inputToken.fiatPrice = newInputFiatPrice;\r\n                                this.inputToken$.next(this.inputToken);\r\n                            }\r\n                        }\r\n                        if (this.outputToken) {\r\n                            outputToken = this.supportedTokenBalances.find(function (c) { return c.contractAddress === _this.outputToken.contractAddress; });\r\n                            if (outputToken) {\r\n                                newOutputBalance = outputToken.balance;\r\n                                newOutputFiatPrice = outputToken.fiatPrice;\r\n                                if (!this.outputToken.balance.isEqualTo(newOutputBalance) ||\r\n                                    (newOutputFiatPrice &&\r\n                                        this.outputToken.fiatPrice &&\r\n                                        !this.outputToken.fiatPrice.isEqualTo(newOutputFiatPrice))) {\r\n                                    this.outputToken.balance = newOutputBalance;\r\n                                    this.outputToken.fiatPrice = newOutputFiatPrice;\r\n                                    this.outputToken$.next(this.outputToken);\r\n                                }\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        this.supportedTokenBalances = [];\r\n                        _c.label = 5;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return UniswapDappSharedLogic;\r\n}());\r\nexport { UniswapDappSharedLogic };\r\n"]},"metadata":{},"sourceType":"module"}