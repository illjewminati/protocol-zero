{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/common/steps_modal/swap_step.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getStepsModalCurrentStep } from '../../../store/ui/selectors';\nimport { BaseStepModal } from './base_step_modal';\nimport { ethers, utils } from 'ethers';\nimport { initBalances as _initBalances, stepsModalAdvanceStep, swapTokens } from '../../../store/actions';\nimport { getWeb3Wrapper } from '../../../services/web3_wrapper';\nimport { retrieveError } from '../../../util/gsn_error_handler';\nimport { getRelayHubContract } from '../../../services/relay_hub_service';\n\nvar SwapTokensStep = /*#__PURE__*/function (_React$Component) {\n  _inherits(SwapTokensStep, _React$Component);\n\n  var _super = _createSuper(SwapTokensStep);\n\n  function SwapTokensStep() {\n    var _this;\n\n    _classCallCheck(this, SwapTokensStep);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      error: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var error = _this.state.error;\n      var _this$props = _this.props,\n          buildStepsProgress = _this$props.buildStepsProgress,\n          step = _this$props.step;\n      var amount = step.amount,\n          token = step.token;\n      var title = \"Swap \".concat(amount, \" \").concat(token.symbol);\n      var confirmCaption = \"Confirm on Metamask to swap tokens\";\n      var loadingCaption = \"Swapping Tokens\";\n      var doneCaption = \"Tokens Swapped\";\n      var errorCaption = \"Failed to swap tokens: \".concat(error);\n      var loadingFooterCaption = \"Waiting for confirmation...\";\n      var doneFooterCaption = \"Tokens Swapped\";\n      return /*#__PURE__*/_jsxDEV(BaseStepModal, {\n        step: step,\n        title: title,\n        confirmCaption: confirmCaption,\n        loadingCaption: loadingCaption,\n        doneCaption: doneCaption,\n        errorCaption: errorCaption,\n        loadingFooterCaption: loadingFooterCaption,\n        doneFooterCaption: doneFooterCaption,\n        buildStepsProgress: buildStepsProgress,\n        estimatedTxTimeMs: 30000,\n        runAction: _this._approveTokens,\n        showPartialProgress: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, _assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_approveTokens\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var onLoading, onDone, onError, _this$props2, step, onTokensSwap, web3Wrapper, contractTransaction, contractReceipt, txHash, tx, relayHub, deposited, withdrawn, error;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                onLoading = _ref.onLoading, onDone = _ref.onDone, onError = _ref.onError;\n                _this$props2 = _this.props, step = _this$props2.step, onTokensSwap = _this$props2.onTokensSwap;\n                _context.next = 4;\n                return getWeb3Wrapper();\n\n              case 4:\n                web3Wrapper = _context.sent;\n                _context.prev = 5;\n                _context.next = 8;\n                return onTokensSwap(step.token, step.amount);\n\n              case 8:\n                contractTransaction = _context.sent;\n                onLoading();\n                _context.next = 12;\n                return contractTransaction.wait();\n\n              case 12:\n                contractReceipt = _context.sent;\n                txHash = contractReceipt.logs[0].transactionHash;\n                _context.next = 16;\n                return web3Wrapper.waitForTransaction(txHash);\n\n              case 16:\n                tx = _context.sent;\n                _context.next = 19;\n                return getRelayHubContract(web3Wrapper.getSigner());\n\n              case 19:\n                relayHub = _context.sent;\n                tx.logs.map(function (log) {\n                  try {\n                    var parsedLog = relayHub[\"interface\"].parseLog(log);\n\n                    if (parsedLog.name === \"Deposited\") {\n                      deposited = utils.formatEther(parsedLog.args.amount);\n                    } else if (parsedLog.name === \"Withdrawn\") {\n                      withdrawn = utils.formatEther(parsedLog.args.amount);\n                    }\n                  } catch (e) {}\n                });\n                step.callback({\n                  data: {\n                    gasUsed: tx.gasUsed.toString(),\n                    txHash: txHash,\n                    txPrice: ethers.utils.formatEther(tx.gasUsed.mul(tx.effectiveGasPrice)),\n                    deposited: deposited,\n                    withdrawn: withdrawn\n                  },\n                  error: false\n                });\n\n                _initBalances();\n\n                onDone();\n                _context.next = 33;\n                break;\n\n              case 26:\n                _context.prev = 26;\n                _context.t0 = _context[\"catch\"](5);\n                error = retrieveError(_context.t0.message);\n                step.callback({\n                  error: true,\n                  data: null,\n                  message: error\n                });\n\n                _initBalances();\n\n                _this.setState({\n                  error: error\n                });\n\n                onError(error);\n\n              case 33:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 26]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  return SwapTokensStep;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    step: getStepsModalCurrentStep(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onTokensSwap: function onTokensSwap(token, amount) {\n      return dispatch(swapTokens(token, amount));\n    },\n    advanceStep: function advanceStep() {\n      return dispatch(stepsModalAdvanceStep());\n    },\n    initBalances: function initBalances() {\n      return dispatch(_initBalances());\n    }\n  };\n};\n\nvar SwapTokensStepContainer = connect(mapStateToProps, mapDispatchToProps)(SwapTokensStep);\nexport { SwapTokensStep, SwapTokensStepContainer };","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/common/steps_modal/swap_step.tsx"],"names":["React","connect","getStepsModalCurrentStep","BaseStepModal","ethers","utils","initBalances","stepsModalAdvanceStep","swapTokens","getWeb3Wrapper","retrieveError","getRelayHubContract","SwapTokensStep","error","state","props","buildStepsProgress","step","amount","token","title","symbol","confirmCaption","loadingCaption","doneCaption","errorCaption","loadingFooterCaption","doneFooterCaption","_approveTokens","onLoading","onDone","onError","onTokensSwap","web3Wrapper","contractTransaction","wait","contractReceipt","txHash","logs","transactionHash","waitForTransaction","tx","getSigner","relayHub","map","log","parsedLog","parseLog","name","deposited","formatEther","args","withdrawn","e","callback","data","gasUsed","toString","txPrice","mul","effectiveGasPrice","message","setState","Component","mapStateToProps","mapDispatchToProps","dispatch","advanceStep","SwapTokensStepContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getStepsModalCurrentStep } from '../../../store/ui/selectors';\nimport { StoreState } from '../../../types/store';\nimport { BaseStepModal } from './base_step_modal';\nimport { StepItem } from './steps_progress';\nimport { BigNumber, ContractReceipt, ContractTransaction, ethers, utils } from 'ethers';\nimport { initBalances, stepsModalAdvanceStep, swapTokens } from '../../../store/actions';\nimport { StepSwapToken } from '../../../types/steps-modal';\nimport { getWeb3Wrapper } from '../../../services/web3_wrapper';\nimport { Token } from '../../../types/blockchain';\nimport { retrieveError } from '../../../util/gsn_error_handler';\nimport { getRelayHubContract } from '../../../services/relay_hub_service';\n\ninterface LocalProps {\n    error: string\n}\n\ninterface OwnProps {\n    buildStepsProgress: (currentStepItem: StepItem) => StepItem[];\n}\n\ninterface StateProps {\n    step: StepSwapToken;\n}\n\ninterface DispatchProps {\n    onTokensSwap: (\n        address: Token, \n        amount: string\n    ) => Promise<any>;\n    advanceStep: () => void;\n    initBalances: () => any\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\n\n\nclass SwapTokensStep extends React.Component<Props, LocalProps> {\n\n\n    state = {\n        error: \"\"\n    }\n\n    public render = () => {\n        const { error } = this.state;\n        const { buildStepsProgress, step } = this.props;\n        const { amount, token } = step;\n\n        const title = `Swap ${amount} ${token.symbol}`;\n        const confirmCaption = `Confirm on Metamask to swap tokens`;\n        const loadingCaption = \"Swapping Tokens\";\n        const doneCaption = \"Tokens Swapped\";\n        const errorCaption = `Failed to swap tokens: ${error}`;\n        const loadingFooterCaption = `Waiting for confirmation...`;\n        const doneFooterCaption = `Tokens Swapped`;\n\n        return (\n            <BaseStepModal\n                step={step}\n                title={title}\n                confirmCaption={confirmCaption}\n                loadingCaption={loadingCaption}\n                doneCaption={doneCaption}\n                errorCaption={errorCaption}\n                loadingFooterCaption={loadingFooterCaption}\n                doneFooterCaption={doneFooterCaption}\n                buildStepsProgress={buildStepsProgress}\n                estimatedTxTimeMs={30000}\n                runAction={this._approveTokens}\n                showPartialProgress={true}\n            />\n        );\n    };\n\n    private readonly _approveTokens = async ({ onLoading, onDone, onError }: any) => {\n        const { step, onTokensSwap } = this.props;\n\n        const web3Wrapper = await getWeb3Wrapper();\n\n        try {\n            const contractTransaction: ContractTransaction = await onTokensSwap(step.token, step.amount);\n            onLoading();\n    \n            const contractReceipt: ContractReceipt = await contractTransaction.wait();\n            const txHash = contractReceipt.logs[0].transactionHash;\n            const tx = await web3Wrapper.waitForTransaction(txHash);\n\n            const relayHub = await getRelayHubContract(web3Wrapper.getSigner())\n            let deposited: string;\n            let withdrawn: string;\n\n            tx.logs.map((log: any) => {\n                try {\n                  const parsedLog = relayHub.interface.parseLog(log);\n                  if(parsedLog.name === \"Deposited\") {\n                    deposited = utils.formatEther(parsedLog.args.amount);\n                  } else if(parsedLog.name === \"Withdrawn\") {\n                    withdrawn = utils.formatEther(parsedLog.args.amount)\n                  } \n                } catch(e) {\n          \n                }\n              })\n            step.callback({\n                data: {\n                    gasUsed: tx.gasUsed.toString(),\n                    txHash,\n                    txPrice: ethers.utils.formatEther(tx.gasUsed.mul(tx.effectiveGasPrice)),\n                    deposited,\n                    withdrawn\n                },\n                error: false,\n            })\n            initBalances()\n            onDone();\n        } catch(e) {\n            const error = retrieveError(e.message)\n            step.callback({\n                error: true,\n                data: null,\n                message: error\n            })\n            initBalances()\n            \n            this.setState({error})\n            onError(error)\n        }\n\n    };\n}\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n    return {\n        step: getStepsModalCurrentStep(state) as StepSwapToken,\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => {\n    return {\n        onTokensSwap: (token: Token, amount: string) => \n            dispatch(swapTokens(token, amount)),\n        advanceStep: () => dispatch(stepsModalAdvanceStep()),\n        initBalances: () => dispatch(initBalances())\n    }\n}\n\nconst SwapTokensStepContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SwapTokensStep);\n\nexport { SwapTokensStep, SwapTokensStepContainer };\n"]},"metadata":{},"sourceType":"module"}