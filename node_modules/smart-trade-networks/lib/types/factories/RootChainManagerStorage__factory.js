"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RootChainManagerStorage__factory = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ethers = require("ethers");

/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
var RootChainManagerStorage__factory = /*#__PURE__*/function () {
  function RootChainManagerStorage__factory() {
    (0, _classCallCheck2["default"])(this, RootChainManagerStorage__factory);
  }

  (0, _createClass2["default"])(RootChainManagerStorage__factory, null, [{
    key: "connect",
    value: function connect(address, signerOrProvider) {
      return new _ethers.Contract(address, _abi, signerOrProvider);
    }
  }]);
  return RootChainManagerStorage__factory;
}();

exports.RootChainManagerStorage__factory = RootChainManagerStorage__factory;
var _abi = [{
  inputs: [],
  name: "childChainManagerAddress",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "childToRootToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  name: "processedExits",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "rootToChildToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "tokenToType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  name: "typeToPredicate",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBlcy9mYWN0b3JpZXMvUm9vdENoYWluTWFuYWdlclN0b3JhZ2VfX2ZhY3RvcnkudHMiXSwibmFtZXMiOlsiUm9vdENoYWluTWFuYWdlclN0b3JhZ2VfX2ZhY3RvcnkiLCJhZGRyZXNzIiwic2lnbmVyT3JQcm92aWRlciIsIkNvbnRyYWN0IiwiX2FiaSIsImlucHV0cyIsIm5hbWUiLCJvdXRwdXRzIiwiaW50ZXJuYWxUeXBlIiwidHlwZSIsInN0YXRlTXV0YWJpbGl0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUlBOztBQUpBOztBQUNBOztBQUNBO0lBT2FBLGdDOzs7Ozs7O1dBQ1gsaUJBQ0VDLE9BREYsRUFFRUMsZ0JBRkYsRUFHMkI7QUFDekIsYUFBTyxJQUFJQyxnQkFBSixDQUNMRixPQURLLEVBRUxHLElBRkssRUFHTEYsZ0JBSEssQ0FBUDtBQUtEOzs7Ozs7QUFHSCxJQUFNRSxJQUFJLEdBQUcsQ0FDWDtBQUNFQyxFQUFBQSxNQUFNLEVBQUUsRUFEVjtBQUVFQyxFQUFBQSxJQUFJLEVBQUUsMEJBRlI7QUFHRUMsRUFBQUEsT0FBTyxFQUFFLENBQ1A7QUFDRUMsSUFBQUEsWUFBWSxFQUFFLFNBRGhCO0FBRUVGLElBQUFBLElBQUksRUFBRSxFQUZSO0FBR0VHLElBQUFBLElBQUksRUFBRTtBQUhSLEdBRE8sQ0FIWDtBQVVFQyxFQUFBQSxlQUFlLEVBQUUsTUFWbkI7QUFXRUQsRUFBQUEsSUFBSSxFQUFFO0FBWFIsQ0FEVyxFQWNYO0FBQ0VKLEVBQUFBLE1BQU0sRUFBRSxDQUNOO0FBQ0VHLElBQUFBLFlBQVksRUFBRSxTQURoQjtBQUVFRixJQUFBQSxJQUFJLEVBQUUsRUFGUjtBQUdFRyxJQUFBQSxJQUFJLEVBQUU7QUFIUixHQURNLENBRFY7QUFRRUgsRUFBQUEsSUFBSSxFQUFFLGtCQVJSO0FBU0VDLEVBQUFBLE9BQU8sRUFBRSxDQUNQO0FBQ0VDLElBQUFBLFlBQVksRUFBRSxTQURoQjtBQUVFRixJQUFBQSxJQUFJLEVBQUUsRUFGUjtBQUdFRyxJQUFBQSxJQUFJLEVBQUU7QUFIUixHQURPLENBVFg7QUFnQkVDLEVBQUFBLGVBQWUsRUFBRSxNQWhCbkI7QUFpQkVELEVBQUFBLElBQUksRUFBRTtBQWpCUixDQWRXLEVBaUNYO0FBQ0VKLEVBQUFBLE1BQU0sRUFBRSxDQUNOO0FBQ0VHLElBQUFBLFlBQVksRUFBRSxTQURoQjtBQUVFRixJQUFBQSxJQUFJLEVBQUUsRUFGUjtBQUdFRyxJQUFBQSxJQUFJLEVBQUU7QUFIUixHQURNLENBRFY7QUFRRUgsRUFBQUEsSUFBSSxFQUFFLGdCQVJSO0FBU0VDLEVBQUFBLE9BQU8sRUFBRSxDQUNQO0FBQ0VDLElBQUFBLFlBQVksRUFBRSxNQURoQjtBQUVFRixJQUFBQSxJQUFJLEVBQUUsRUFGUjtBQUdFRyxJQUFBQSxJQUFJLEVBQUU7QUFIUixHQURPLENBVFg7QUFnQkVDLEVBQUFBLGVBQWUsRUFBRSxNQWhCbkI7QUFpQkVELEVBQUFBLElBQUksRUFBRTtBQWpCUixDQWpDVyxFQW9EWDtBQUNFSixFQUFBQSxNQUFNLEVBQUUsQ0FDTjtBQUNFRyxJQUFBQSxZQUFZLEVBQUUsU0FEaEI7QUFFRUYsSUFBQUEsSUFBSSxFQUFFLEVBRlI7QUFHRUcsSUFBQUEsSUFBSSxFQUFFO0FBSFIsR0FETSxDQURWO0FBUUVILEVBQUFBLElBQUksRUFBRSxrQkFSUjtBQVNFQyxFQUFBQSxPQUFPLEVBQUUsQ0FDUDtBQUNFQyxJQUFBQSxZQUFZLEVBQUUsU0FEaEI7QUFFRUYsSUFBQUEsSUFBSSxFQUFFLEVBRlI7QUFHRUcsSUFBQUEsSUFBSSxFQUFFO0FBSFIsR0FETyxDQVRYO0FBZ0JFQyxFQUFBQSxlQUFlLEVBQUUsTUFoQm5CO0FBaUJFRCxFQUFBQSxJQUFJLEVBQUU7QUFqQlIsQ0FwRFcsRUF1RVg7QUFDRUosRUFBQUEsTUFBTSxFQUFFLENBQ047QUFDRUcsSUFBQUEsWUFBWSxFQUFFLFNBRGhCO0FBRUVGLElBQUFBLElBQUksRUFBRSxFQUZSO0FBR0VHLElBQUFBLElBQUksRUFBRTtBQUhSLEdBRE0sQ0FEVjtBQVFFSCxFQUFBQSxJQUFJLEVBQUUsYUFSUjtBQVNFQyxFQUFBQSxPQUFPLEVBQUUsQ0FDUDtBQUNFQyxJQUFBQSxZQUFZLEVBQUUsU0FEaEI7QUFFRUYsSUFBQUEsSUFBSSxFQUFFLEVBRlI7QUFHRUcsSUFBQUEsSUFBSSxFQUFFO0FBSFIsR0FETyxDQVRYO0FBZ0JFQyxFQUFBQSxlQUFlLEVBQUUsTUFoQm5CO0FBaUJFRCxFQUFBQSxJQUFJLEVBQUU7QUFqQlIsQ0F2RVcsRUEwRlg7QUFDRUosRUFBQUEsTUFBTSxFQUFFLENBQ047QUFDRUcsSUFBQUEsWUFBWSxFQUFFLFNBRGhCO0FBRUVGLElBQUFBLElBQUksRUFBRSxFQUZSO0FBR0VHLElBQUFBLElBQUksRUFBRTtBQUhSLEdBRE0sQ0FEVjtBQVFFSCxFQUFBQSxJQUFJLEVBQUUsaUJBUlI7QUFTRUMsRUFBQUEsT0FBTyxFQUFFLENBQ1A7QUFDRUMsSUFBQUEsWUFBWSxFQUFFLFNBRGhCO0FBRUVGLElBQUFBLElBQUksRUFBRSxFQUZSO0FBR0VHLElBQUFBLElBQUksRUFBRTtBQUhSLEdBRE8sQ0FUWDtBQWdCRUMsRUFBQUEsZUFBZSxFQUFFLE1BaEJuQjtBQWlCRUQsRUFBQUEsSUFBSSxFQUFFO0FBakJSLENBMUZXLENBQWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBdXRvZ2VuZXJhdGVkIGZpbGUuIERvIG5vdCBlZGl0IG1hbnVhbGx5LiAqL1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmltcG9ydCB7IENvbnRyYWN0LCBTaWduZXIgfSBmcm9tIFwiZXRoZXJzXCI7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJAZXRoZXJzcHJvamVjdC9wcm92aWRlcnNcIjtcblxuaW1wb3J0IHR5cGUgeyBSb290Q2hhaW5NYW5hZ2VyU3RvcmFnZSB9IGZyb20gXCIuLi9Sb290Q2hhaW5NYW5hZ2VyU3RvcmFnZVwiO1xuXG5leHBvcnQgY2xhc3MgUm9vdENoYWluTWFuYWdlclN0b3JhZ2VfX2ZhY3Rvcnkge1xuICBzdGF0aWMgY29ubmVjdChcbiAgICBhZGRyZXNzOiBzdHJpbmcsXG4gICAgc2lnbmVyT3JQcm92aWRlcjogU2lnbmVyIHwgUHJvdmlkZXJcbiAgKTogUm9vdENoYWluTWFuYWdlclN0b3JhZ2Uge1xuICAgIHJldHVybiBuZXcgQ29udHJhY3QoXG4gICAgICBhZGRyZXNzLFxuICAgICAgX2FiaSxcbiAgICAgIHNpZ25lck9yUHJvdmlkZXJcbiAgICApIGFzIFJvb3RDaGFpbk1hbmFnZXJTdG9yYWdlO1xuICB9XG59XG5cbmNvbnN0IF9hYmkgPSBbXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiY2hpbGRDaGFpbk1hbmFnZXJBZGRyZXNzXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgIH0sXG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgIH0sXG4gICAgXSxcbiAgICBuYW1lOiBcImNoaWxkVG9Sb290VG9rZW5cIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgfSxcbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlczMyXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgfSxcbiAgICBdLFxuICAgIG5hbWU6IFwicHJvY2Vzc2VkRXhpdHNcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJib29sXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwiYm9vbFwiLFxuICAgICAgfSxcbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgfSxcbiAgICBdLFxuICAgIG5hbWU6IFwicm9vdFRvQ2hpbGRUb2tlblwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgbmFtZTogXCJ0b2tlblRvVHlwZVwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzMzJcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJieXRlczMyXCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzMzJcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJieXRlczMyXCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgbmFtZTogXCJ0eXBlVG9QcmVkaWNhdGVcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgfSxcbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICB9LFxuXTtcbiJdfQ==