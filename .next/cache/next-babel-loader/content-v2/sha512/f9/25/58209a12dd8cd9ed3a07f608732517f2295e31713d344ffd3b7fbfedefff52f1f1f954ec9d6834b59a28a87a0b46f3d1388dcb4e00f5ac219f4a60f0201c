{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { SadIcon } from './icons/sad_icon';\nimport { WarningIcon } from './icons/warning_icon';\nimport { LockIcon } from './icons/lock_icon';\nexport let ErrorIcons;\n\n(function (ErrorIcons) {\n  ErrorIcons[ErrorIcons[\"Lock\"] = 1] = \"Lock\";\n  ErrorIcons[ErrorIcons[\"Sad\"] = 2] = \"Sad\";\n  ErrorIcons[ErrorIcons[\"Metamask\"] = 3] = \"Metamask\";\n  ErrorIcons[ErrorIcons[\"Warning\"] = 4] = \"Warning\";\n})(ErrorIcons || (ErrorIcons = {}));\n\nexport let FontSize;\n\n(function (FontSize) {\n  FontSize[FontSize[\"Large\"] = 1] = \"Large\";\n  FontSize[FontSize[\"Medium\"] = 2] = \"Medium\";\n})(FontSize || (FontSize = {}));\n\nconst getIcon = icon => {\n  let theIcon;\n\n  if (icon === ErrorIcons.Lock) {\n    theIcon = /*#__PURE__*/_jsx(LockIcon, {});\n  }\n\n  if (icon === ErrorIcons.Metamask) {\n    theIcon = /*#__PURE__*/_jsx(LockIcon, {});\n  }\n\n  if (icon === ErrorIcons.Sad) {\n    theIcon = /*#__PURE__*/_jsx(SadIcon, {});\n  }\n\n  if (icon === ErrorIcons.Warning) {\n    theIcon = /*#__PURE__*/_jsx(WarningIcon, {});\n  }\n\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: \"icon-container\",\n    children: theIcon\n  });\n};\n\nconst ErrorCard = props => {\n  const {\n    text,\n    icon,\n    fontSize\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"text\", \"icon\", \"fontSize\"]);\n\n  const errorIcon = icon ? getIcon(icon) : null;\n  const font = FontSize.Large ? 'large' : 'small';\n  return /*#__PURE__*/_jsxs(\"div\", _objectSpread(_objectSpread({\n    className: `error-card-container ${font}`\n  }, restProps), {}, {\n    children: [errorIcon, text]\n  }));\n};\n\nexport { ErrorCard };","map":null,"metadata":{},"sourceType":"module"}