{"ast":null,"code":"import { utils } from \"ethers\";\nimport { ERC20Controller } from \"smart-trade-networks\";\nexport const getBalanceOf = async (token, account, signer) => {\n  const erc20Controller = new ERC20Controller(token, signer);\n  return erc20Controller.balanceOf(account);\n};\nexport const getDecimalsOf = async (token, signer) => {\n  const erc20Controller = new ERC20Controller(token, signer);\n  return erc20Controller.getDecimals();\n};\nexport const getNameAndSymbolOf = async (token, signer) => {\n  const erc20Controller = new ERC20Controller(token, signer);\n  const symbol = await erc20Controller.getSymbol();\n  const name = await erc20Controller.getName();\n  return {\n    name,\n    symbol\n  };\n};\nexport const getTokenTotalSupply = async (signer, address, decimals) => {\n  const erc20Controller = new ERC20Controller(address, signer);\n  const totalSupply = await erc20Controller.getTotalSupply();\n  return utils.formatUnits(totalSupply, decimals);\n};\nexport const getBalance = async (signer, address, account, decimals) => {\n  const erc20Controller = new ERC20Controller(address, signer);\n  const balance = await erc20Controller.balanceOf(account);\n  return utils.formatUnits(balance, decimals);\n};\nexport const approveTokens = async (signer, address, to, amount) => {\n  const erc20Controller = new ERC20Controller(address, signer);\n  return erc20Controller.approve(to, amount);\n};\nexport const getAllowance = async (signer, address, spender, decimals) => {\n  const erc20Controller = new ERC20Controller(address, signer);\n  const allowance = await erc20Controller.getAllowance(await signer.getAddress(), spender);\n  return utils.formatUnits(allowance, decimals);\n};","map":null,"metadata":{},"sourceType":"module"}