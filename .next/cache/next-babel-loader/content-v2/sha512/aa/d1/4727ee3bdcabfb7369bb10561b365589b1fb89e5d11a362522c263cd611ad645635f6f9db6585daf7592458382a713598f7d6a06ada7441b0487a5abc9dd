{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { ChainId } from 'simple-uniswap-sdk';\n\nvar ChainService =\n/** @class */\nfunction () {\n  function ChainService(_ethereumProvider) {\n    this._ethereumProvider = _ethereumProvider;\n    this.newBlock$ = new Subject();\n    this.unwatch();\n    this.watchBlocks();\n  }\n  /**\r\n   * Get the block explorer for transaction hash\r\n   * @param chainId The chain id\r\n   * @param transactionHash The transaction hash\r\n   */\n\n\n  ChainService.prototype.getBlockExplorerLinkForTransactionHash = function (chainId, transactionHash) {\n    return this.getBlockExplorerForNetwork(chainId) + \"tx/\" + transactionHash;\n  };\n  /**\r\n   * unwatch any block streams\r\n   */\n\n\n  ChainService.prototype.unwatch = function () {\n    this._ethereumProvider.provider.removeAllListeners('block');\n  };\n  /**\r\n   * Get block explorer link for network\r\n   * @param network The network\r\n   */\n\n\n  ChainService.prototype.getBlockExplorerForNetwork = function (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n        return 'https://etherscan.io/';\n\n      case ChainId.RINKEBY:\n        return 'https://rinkeby.etherscan.io/';\n\n      case ChainId.ROPSTEN:\n        return 'https://ropsten.etherscan.io/';\n\n      case ChainId.KOVAN:\n        return 'https://kovan.etherscan.io/';\n\n      case ChainId.GÃ–RLI:\n        return 'https://goerli.etherscan.io/';\n\n      default:\n        throw new Error('Network is not defined');\n    }\n  };\n  /**\r\n   * Watch blocks\r\n   */\n\n\n  ChainService.prototype.watchBlocks = function () {\n    var _this = this;\n\n    this._ethereumProvider.provider.on('block', function (block) {\n      _this.handleNewBlock(block);\n    });\n  };\n  /**\r\n   * Handle new block\r\n   */\n\n\n  ChainService.prototype.handleNewBlock = function (block) {\n    this.newBlock$.next(block);\n  };\n\n  return ChainService;\n}();\n\nexport { ChainService };","map":null,"metadata":{},"sourceType":"module"}