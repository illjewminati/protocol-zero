{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ethers } from 'ethers';\nimport Web3 from 'web3';\nvar web3Wrapper = null;\nexport var isMetamaskInstalled = function isMetamaskInstalled() {\n  var _window = window,\n      ethereum = _window.ethereum,\n      web3 = _window.web3;\n  return ethereum || web3;\n}; //0x02c1f487092fe14ae85cc2411b951669518df586\n//0x05db46b2588ebb55b4525b5d6103f41a776f9ec2\n\nexport var enableWeb3 = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(callback) {\n    var _window2, ethereum, location, provider;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _window2 = window, ethereum = _window2.ethereum, location = _window2.location;\n            _context2.prev = 1;\n            provider = new ethers.providers.Web3Provider(ethereum, \"any\"); // Request account access if needed\n\n            _context2.next = 5;\n            return provider.send(\"eth_requestAccounts\", []);\n\n          case 5:\n            // Subscriptions register\n            ethereum.on('accountsChanged', /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(accounts) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        // Reload to avoid MetaMask bug: \"MetaMask - RPC Error: Internal JSON-RPC\"\n                        callback();\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n            return _context2.abrupt(\"return\", true);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", false);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 9]]);\n  }));\n\n  return function enableWeb3(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var initializeWeb3Wrapper = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var _window3, ethereum, web3;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _window3 = window, ethereum = _window3.ethereum, web3 = _window3.web3;\n\n            if (!ethereum) {\n              _context3.next = 5;\n              break;\n            }\n\n            web3Wrapper = new ethers.providers.Web3Provider(ethereum, \"any\");\n            _context3.next = 10;\n            break;\n\n          case 5:\n            if (!web3) {\n              _context3.next = 9;\n              break;\n            }\n\n            web3Wrapper = new ethers.providers.Web3Provider(web3.currentProvider);\n            _context3.next = 10;\n            break;\n\n          case 9:\n            return _context3.abrupt(\"return\", null);\n\n          case 10:\n            return _context3.abrupt(\"return\", web3Wrapper);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function initializeWeb3Wrapper() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var listenNetwork = function listenNetwork(callback) {\n  var _window4 = window,\n      ethereum = _window4.ethereum,\n      location = _window4.location;\n  ethereum.on('networkChanged', /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(network) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(\"cbba\");\n              callback();\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n};\nexport var getWeb3Wrapper = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (web3Wrapper) {\n              _context5.next = 5;\n              break;\n            }\n\n            _context5.next = 3;\n            return sleep(100);\n\n          case 3:\n            _context5.next = 0;\n            break;\n\n          case 5:\n            return _context5.abrupt(\"return\", web3Wrapper);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getWeb3Wrapper() {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var getWeb3 = function getWeb3() {\n  var _window5 = window,\n      ethereum = _window5.ethereum;\n  return ethereum;\n};\n\nvar _getExternalProvider = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(url) {\n    var provider;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            provider = new ethers.providers.JsonRpcProvider(url);\n            _context6.next = 3;\n            return provider.ready;\n\n          case 3:\n            return _context6.abrupt(\"return\", provider);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function _getExternalProvider(_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nexport var getExternalSigner = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(account, url) {\n    var provider;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _getExternalProvider(url);\n\n          case 2:\n            provider = _context7.sent;\n            return _context7.abrupt(\"return\", new ethers.VoidSigner(account, provider));\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function getExternalSigner(_x5, _x6) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var getExternalProvider = function getExternalProvider(url) {\n  return _getExternalProvider(url);\n};\nexport var getWebSocketProvider = function getWebSocketProvider(url) {\n  return new Web3(new Web3.providers.WebsocketProvider(url));\n};\nexport var getWeb3Provider = function getWeb3Provider(url) {\n  return new Web3(new Web3.providers.HttpProvider(url));\n};\n\nvar sleep = function sleep(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/services/web3_wrapper.ts"],"names":["ethers","Web3","web3Wrapper","isMetamaskInstalled","window","ethereum","web3","enableWeb3","callback","location","provider","providers","Web3Provider","send","on","accounts","initializeWeb3Wrapper","currentProvider","listenNetwork","network","console","log","getWeb3Wrapper","sleep","getWeb3","_getExternalProvider","url","JsonRpcProvider","ready","getExternalSigner","account","VoidSigner","getExternalProvider","getWebSocketProvider","WebsocketProvider","getWeb3Provider","HttpProvider","timeout","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import { ethers } from 'ethers';\nimport Web3 from 'web3';\n\nlet web3Wrapper: ethers.providers.Web3Provider | null = null;\n\nexport const isMetamaskInstalled = (): boolean => {\n    const { ethereum, web3 } = window;\n    return ethereum || web3;\n};\n\n//0x02c1f487092fe14ae85cc2411b951669518df586\n//0x05db46b2588ebb55b4525b5d6103f41a776f9ec2\n\nexport const enableWeb3 = async (callback: () => void): Promise<boolean> => {\n    const { ethereum, location } = window;\n    try {\n\n        const provider = new ethers.providers.Web3Provider(ethereum, \"any\");\n        // Request account access if needed\n        await provider.send(\"eth_requestAccounts\", []);\n\n        // Subscriptions register\n        ethereum.on('accountsChanged', async (accounts: []) => {\n            // Reload to avoid MetaMask bug: \"MetaMask - RPC Error: Internal JSON-RPC\"\n            callback();\n        });\n        \n        return true;\n    } catch (error) {\n        // The user denied account access\n        return false;\n    }\n}\n\nexport const initializeWeb3Wrapper = async (): Promise<ethers.providers.Web3Provider | null> => {\n    const { ethereum, web3 } = window;\n\n    if (ethereum) {\n        web3Wrapper = new ethers.providers.Web3Provider(ethereum, \"any\");\n    } else if (web3) {\n        web3Wrapper =  new ethers.providers.Web3Provider(web3.currentProvider);\n    } else {\n        return null;\n    }\n    return web3Wrapper;\n\n};\n\nexport const listenNetwork = (callback: () => void): any => {\n    const { ethereum, location } = window;\n    ethereum.on('networkChanged', async (network: number) => {\n        console.log(\"cbba\")\n        callback()\n    });\n}\n\nexport const getWeb3Wrapper = async (): Promise<ethers.providers.Web3Provider> => {\n    while (!web3Wrapper) {\n        // if web3Wrapper is not set yet, wait and retry\n        await sleep(100);\n    }\n    return web3Wrapper;\n};\n\nexport const getWeb3 = () => {\n    const { ethereum } = window;\n    return ethereum\n}\n\nconst _getExternalProvider = async(url: string): Promise<ethers.providers.JsonRpcProvider> => {\n    const provider = new ethers.providers.JsonRpcProvider(url);\n    await provider.ready;\n    return provider;\n}\n\nexport const getExternalSigner = async (account: string, url: string): Promise<ethers.Signer> => {\n    const provider = await _getExternalProvider(url);\n    return new ethers.VoidSigner(account, provider)\n} \n\nexport const getExternalProvider = (url: string): Promise<ethers.providers.JsonRpcProvider> => {\n    return _getExternalProvider(url);\n} \n\nexport const getWebSocketProvider = (url: string): Web3 => {\n    return new Web3(new Web3.providers.WebsocketProvider(url));\n}\n\nexport const getWeb3Provider = (url: string): Web3 => {\n    return new Web3(new Web3.providers.HttpProvider(url))\n}\n\nconst sleep = (timeout: number) => new Promise<void>(resolve => setTimeout(resolve, timeout));\n\n\n\n\n   "]},"metadata":{},"sourceType":"module"}