"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OwnableCustom__factory = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _contracts = require("@ethersproject/contracts");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var OwnableCustom__factory = /*#__PURE__*/function (_ContractFactory) {
  (0, _inherits2["default"])(OwnableCustom__factory, _ContractFactory);

  var _super = _createSuper(OwnableCustom__factory);

  function OwnableCustom__factory(signer) {
    (0, _classCallCheck2["default"])(this, OwnableCustom__factory);
    return _super.call(this, _abi, _bytecode, signer);
  }

  (0, _createClass2["default"])(OwnableCustom__factory, [{
    key: "deploy",
    value: function deploy(overrides) {
      return (0, _get2["default"])((0, _getPrototypeOf2["default"])(OwnableCustom__factory.prototype), "deploy", this).call(this, overrides || {});
    }
  }, {
    key: "getDeployTransaction",
    value: function getDeployTransaction(overrides) {
      return (0, _get2["default"])((0, _getPrototypeOf2["default"])(OwnableCustom__factory.prototype), "getDeployTransaction", this).call(this, overrides || {});
    }
  }, {
    key: "attach",
    value: function attach(address) {
      return (0, _get2["default"])((0, _getPrototypeOf2["default"])(OwnableCustom__factory.prototype), "attach", this).call(this, address);
    }
  }, {
    key: "connect",
    value: function connect(signer) {
      return (0, _get2["default"])((0, _getPrototypeOf2["default"])(OwnableCustom__factory.prototype), "connect", this).call(this, signer);
    }
  }], [{
    key: "connect",
    value: function connect(address, signerOrProvider) {
      return new _contracts.Contract(address, _abi, signerOrProvider);
    }
  }]);
  return OwnableCustom__factory;
}(_contracts.ContractFactory);

exports.OwnableCustom__factory = OwnableCustom__factory;
var _abi = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "previousOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnershipTransferred",
  type: "event"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "renounceOwnership",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "transferOwnership",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
var _bytecode = "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6102d98061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e610081565b005b610058610113565b6040516100659190610214565b60405180910390f35b61004e61007c3660046101e6565b610122565b6100896101e2565b6001600160a01b031661009a610113565b6001600160a01b0316146100c95760405162461bcd60e51b81526004016100c09061026e565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61012a6101e2565b6001600160a01b031661013b610113565b6001600160a01b0316146101615760405162461bcd60e51b81526004016100c09061026e565b6001600160a01b0381166101875760405162461bcd60e51b81526004016100c090610228565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000602082840312156101f7578081fd5b81356001600160a01b038116811461020d578182fd5b9392505050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122031a248433a44be99ca59788587aa7858e6686bd92c4c3ac4d6c62c91463bd6c164736f6c63430008000033";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBlcy9mYWN0b3JpZXMvT3duYWJsZUN1c3RvbV9fZmFjdG9yeS50cyJdLCJuYW1lcyI6WyJPd25hYmxlQ3VzdG9tX19mYWN0b3J5Iiwic2lnbmVyIiwiX2FiaSIsIl9ieXRlY29kZSIsIm92ZXJyaWRlcyIsImFkZHJlc3MiLCJzaWduZXJPclByb3ZpZGVyIiwiQ29udHJhY3QiLCJDb250cmFjdEZhY3RvcnkiLCJpbnB1dHMiLCJzdGF0ZU11dGFiaWxpdHkiLCJ0eXBlIiwiYW5vbnltb3VzIiwiaW5kZXhlZCIsImludGVybmFsVHlwZSIsIm5hbWUiLCJvdXRwdXRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNQTs7Ozs7O0lBSWFBLHNCOzs7OztBQUNYLGtDQUFZQyxNQUFaLEVBQTZCO0FBQUE7QUFBQSw2QkFDckJDLElBRHFCLEVBQ2ZDLFNBRGUsRUFDSkYsTUFESTtBQUU1Qjs7OztXQUVELGdCQUFPRyxTQUFQLEVBQXNEO0FBQ3BELGtJQUFvQkEsU0FBUyxJQUFJLEVBQWpDO0FBQ0Q7OztXQUNELDhCQUFxQkEsU0FBckIsRUFBZ0U7QUFDOUQsZ0pBQWtDQSxTQUFTLElBQUksRUFBL0M7QUFDRDs7O1dBQ0QsZ0JBQU9DLE9BQVAsRUFBdUM7QUFDckMsa0lBQW9CQSxPQUFwQjtBQUNEOzs7V0FDRCxpQkFBUUosTUFBUixFQUFnRDtBQUM5QyxtSUFBcUJBLE1BQXJCO0FBQ0Q7OztXQUNELGlCQUNFSSxPQURGLEVBRUVDLGdCQUZGLEVBR2lCO0FBQ2YsYUFBTyxJQUFJQyxtQkFBSixDQUFhRixPQUFiLEVBQXNCSCxJQUF0QixFQUE0QkksZ0JBQTVCLENBQVA7QUFDRDs7O0VBdEJ5Q0UsMEI7OztBQXlCNUMsSUFBTU4sSUFBSSxHQUFHLENBQ1g7QUFDRU8sRUFBQUEsTUFBTSxFQUFFLEVBRFY7QUFFRUMsRUFBQUEsZUFBZSxFQUFFLFlBRm5CO0FBR0VDLEVBQUFBLElBQUksRUFBRTtBQUhSLENBRFcsRUFNWDtBQUNFQyxFQUFBQSxTQUFTLEVBQUUsS0FEYjtBQUVFSCxFQUFBQSxNQUFNLEVBQUUsQ0FDTjtBQUNFSSxJQUFBQSxPQUFPLEVBQUUsSUFEWDtBQUVFQyxJQUFBQSxZQUFZLEVBQUUsU0FGaEI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFLGVBSFI7QUFJRUosSUFBQUEsSUFBSSxFQUFFO0FBSlIsR0FETSxFQU9OO0FBQ0VFLElBQUFBLE9BQU8sRUFBRSxJQURYO0FBRUVDLElBQUFBLFlBQVksRUFBRSxTQUZoQjtBQUdFQyxJQUFBQSxJQUFJLEVBQUUsVUFIUjtBQUlFSixJQUFBQSxJQUFJLEVBQUU7QUFKUixHQVBNLENBRlY7QUFnQkVJLEVBQUFBLElBQUksRUFBRSxzQkFoQlI7QUFpQkVKLEVBQUFBLElBQUksRUFBRTtBQWpCUixDQU5XLEVBeUJYO0FBQ0VGLEVBQUFBLE1BQU0sRUFBRSxFQURWO0FBRUVNLEVBQUFBLElBQUksRUFBRSxPQUZSO0FBR0VDLEVBQUFBLE9BQU8sRUFBRSxDQUNQO0FBQ0VGLElBQUFBLFlBQVksRUFBRSxTQURoQjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsRUFGUjtBQUdFSixJQUFBQSxJQUFJLEVBQUU7QUFIUixHQURPLENBSFg7QUFVRUQsRUFBQUEsZUFBZSxFQUFFLE1BVm5CO0FBV0VDLEVBQUFBLElBQUksRUFBRTtBQVhSLENBekJXLEVBc0NYO0FBQ0VGLEVBQUFBLE1BQU0sRUFBRSxFQURWO0FBRUVNLEVBQUFBLElBQUksRUFBRSxtQkFGUjtBQUdFQyxFQUFBQSxPQUFPLEVBQUUsRUFIWDtBQUlFTixFQUFBQSxlQUFlLEVBQUUsWUFKbkI7QUFLRUMsRUFBQUEsSUFBSSxFQUFFO0FBTFIsQ0F0Q1csRUE2Q1g7QUFDRUYsRUFBQUEsTUFBTSxFQUFFLENBQ047QUFDRUssSUFBQUEsWUFBWSxFQUFFLFNBRGhCO0FBRUVDLElBQUFBLElBQUksRUFBRSxVQUZSO0FBR0VKLElBQUFBLElBQUksRUFBRTtBQUhSLEdBRE0sQ0FEVjtBQVFFSSxFQUFBQSxJQUFJLEVBQUUsbUJBUlI7QUFTRUMsRUFBQUEsT0FBTyxFQUFFLEVBVFg7QUFVRU4sRUFBQUEsZUFBZSxFQUFFLFlBVm5CO0FBV0VDLEVBQUFBLElBQUksRUFBRTtBQVhSLENBN0NXLENBQWI7QUE0REEsSUFBTVIsU0FBUyxHQUNiLGdyREFERiIsInNvdXJjZXNDb250ZW50IjpbIi8qIEF1dG9nZW5lcmF0ZWQgZmlsZS4gRG8gbm90IGVkaXQgbWFudWFsbHkuICovXG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuaW1wb3J0IHsgU2lnbmVyIH0gZnJvbSBcImV0aGVyc1wiO1xuaW1wb3J0IHsgUHJvdmlkZXIsIFRyYW5zYWN0aW9uUmVxdWVzdCB9IGZyb20gXCJAZXRoZXJzcHJvamVjdC9wcm92aWRlcnNcIjtcbmltcG9ydCB7IENvbnRyYWN0LCBDb250cmFjdEZhY3RvcnksIE92ZXJyaWRlcyB9IGZyb20gXCJAZXRoZXJzcHJvamVjdC9jb250cmFjdHNcIjtcblxuaW1wb3J0IHR5cGUgeyBPd25hYmxlQ3VzdG9tIH0gZnJvbSBcIi4uL093bmFibGVDdXN0b21cIjtcblxuZXhwb3J0IGNsYXNzIE93bmFibGVDdXN0b21fX2ZhY3RvcnkgZXh0ZW5kcyBDb250cmFjdEZhY3Rvcnkge1xuICBjb25zdHJ1Y3RvcihzaWduZXI/OiBTaWduZXIpIHtcbiAgICBzdXBlcihfYWJpLCBfYnl0ZWNvZGUsIHNpZ25lcik7XG4gIH1cblxuICBkZXBsb3kob3ZlcnJpZGVzPzogT3ZlcnJpZGVzKTogUHJvbWlzZTxPd25hYmxlQ3VzdG9tPiB7XG4gICAgcmV0dXJuIHN1cGVyLmRlcGxveShvdmVycmlkZXMgfHwge30pIGFzIFByb21pc2U8T3duYWJsZUN1c3RvbT47XG4gIH1cbiAgZ2V0RGVwbG95VHJhbnNhY3Rpb24ob3ZlcnJpZGVzPzogT3ZlcnJpZGVzKTogVHJhbnNhY3Rpb25SZXF1ZXN0IHtcbiAgICByZXR1cm4gc3VwZXIuZ2V0RGVwbG95VHJhbnNhY3Rpb24ob3ZlcnJpZGVzIHx8IHt9KTtcbiAgfVxuICBhdHRhY2goYWRkcmVzczogc3RyaW5nKTogT3duYWJsZUN1c3RvbSB7XG4gICAgcmV0dXJuIHN1cGVyLmF0dGFjaChhZGRyZXNzKSBhcyBPd25hYmxlQ3VzdG9tO1xuICB9XG4gIGNvbm5lY3Qoc2lnbmVyOiBTaWduZXIpOiBPd25hYmxlQ3VzdG9tX19mYWN0b3J5IHtcbiAgICByZXR1cm4gc3VwZXIuY29ubmVjdChzaWduZXIpIGFzIE93bmFibGVDdXN0b21fX2ZhY3Rvcnk7XG4gIH1cbiAgc3RhdGljIGNvbm5lY3QoXG4gICAgYWRkcmVzczogc3RyaW5nLFxuICAgIHNpZ25lck9yUHJvdmlkZXI6IFNpZ25lciB8IFByb3ZpZGVyXG4gICk6IE93bmFibGVDdXN0b20ge1xuICAgIHJldHVybiBuZXcgQ29udHJhY3QoYWRkcmVzcywgX2FiaSwgc2lnbmVyT3JQcm92aWRlcikgYXMgT3duYWJsZUN1c3RvbTtcbiAgfVxufVxuXG5jb25zdCBfYWJpID0gW1xuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiY29uc3RydWN0b3JcIixcbiAgfSxcbiAge1xuICAgIGFub255bW91czogZmFsc2UsXG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwicHJldmlvdXNPd25lclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwibmV3T3duZXJcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgbmFtZTogXCJPd25lcnNoaXBUcmFuc2ZlcnJlZFwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIixcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJvd25lclwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwicmVub3VuY2VPd25lcnNoaXBcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIm5ld093bmVyXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgfSxcbiAgICBdLFxuICAgIG5hbWU6IFwidHJhbnNmZXJPd25lcnNoaXBcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgfSxcbl07XG5cbmNvbnN0IF9ieXRlY29kZSA9XG4gIFwiMHg2MDgwNjA0MDUyMzQ4MDE1NjEwMDEwNTc2MDAwODBmZDViNTA2MDAwNjEwMDFiNjEwMDZhNTY1YjYwMDA4MDU0NjAwMTYwMDE2MGEwMWIwMzE5MTY2MDAxNjAwMTYwYTAxYjAzODMxNjkwODExNzgyNTU2MDQwNTE5MjkzNTA5MTdmOGJlMDA3OWM1MzE2NTkxNDEzNDRjZDFmZDBhNGYyODQxOTQ5N2Y5NzIyYTNkYWFmZTNiNDE4NmY2YjY0NTdlMDkwODI5MGEzNTA2MTAwNmU1NjViMzM5MDU2NWI2MTAyZDk4MDYxMDA3ZDYwMDAzOTYwMDBmM2ZlNjA4MDYwNDA1MjM0ODAxNTYxMDAxMDU3NjAwMDgwZmQ1YjUwNjAwNDM2MTA2MTAwNDE1NzYwMDAzNTYwZTAxYzgwNjM3MTUwMThhNjE0NjEwMDQ2NTc4MDYzOGRhNWNiNWIxNDYxMDA1MDU3ODA2M2YyZmRlMzhiMTQ2MTAwNmU1NzViNjAwMDgwZmQ1YjYxMDA0ZTYxMDA4MTU2NWIwMDViNjEwMDU4NjEwMTEzNTY1YjYwNDA1MTYxMDA2NTkxOTA2MTAyMTQ1NjViNjA0MDUxODA5MTAzOTBmMzViNjEwMDRlNjEwMDdjMzY2MDA0NjEwMWU2NTY1YjYxMDEyMjU2NWI2MTAwODk2MTAxZTI1NjViNjAwMTYwMDE2MGEwMWIwMzE2NjEwMDlhNjEwMTEzNTY1YjYwMDE2MDAxNjBhMDFiMDMxNjE0NjEwMGM5NTc2MDQwNTE2MjQ2MWJjZDYwZTUxYjgxNTI2MDA0MDE2MTAwYzA5MDYxMDI2ZTU2NWI2MDQwNTE4MDkxMDM5MGZkNWI2MDAwODA1NDYwNDA1MTYwMDE2MDAxNjBhMDFiMDM5MDkxMTY5MDdmOGJlMDA3OWM1MzE2NTkxNDEzNDRjZDFmZDBhNGYyODQxOTQ5N2Y5NzIyYTNkYWFmZTNiNDE4NmY2YjY0NTdlMDkwODM5MGEzNjAwMDgwNTQ2MDAxNjAwMTYwYTAxYjAzMTkxNjkwNTU1NjViNjAwMDU0NjAwMTYwMDE2MGEwMWIwMzE2OTA1NjViNjEwMTJhNjEwMWUyNTY1YjYwMDE2MDAxNjBhMDFiMDMxNjYxMDEzYjYxMDExMzU2NWI2MDAxNjAwMTYwYTAxYjAzMTYxNDYxMDE2MTU3NjA0MDUxNjI0NjFiY2Q2MGU1MWI4MTUyNjAwNDAxNjEwMGMwOTA2MTAyNmU1NjViNjAwMTYwMDE2MGEwMWIwMzgxMTY2MTAxODc1NzYwNDA1MTYyNDYxYmNkNjBlNTFiODE1MjYwMDQwMTYxMDBjMDkwNjEwMjI4NTY1YjYwMDA4MDU0NjA0MDUxNjAwMTYwMDE2MGEwMWIwMzgwODUxNjkzOTIxNjkxN2Y4YmUwMDc5YzUzMTY1OTE0MTM0NGNkMWZkMGE0ZjI4NDE5NDk3Zjk3MjJhM2RhYWZlM2I0MTg2ZjZiNjQ1N2UwOTFhMzYwMDA4MDU0NjAwMTYwMDE2MGEwMWIwMzE5MTY2MDAxNjAwMTYwYTAxYjAzOTI5MDkyMTY5MTkwOTExNzkwNTU1NjViMzM5MDU2NWI2MDAwNjAyMDgyODQwMzEyMTU2MTAxZjc1NzgwODFmZDViODEzNTYwMDE2MDAxNjBhMDFiMDM4MTE2ODExNDYxMDIwZDU3ODE4MmZkNWI5MzkyNTA1MDUwNTY1YjYwMDE2MDAxNjBhMDFiMDM5MTkwOTExNjgxNTI2MDIwMDE5MDU2NWI2MDIwODA4MjUyNjAyNjkwODIwMTUyN2Y0Zjc3NmU2MTYyNmM2NTNhMjA2ZTY1NzcyMDZmNzc2ZTY1NzIyMDY5NzMyMDc0Njg2NTIwN2E2NTcyNmYyMDYxNjA0MDgyMDE1MjY1NjQ2NDcyNjU3MzczNjBkMDFiNjA2MDgyMDE1MjYwODAwMTkwNTY1YjYwMjA4MDgyNTI4MTgxMDE1MjdmNGY3NzZlNjE2MjZjNjUzYTIwNjM2MTZjNmM2NTcyMjA2OTczMjA2ZTZmNzQyMDc0Njg2NTIwNmY3NzZlNjU3MjYwNDA4MjAxNTI2MDYwMDE5MDU2ZmVhMjY0Njk3MDY2NzM1ODIyMTIyMDMxYTI0ODQzM2E0NGJlOTljYTU5Nzg4NTg3YWE3ODU4ZTY2ODZiZDkyYzRjM2FjNGQ2YzYyYzkxNDYzYmQ2YzE2NDczNmY2YzYzNDMwMDA4MDAwMDMzXCI7XG4iXX0=