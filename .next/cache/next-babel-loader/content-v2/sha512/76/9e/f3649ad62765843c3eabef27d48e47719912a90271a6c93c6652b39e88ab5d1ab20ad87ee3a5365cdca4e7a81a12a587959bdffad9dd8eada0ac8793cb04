{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getStepsModalCurrentStep } from '../../../store/ui/selectors';\nimport { BaseStepModal } from './base_step_modal';\nimport { initBalances, setAllowance, stepsModalAdvanceStep } from '../../../store/actions';\nimport { getWeb3Wrapper } from '../../../services/web3_wrapper';\n\nclass AllowanceStep extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"render\", () => {\n      const {\n        buildStepsProgress,\n        step\n      } = this.props;\n      const {\n        token\n      } = step;\n      const title = `Approve ${token.symbol} Tokens`;\n      const confirmCaption = `Confirm on Metamask to approve tokens`;\n      const loadingCaption = \"Approving Tokens\";\n      const doneCaption = \"Tokens Approved\";\n      const errorCaption = `Failed to approve tokens`;\n      const loadingFooterCaption = `Waiting for confirmation...`;\n      const doneFooterCaption = `Tokens Approved`;\n      return /*#__PURE__*/_jsx(BaseStepModal, {\n        step: step,\n        title: title,\n        confirmCaption: confirmCaption,\n        loadingCaption: loadingCaption,\n        doneCaption: doneCaption,\n        errorCaption: errorCaption,\n        loadingFooterCaption: loadingFooterCaption,\n        doneFooterCaption: doneFooterCaption,\n        buildStepsProgress: buildStepsProgress,\n        estimatedTxTimeMs: 30000,\n        runAction: this._approveTokens,\n        showPartialProgress: true\n      });\n    });\n\n    _defineProperty(this, \"_approveTokens\", async ({\n      onLoading,\n      onDone,\n      onError\n    }) => {\n      const {\n        step,\n        onTokensToApprove,\n        advanceStep,\n        initBalances\n      } = this.props;\n      const web3Wrapper = await getWeb3Wrapper();\n\n      try {\n        const contractTransaction = await onTokensToApprove(step.token.address, step.amount, step.to);\n        onLoading();\n        const contractReceipt = await contractTransaction.wait();\n        await web3Wrapper.waitForTransaction(contractReceipt.transactionHash);\n        initBalances();\n        advanceStep();\n      } catch (e) {\n        onError(e);\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    step: getStepsModalCurrentStep(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTokensToApprove: (tokenAddress, amount, from) => dispatch(setAllowance(tokenAddress, amount.toString(), from)),\n    advanceStep: () => dispatch(stepsModalAdvanceStep()),\n    initBalances: () => dispatch(initBalances())\n  };\n};\n\nconst AllowanceStepContainer = connect(mapStateToProps, mapDispatchToProps)(AllowanceStep);\nexport { AllowanceStep, AllowanceStepContainer };","map":null,"metadata":{},"sourceType":"module"}