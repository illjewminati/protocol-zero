{"ast":null,"code":"export const addToken = async token => {\n  try {\n    // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n    const wasAdded = await window.ethereum.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        // Initially only supports ERC20, but eventually more!\n        options: {\n          address: token.address,\n          // The address that the token is at.\n          symbol: token.symbol,\n          // A ticker symbol or shorthand, up to 5 chars.\n          decimals: token.decimals // The number of decimals in the token\n\n        }\n      }\n    });\n    return wasAdded;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/services/metamask.ts"],"names":["addToken","token","wasAdded","window","ethereum","request","method","params","type","options","address","symbol","decimals","error"],"mappings":"AAGA,OAAO,MAAMA,QAAQ,GAAG,MAAOC,KAAP,IAAwB;AAC5C,MAAI;AACA;AACA,UAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAC3CC,MAAAA,MAAM,EAAE,mBADmC;AAE3CC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE,OADF;AACW;AACfC,QAAAA,OAAO,EAAE;AACLC,UAAAA,OAAO,EAAET,KAAK,CAACS,OADV;AACmB;AACxBC,UAAAA,MAAM,EAAEV,KAAK,CAACU,MAFT;AAEiB;AACtBC,UAAAA,QAAQ,EAAEX,KAAK,CAACW,QAHX,CAGqB;;AAHrB;AAFL;AAFmC,KAAxB,CAAvB;AAYA,WAAOV,QAAP;AACH,GAfD,CAeE,OAAOW,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AAEJ,CApBM","sourcesContent":["import { Token } from \"../types/blockchain\";\n\n\nexport const addToken = async (token: Token) => {\n    try {\n        // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n        const wasAdded = await window.ethereum.request({\n            method: 'wallet_watchAsset',\n            params: {\n                type: 'ERC20', // Initially only supports ERC20, but eventually more!\n                options: {\n                    address: token.address, // The address that the token is at.\n                    symbol: token.symbol, // A ticker symbol or shorthand, up to 5 chars.\n                    decimals: token.decimals, // The number of decimals in the token\n                },\n            },\n        });\n\n        return wasAdded\n    } catch (error) {\n        throw(error)\n    }\n\n}"]},"metadata":{},"sourceType":"module"}