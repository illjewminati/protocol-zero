{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BigNumber, ethers, utils } from \"ethers\";\nimport { getContract } from \"./contract_loader\";\nimport * as artifact from \"../../artifacts/contracts/TokenPaymaster.sol/TokenPaymaster.json\";\nimport { getDecimalsOf } from \"./erc20_service\";\nvar address = process.env.GSN_PAYMASTER;\nexport var loadPaymasterContract = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(signer) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", getContract(address, artifact.abi, signer));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadPaymasterContract(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getMinBalance = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(signer) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context2.sent;\n            return _context2.abrupt(\"return\", contract.minBalance());\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getMinBalance(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getMinGas = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(signer) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context3.sent;\n            return _context3.abrupt(\"return\", contract.minGas());\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getMinGas(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getOwner = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(signer) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context4.sent;\n            return _context4.abrupt(\"return\", contract.owner());\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getOwner(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var getPaymentData = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(signer) {\n    var contract, data, decimals;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context5.sent;\n            _context5.next = 5;\n            return contract.getPaymentData();\n\n          case 5:\n            data = _context5.sent;\n            _context5.next = 8;\n            return getDecimalsOf(data[0], signer);\n\n          case 8:\n            decimals = _context5.sent;\n            return _context5.abrupt(\"return\", {\n              paymentToken: data[0],\n              fee: utils.formatUnits(data[1], decimals)\n            });\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getPaymentData(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var getGasUsedByPost = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(signer) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context6.sent;\n            return _context6.abrupt(\"return\", contract.gasUsedByPost());\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function getGasUsedByPost(_x6) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var getTargetContract = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(signer) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context7.sent;\n            return _context7.abrupt(\"return\", contract.target());\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function getTargetContract(_x7) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var getTokenToEthOutput = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(signer, amount, token1, token2) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context8.sent;\n            return _context8.abrupt(\"return\", contract.getTokenToEthOutput(ethers.utils.parseUnits(amount, token1.decimals), [token1.address, token2]));\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function getTokenToEthOutput(_x8, _x9, _x10, _x11) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var setMinBalance = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(signer, amount) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context9.sent;\n            return _context9.abrupt(\"return\", contract.setMinBalance(ethers.utils.parseEther(amount)));\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function setMinBalance(_x12, _x13) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nexport var setPaymentToken = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(signer, address) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context10.sent;\n            return _context10.abrupt(\"return\", contract.setPaymentToken(address));\n\n          case 4:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function setPaymentToken(_x14, _x15) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nexport var setFee = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(signer, amount) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context11.sent;\n            return _context11.abrupt(\"return\", contract.setFee(ethers.utils.parseEther(amount)));\n\n          case 4:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function setFee(_x16, _x17) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nexport var whitelistToken = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(signer, address, whitelist) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context12.sent;\n            return _context12.abrupt(\"return\", contract.whitelistToken(address, whitelist));\n\n          case 4:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function whitelistToken(_x18, _x19, _x20) {\n    return _ref12.apply(this, arguments);\n  };\n}();\nexport var setGasUsedByPost = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(signer, amount) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context13.sent;\n            return _context13.abrupt(\"return\", contract.setGasUsedByPost(BigNumber.from(amount)));\n\n          case 4:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n\n  return function setGasUsedByPost(_x21, _x22) {\n    return _ref13.apply(this, arguments);\n  };\n}();\nexport var setMinGas = /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(signer, amount) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context14.sent;\n            return _context14.abrupt(\"return\", contract.setMinGas(BigNumber.from(amount)));\n\n          case 4:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n\n  return function setMinGas(_x23, _x24) {\n    return _ref14.apply(this, arguments);\n  };\n}();\nexport var setTarget = /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(signer, address) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context15.sent;\n            return _context15.abrupt(\"return\", contract.setTarget(address));\n\n          case 4:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n\n  return function setTarget(_x25, _x26) {\n    return _ref15.apply(this, arguments);\n  };\n}();\nexport var setRelayHub = /*#__PURE__*/function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(signer, address) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            _context16.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context16.sent;\n            return _context16.abrupt(\"return\", contract.setRelayHub(address));\n\n          case 4:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n\n  return function setRelayHub(_x27, _x28) {\n    return _ref16.apply(this, arguments);\n  };\n}();\nexport var setForwarder = /*#__PURE__*/function () {\n  var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(signer, address) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            _context17.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context17.sent;\n            return _context17.abrupt(\"return\", contract.setTrustedForwarder(address));\n\n          case 4:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  }));\n\n  return function setForwarder(_x29, _x30) {\n    return _ref17.apply(this, arguments);\n  };\n}();\nexport var withdrawFromRelayHub = /*#__PURE__*/function () {\n  var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(signer, amount, receiver) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.next = 2;\n            return loadPaymasterContract(signer);\n\n          case 2:\n            contract = _context18.sent;\n            return _context18.abrupt(\"return\", contract.withdrawRelayHubDepositTo(ethers.utils.parseEther(amount), receiver));\n\n          case 4:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n\n  return function withdrawFromRelayHub(_x31, _x32, _x33) {\n    return _ref18.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/services/paymaster.ts"],"names":["BigNumber","ethers","utils","getContract","artifact","getDecimalsOf","address","process","env","GSN_PAYMASTER","loadPaymasterContract","signer","abi","getMinBalance","contract","minBalance","getMinGas","minGas","getOwner","owner","getPaymentData","data","decimals","paymentToken","fee","formatUnits","getGasUsedByPost","gasUsedByPost","getTargetContract","target","getTokenToEthOutput","amount","token1","token2","parseUnits","setMinBalance","parseEther","setPaymentToken","setFee","whitelistToken","whitelist","setGasUsedByPost","from","setMinGas","setTarget","setRelayHub","setForwarder","setTrustedForwarder","withdrawFromRelayHub","receiver","withdrawRelayHubDepositTo"],"mappings":"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","sourcesContent":["import { BigNumber, Contract, ContractTransaction, ethers, Signer, utils } from \"ethers\"\nimport { getContract } from \"./contract_loader\"\n\nimport * as artifact from \"../../artifacts/contracts/TokenPaymaster.sol/TokenPaymaster.json\";\nimport { PaymasterPaymentData, Token } from \"../types/blockchain\";\nimport { getDecimalsOf } from \"./erc20_service\";\n\nconst address = process.env.GSN_PAYMASTER;\n\nexport const loadPaymasterContract = async (signer: Signer): Promise<Contract> => {\n    return getContract(address, artifact.abi, signer)\n}\n\n\nexport const getMinBalance = async (signer: Signer): Promise<BigNumber> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.minBalance();\n}\n\nexport const getMinGas = async (signer: Signer): Promise<BigNumber> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.minGas();\n}\n\nexport const getOwner = async (signer: Signer): Promise<string> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.owner()\n}\n\nexport const getPaymentData = async (signer: Signer): Promise<PaymasterPaymentData> => {\n    const contract = await loadPaymasterContract(signer);\n    const data = await contract.getPaymentData();\n    const decimals = await getDecimalsOf(data[0], signer);\n    return {\n        paymentToken: data[0],\n        fee: utils.formatUnits(data[1], decimals)\n    }\n}\n\nexport const getGasUsedByPost = async (signer: Signer): Promise<BigNumber> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.gasUsedByPost();\n}\n\nexport const getTargetContract = async (signer: Signer): Promise<string> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.target();\n}\n\nexport const getTokenToEthOutput = async (\n    signer: Signer, \n    amount: string, \n    token1: Token, \n    token2: string\n): Promise<string> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.getTokenToEthOutput(\n        ethers.utils.parseUnits(amount, token1.decimals),\n        [token1.address, token2]\n    )\n}\n\nexport const setMinBalance = async (signer: Signer, amount: string): Promise<ContractTransaction> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.setMinBalance(ethers.utils.parseEther(amount))\n}\n\nexport const setPaymentToken = async (signer: Signer, address: string): Promise<ContractTransaction> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.setPaymentToken(address)\n}\n\nexport const setFee = async (signer: Signer, amount: string): Promise<ContractTransaction> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.setFee(ethers.utils.parseEther(amount))\n}\n\nexport const whitelistToken = async (signer: Signer, address: string, whitelist: boolean): Promise<ContractTransaction> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.whitelistToken(address, whitelist)\n}\n\nexport const setGasUsedByPost = async (signer: Signer, amount: string): Promise<ContractTransaction> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.setGasUsedByPost(BigNumber.from(amount))\n}\n\nexport const setMinGas = async (signer: Signer, amount: string): Promise<ContractTransaction> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.setMinGas(BigNumber.from(amount))\n}\n\nexport const setTarget = async (signer: Signer, address: string): Promise<ContractTransaction> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.setTarget(address)\n}\n\nexport const setRelayHub = async (signer: Signer, address: string): Promise<ContractTransaction> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.setRelayHub(address)\n}\n\nexport const setForwarder = async (signer: Signer, address: string): Promise<ContractTransaction> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.setTrustedForwarder(address)\n}\n\nexport const withdrawFromRelayHub = async (signer: Signer, amount: string, receiver: string): Promise<ContractTransaction> => {\n    const contract = await loadPaymasterContract(signer);\n    return contract.withdrawRelayHubDepositTo(ethers.utils.parseEther(amount), receiver)\n}"]},"metadata":{},"sourceType":"module"}