import { BigNumberish, ContractTransaction, Signer } from "ethers";
import { ProviderOrSigner } from "../../localTypes";
export declare class ERC721Controller {
    protected _signer: Signer;
    private _erc721Address;
    private _erc721Contract?;
    constructor(erc721Address: string, signerOrProvider: ProviderOrSigner);
    private _getERC721Contract;
    /** Getters */
    balanceOf(user: string): Promise<BigNumberish>;
    getApproved(tokenId: BigNumberish): Promise<string>;
    isApprovedForAll(owner: string, operator: string): Promise<boolean>;
    exists(tokenId: BigNumberish): Promise<boolean>;
    getTotalTokens(): Promise<BigNumberish>;
    getOwnerOf(tokenId: BigNumberish): Promise<string>;
    getOwner(): Promise<string>;
    /** Version 1_1 */
    getGroupingAddress(tokenId: BigNumberish): Promise<string>;
    /**Setters */
    approve(to: string, tokenId: BigNumberish): Promise<ContractTransaction>;
    setApprovalForAll(to: string, approved: boolean): Promise<ContractTransaction>;
    transferFrom(from: string, to: string, tokenId: BigNumberish): Promise<ContractTransaction>;
}
