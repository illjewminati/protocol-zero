{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bignumber_js_1 = require(\"bignumber.js\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar uniswap_dapp_integration_shared_1 = require(\"../../../uniswap-dapp-integration-shared\");\n\nvar approval_1 = __importDefault(require(\"./components/approval\"));\n\nvar confirmSwap_1 = __importDefault(require(\"./components/confirmSwap\"));\n\nvar header_1 = __importDefault(require(\"./components/header\"));\n\nvar loading_1 = __importDefault(require(\"./components/loading\"));\n\nvar swapQuoteInfo_1 = __importDefault(require(\"./components/swapQuoteInfo\"));\n\nvar tokenIcon_1 = __importDefault(require(\"./components/tokenIcon\"));\n\nvar tokensModal_1 = __importDefault(require(\"./components/tokensModal\"));\n\nvar transactionModal_1 = __importDefault(require(\"./components/transactionModal\"));\n\nvar uniswapDappSharedLogic;\nvar subscriptions = [];\nvar DEBOUNCE_DELAY = 250;\n\nvar UniswapReact = function (_a) {\n  var _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n  var uniswapDappSharedLogicContext = _a.uniswapDappSharedLogicContext;\n\n  var _l = react_1.default.useState(true),\n      loading = _l[0],\n      setLoading = _l[1];\n\n  var _m = react_1.default.useState(),\n      inputToken = _m[0],\n      setInputToken = _m[1];\n\n  var _o = react_1.default.useState(),\n      inputBalance = _o[0],\n      setInputBalance = _o[1];\n\n  var _p = react_1.default.useState(''),\n      inputValue = _p[0],\n      setInputValue = _p[1];\n\n  var _q = react_1.default.useState(),\n      inputFiatPrice = _q[0],\n      setInputFiatPrice = _q[1];\n\n  var _r = react_1.default.useState(),\n      outputToken = _r[0],\n      setOutputToken = _r[1];\n\n  var _s = react_1.default.useState(),\n      outputBalance = _s[0],\n      setOutputBalance = _s[1];\n\n  var _t = react_1.default.useState(''),\n      outputValue = _t[0],\n      setOutputValue = _t[1];\n\n  var _u = react_1.default.useState(),\n      outputFiatPrice = _u[0],\n      setOutputFiatPrice = _u[1];\n\n  var _v = react_1.default.useState(false),\n      supportedNetwork = _v[0],\n      setSupportedNetwork = _v[1];\n\n  var _w = react_1.default.useState(),\n      chainId = _w[0],\n      setChainId = _w[1];\n\n  var _x = react_1.default.useState(),\n      selectorOpenFrom = _x[0],\n      setSelectorOpenFrom = _x[1];\n\n  var _y = react_1.default.useState(),\n      tradeContext = _y[0],\n      setTradeContext = _y[1];\n\n  var _z = react_1.default.useState(),\n      newPriceTradeContext = _z[0],\n      setNewPriceTradeContext = _z[1];\n\n  var _0 = react_1.default.useState(),\n      miningTransaction = _0[0],\n      setMiningTransaction = _0[1];\n\n  var _1 = react_1.default.useState(),\n      miningTransactionStatus = _1[0],\n      setMiningTransactionStatus = _1[1];\n\n  var _2 = react_1.default.useState(false),\n      noLiquidityFound = _2[0],\n      setNoLiquidityFound = _2[1];\n\n  var _3 = react_1.default.useState(),\n      debounceTimeout = _3[0],\n      setDebounceTimeout = _3[1];\n\n  var utils = uniswap_dapp_integration_shared_1.Utils;\n  react_1.useEffect(function () {\n    (function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var sharedLogic, supportedNetworkTokens;\n\n        var _a, _b, _c;\n\n        return __generator(this, function (_d) {\n          switch (_d.label) {\n            case 0:\n              sharedLogic = new uniswap_dapp_integration_shared_1.UniswapDappSharedLogic(uniswapDappSharedLogicContext);\n              return [4\n              /*yield*/\n              , sharedLogic.init()];\n\n            case 1:\n              _d.sent();\n\n              supportedNetworkTokens = uniswapDappSharedLogicContext.supportedNetworkTokens.find(function (t) {\n                return t.chainId === sharedLogic.chainId;\n              });\n\n              if (supportedNetworkTokens === null || supportedNetworkTokens === void 0 ? void 0 : supportedNetworkTokens.defaultInputValue) {\n                setInputValue(supportedNetworkTokens.defaultInputValue);\n              }\n\n              setTradeContext(sharedLogic.tradeContext);\n              subscriptions.push(sharedLogic.tradeContext$.subscribe(function (context) {\n                setTradeContext(context);\n\n                if (context) {\n                  if (context.quoteDirection === uniswap_dapp_integration_shared_1.TradeDirection.input) {\n                    setOutputValue(context.expectedConvertQuote);\n                  } else {\n                    setInputValue(context.expectedConvertQuote);\n                  }\n                }\n              }));\n              subscriptions.push(sharedLogic.newPriceTradeContext$.subscribe(function (context) {\n                setNewPriceTradeContext(context);\n              }));\n              subscriptions.push(sharedLogic.tradeCompleted$.subscribe(function (completed) {\n                if (completed) {\n                  setNoLiquidityFound(false);\n                  setInputValue('');\n                  setOutputValue('');\n                }\n              }));\n\n              if (tradeContext === null || tradeContext === void 0 ? void 0 : tradeContext.expectedConvertQuote) {\n                setOutputValue(tradeContext.expectedConvertQuote);\n              }\n\n              uniswapDappSharedLogic = sharedLogic;\n              setSupportedNetwork(uniswapDappSharedLogic.supportedNetwork);\n              subscriptions.push(uniswapDappSharedLogic.supportedNetwork$.subscribe(function (supported) {\n                setSupportedNetwork(supported);\n              }));\n              setChainId(uniswapDappSharedLogic.chainId);\n              subscriptions.push(uniswapDappSharedLogic.chainId$.subscribe(function (chainId) {\n                setChainId(chainId);\n              }));\n              setInputToken(uniswapDappSharedLogic.inputToken);\n              setInputBalance(utils.toPrecision((_a = uniswapDappSharedLogic.inputToken) === null || _a === void 0 ? void 0 : _a.balance));\n              setInputFiatPrice((_b = uniswapDappSharedLogic.inputToken) === null || _b === void 0 ? void 0 : _b.fiatPrice);\n              subscriptions.push(uniswapDappSharedLogic.inputToken$.subscribe(function (token) {\n                setInputToken(token);\n                setInputBalance(utils.toPrecision(token.balance));\n                setInputFiatPrice(token.fiatPrice);\n              }));\n              setOutputToken(uniswapDappSharedLogic.outputToken);\n\n              if (uniswapDappSharedLogic.outputToken) {\n                setOutputBalance(utils.toPrecision(uniswapDappSharedLogic.outputToken.balance));\n                setOutputFiatPrice(uniswapDappSharedLogic.outputToken.fiatPrice);\n              }\n\n              subscriptions.push(uniswapDappSharedLogic.outputToken$.subscribe(function (token) {\n                setOutputToken(token);\n                setOutputBalance(utils.toPrecision(token.balance));\n                setOutputFiatPrice(token.fiatPrice);\n              }));\n              setSelectorOpenFrom(uniswapDappSharedLogic.selectorOpenFrom);\n              subscriptions.push(uniswapDappSharedLogic.selectorOpenFrom$.subscribe(function (openFrom) {\n                setSelectorOpenFrom(openFrom);\n              }));\n              setMiningTransaction(uniswapDappSharedLogic.miningTransaction);\n              setMiningTransactionStatus((_c = uniswapDappSharedLogic.miningTransaction) === null || _c === void 0 ? void 0 : _c.status);\n              subscriptions.push(uniswapDappSharedLogic.miningTransaction$.subscribe(function (_miningTransaction) {\n                setMiningTransaction(_miningTransaction);\n                setMiningTransactionStatus(_miningTransaction === null || _miningTransaction === void 0 ? void 0 : _miningTransaction.status);\n              }));\n              setLoading(false);\n              subscriptions.push(uniswapDappSharedLogic.loading$.subscribe(function (loading) {\n                setLoading(loading);\n              }));\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    })();\n\n    return function () {\n      for (var i = 0; i < subscriptions.length; i++) {\n        subscriptions[i].unsubscribe();\n      }\n    };\n  }, []);\n\n  var changeInputTradePrice = function (amount) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (isValidDecimalLength(amount, inputToken)) {\n          setInputValue(amount);\n\n          if (!amount || new bignumber_js_1.BigNumber(amount).isEqualTo(0)) {\n            setOutputValue('');\n\n            if (debounceTimeout) {\n              clearTimeout(debounceTimeout);\n            }\n\n            return [2\n            /*return*/\n            ];\n          }\n\n          if (debounceTimeout) {\n            clearTimeout(debounceTimeout);\n          }\n\n          setDebounceTimeout(setTimeout(function () {\n            return _changeInputTradePrice(amount);\n          }, DEBOUNCE_DELAY));\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  var _changeInputTradePrice = function (amount) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var success;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , changeTradePrice(amount, uniswap_dapp_integration_shared_1.TradeDirection.input)];\n\n          case 1:\n            success = _a.sent();\n\n            if (success) {\n              setOutputValue(uniswapDappSharedLogic.tradeContext.expectedConvertQuote);\n            } else {\n              setOutputValue('');\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  var changeOutputTradePrice = function (amount) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (isValidDecimalLength(amount, outputToken)) {\n          setOutputValue(amount);\n\n          if (!amount || new bignumber_js_1.BigNumber(amount).isEqualTo(0)) {\n            setInputValue('');\n\n            if (debounceTimeout) {\n              clearTimeout(debounceTimeout);\n            }\n\n            return [2\n            /*return*/\n            ];\n          }\n\n          if (debounceTimeout) {\n            clearTimeout(debounceTimeout);\n          }\n\n          setDebounceTimeout(setTimeout(function () {\n            return _changeOutputTradePrice(amount);\n          }, DEBOUNCE_DELAY));\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  var _changeOutputTradePrice = function (amount) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var success;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , changeTradePrice(amount, uniswap_dapp_integration_shared_1.TradeDirection.output)];\n\n          case 1:\n            success = _a.sent();\n\n            if (success) {\n              setInputValue(uniswapDappSharedLogic.tradeContext.expectedConvertQuote);\n            } else {\n              setInputValue('');\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  var isValidDecimalLength = function (value, token) {\n    var decimals = value.split('.');\n\n    if (!decimals[1]) {\n      return true;\n    }\n\n    if (value.length > token.decimals) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\r\n   * Change trade price\r\n   * @param amount The amount\r\n   * @param tradeDirection The trade direction\r\n   */\n\n\n  var changeTradePrice = function (amount, tradeDirection) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , uniswapDappSharedLogic.changeTradePrice(amount, tradeDirection)];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_1 = _a.sent();\n\n            if ((error_1 === null || error_1 === void 0 ? void 0 : error_1.code) === uniswap_dapp_integration_shared_1.ErrorCodes.noRoutesFound) {\n              handleNoLiquidityFound(true, tradeDirection);\n              return [2\n              /*return*/\n              , false];\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            handleNoLiquidityFound(false, tradeDirection);\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n\n  var switchSwap = function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var swapState;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (noLiquidityFound) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , uniswapDappSharedLogic.swapSwitch()];\n\n          case 1:\n            swapState = _a.sent();\n            setInputValue(swapState.inputValue);\n            setOutputValue(swapState.outputValue);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  var handleNoLiquidityFound = function (noLiquidityFound, tradeDirection) {\n    setNoLiquidityFound(noLiquidityFound);\n\n    if (noLiquidityFound && tradeDirection) {\n      if (tradeDirection === uniswap_dapp_integration_shared_1.TradeDirection.input) {\n        setOutputValue('');\n      } else {\n        setInputValue('');\n      }\n    }\n  };\n\n  return react_1.default.createElement(\"div\", {\n    id: \"uniswap__716283642843643826\"\n  }, loading && react_1.default.createElement(loading_1.default, null), !loading && uniswapDappSharedLogic && react_1.default.createElement(\"div\", null, react_1.default.createElement(\"div\", {\n    className: \"uni-ic uni-ic__theme-background\"\n  }, supportedNetwork && inputToken && react_1.default.createElement(\"div\", null, react_1.default.createElement(header_1.default, {\n    uniswapDappSharedLogic: uniswapDappSharedLogic,\n    disableMultihopsCompleted: function (noLiquidityFound) {\n      handleNoLiquidityFound(noLiquidityFound, tradeContext === null || tradeContext === void 0 ? void 0 : tradeContext.quoteDirection);\n    }\n  }), react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-container\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-content\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-input-container\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-input-content uni-ic__theme-panel\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-input-content-main\"\n  }, react_1.default.createElement(\"button\", {\n    className: \"uni-ic__swap-input-content-main-from-currency-container uni-ic__theme-panel\",\n    onClick: function () {\n      return uniswapDappSharedLogic.openTokenSelectorFrom();\n    }\n  }, react_1.default.createElement(\"span\", {\n    className: \"uni-ic__swap-input-content-main-from-currency\"\n  }, react_1.default.createElement(tokenIcon_1.default, {\n    classes: \"uni-ic__swap-input-content-main-from-currency-icon\",\n    tokenImageContext: inputToken.tokenImageContext\n  }), react_1.default.createElement(\"span\", {\n    className: \"uni-ic__swap-input-content-main-from-currency-symbol\"\n  }, inputToken.symbol), react_1.default.createElement(\"svg\", {\n    width: \"12\",\n    height: \"7\",\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    className: \"uni-ic__swap-input-content-main-from-currency-choose\"\n  }, react_1.default.createElement(\"path\", {\n    d: \"M0.97168 1L6.20532 6L11.439 1\",\n    stroke: \"#AEAEAE\"\n  })))), react_1.default.createElement(\"input\", {\n    className: \"uni-ic__swap-input-content-main-from uni-ic__theme-panel\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    type: \"number\",\n    step: \"any\",\n    placeholder: \"0.0\",\n    maxLength: inputToken.decimals,\n    value: inputValue,\n    onChange: function (e) {\n      changeInputTradePrice(e.target.value);\n    },\n    disabled: uniswapDappSharedLogic.transactionInProcess(),\n    spellCheck: \"false\"\n  })), react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-content-balance-and-price-container\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-content-balance-and-price\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-content-balance-and-price__balance\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-content-balance-and-price__balance-text\"\n  }, react_1.default.createElement(\"span\", null, \"Balance: \", inputBalance, \" \", inputToken.symbol))), inputValue && inputFiatPrice && react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-content-balance-and-price__price\"\n  }, \"~$\", react_1.default.createElement(\"span\", {\n    className: \"uni-ic__swap-content-balance-and-price__price-text\"\n  }, utils.formatCurrency(inputFiatPrice.times(inputValue).toFixed()))))))), react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-divider uni-ic__theme-panel\",\n    onClick: function () {\n      return switchSwap();\n    }\n  }, react_1.default.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"#000000\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, react_1.default.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), react_1.default.createElement(\"polyline\", {\n    points: \"19 12 12 19 5 12\"\n  }))), react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-output-container\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-output-content uni-ic__theme-panel\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-output-content-main\"\n  }, react_1.default.createElement(\"button\", {\n    className: \"uni-ic__swap-output-content-main-select uni-ic__theme-panel\",\n    onClick: function () {\n      return uniswapDappSharedLogic.openTokenSelectorTo();\n    }\n  }, !outputToken && react_1.default.createElement(\"span\", {\n    className: \"uni-ic__swap-output-content-main-select-content\"\n  }, react_1.default.createElement(\"span\", {\n    className: \"uni-ic__swap-output-content-main-select-content-title\"\n  }, \"Select a token\"), react_1.default.createElement(\"svg\", {\n    width: \"12\",\n    height: \"7\",\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    className: \"uni-ic__swap-output-content-main-select-content-icon\"\n  }, react_1.default.createElement(\"path\", {\n    d: \"M0.97168 1L6.20532 6L11.439 1\",\n    stroke: \"#AEAEAE\"\n  }))), outputToken && react_1.default.createElement(\"span\", {\n    className: \"uni-ic__swap-input-content-main-from-currency\"\n  }, react_1.default.createElement(tokenIcon_1.default, {\n    classes: \"uni-ic__swap-input-content-main-from-currency-icon\",\n    tokenImageContext: outputToken.tokenImageContext\n  }), react_1.default.createElement(\"span\", {\n    className: \"uni-ic__swap-input-content-main-from-currency-symbol\"\n  }, outputToken.symbol), react_1.default.createElement(\"svg\", {\n    width: \"12\",\n    height: \"7\",\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    className: \"uni-ic__swap-input-content-main-from-currency-choose\"\n  }, react_1.default.createElement(\"path\", {\n    d: \"M0.97168 1L6.20532 6L11.439 1\",\n    stroke: \"#AEAEAE\"\n  })))), react_1.default.createElement(\"input\", {\n    className: \"uni-ic__swap-output-content-main-from uni-ic__theme-panel\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    type: \"number\",\n    step: \"any\",\n    placeholder: \"0.0\",\n    maxLength: outputToken === null || outputToken === void 0 ? void 0 : outputToken.decimals,\n    value: outputValue,\n    onChange: function (e) {\n      changeOutputTradePrice(e.target.value);\n    },\n    disabled: uniswapDappSharedLogic.transactionInProcess(),\n    spellCheck: \"false\"\n  })), outputToken && react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-content-balance-and-price-container\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-content-balance-and-price\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-content-balance-and-price__balance\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-content-balance-and-price__balance-text\"\n  }, react_1.default.createElement(\"span\", null, \"Balance: \", outputBalance, ' ', outputToken.symbol))), outputValue && outputFiatPrice && react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-content-balance-and-price__price\"\n  }, \"~$\", react_1.default.createElement(\"span\", {\n    className: \"uni-ic__swap-content-balance-and-price__price-text\"\n  }, utils.formatCurrency(outputFiatPrice.times(outputValue).toFixed())))))))), tradeContext && !noLiquidityFound && react_1.default.createElement(react_1.default.Fragment, null, react_1.default.createElement(swapQuoteInfo_1.default, {\n    uniswapDappSharedLogic: uniswapDappSharedLogic,\n    tradeContext: tradeContext\n  }), react_1.default.createElement(approval_1.default, {\n    uniswapDappSharedLogic: uniswapDappSharedLogic,\n    tradeContext: tradeContext,\n    miningTransaction: miningTransaction,\n    miningTransactionStatus: miningTransactionStatus\n  })), react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-button-container\"\n  }, react_1.default.createElement(\"button\", {\n    className: \"uni-ic__swap-button uni-ic__theme-background-button\",\n    onClick: function () {\n      return uniswapDappSharedLogic.showConfirmSwap();\n    },\n    disabled: utils.isZero(outputValue) || ((_b = uniswapDappSharedLogic.tradeContext) === null || _b === void 0 ? void 0 : _b.hasEnoughAllowance) === false || ((_d = (_c = uniswapDappSharedLogic.tradeContext) === null || _c === void 0 ? void 0 : _c.fromBalance) === null || _d === void 0 ? void 0 : _d.hasEnough) === false || noLiquidityFound\n  }, react_1.default.createElement(\"div\", {\n    className: \"uni-ic__swap-button-text\"\n  }, utils.isZero(outputValue) && !noLiquidityFound && react_1.default.createElement(\"span\", null, \"Enter an amount\"), !utils.isZero(outputValue) && !noLiquidityFound && ((_f = (_e = uniswapDappSharedLogic.tradeContext) === null || _e === void 0 ? void 0 : _e.fromBalance) === null || _f === void 0 ? void 0 : _f.hasEnough) && react_1.default.createElement(\"span\", null, \"Swap\"), !utils.isZero(outputValue) && !noLiquidityFound && !((_h = (_g = uniswapDappSharedLogic.tradeContext) === null || _g === void 0 ? void 0 : _g.fromBalance) === null || _h === void 0 ? void 0 : _h.hasEnough) && react_1.default.createElement(\"span\", null, \"Insufficient\", ' ', (_k = (_j = uniswapDappSharedLogic.tradeContext) === null || _j === void 0 ? void 0 : _j.fromToken) === null || _k === void 0 ? void 0 : _k.symbol, ' ', \"balance\"), noLiquidityFound && react_1.default.createElement(\"span\", null, \"Insufficient liquidity for this trade\")))))), !supportedNetwork && react_1.default.createElement(\"div\", {\n    className: \"uni-ic__error\"\n  }, react_1.default.createElement(\"p\", null, react_1.default.createElement(\"strong\", null, \"Chain id \", chainId, \" is a unsupported network.\")))), react_1.default.createElement(tokensModal_1.default, {\n    uniswapDappSharedLogic: uniswapDappSharedLogic,\n    switchSwapCompleted: function (swapCompleted) {\n      setInputValue(swapCompleted.inputValue);\n      setOutputValue(swapCompleted.outputValue);\n    },\n    changeTokenCompleted: function (noLiquidityFound) {\n      handleNoLiquidityFound(noLiquidityFound, tradeContext === null || tradeContext === void 0 ? void 0 : tradeContext.quoteDirection);\n    },\n    selectorOpenFrom: selectorOpenFrom,\n    inputToken: inputToken,\n    outputToken: outputToken\n  }), react_1.default.createElement(confirmSwap_1.default, {\n    uniswapDappSharedLogic: uniswapDappSharedLogic,\n    tradeContext: tradeContext,\n    newPriceTradeContext: newPriceTradeContext,\n    inputFiatPrice: inputFiatPrice,\n    outputFiatPrice: outputFiatPrice\n  }), react_1.default.createElement(transactionModal_1.default, {\n    uniswapDappSharedLogic: uniswapDappSharedLogic,\n    miningTransactionStatus: miningTransactionStatus\n  })));\n};\n\nexports.default = UniswapReact;","map":null,"metadata":{},"sourceType":"script"}