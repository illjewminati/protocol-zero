{"ast":null,"code":"import { Contract, ethers, Signer } from \"ethers\";\nexport async function getContract(address, abi, addressOrIndexOrSigner) {\n  let signer;\n\n  if (addressOrIndexOrSigner !== undefined) {\n    if (![\"string\", \"number\"].includes(typeof addressOrIndexOrSigner)) {\n      signer = addressOrIndexOrSigner;\n    } else if (signer instanceof Signer) {\n      signer = await getSigner(addressOrIndexOrSigner);\n    }\n\n    return new Contract(address, abi, signer);\n  } else {\n    const provider = getProvider();\n    return new Contract(address, abi, provider);\n  }\n}\nexport async function getSigner(addressOrIndex) {\n  return getProvider().getSigner(addressOrIndex);\n}\nexport function getProvider(web3Provider) {\n  // return new ethers.providers.Web3Provider(ganache.provider())\n  if (web3Provider) {\n    return new ethers.providers.Web3Provider(web3Provider);\n  } else {\n    return new ethers.providers.JsonRpcProvider();\n  }\n}","map":null,"metadata":{},"sourceType":"module"}