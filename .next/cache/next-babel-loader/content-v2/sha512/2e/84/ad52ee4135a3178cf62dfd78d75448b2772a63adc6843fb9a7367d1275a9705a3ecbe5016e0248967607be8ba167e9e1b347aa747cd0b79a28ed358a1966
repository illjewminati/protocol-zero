{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/common/icons/close_modal_button.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\n\nconst CloseButtonSVG = () => {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"11\",\n    height: \"11\",\n    viewBox: \"0 0 11 11\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M10.4501 10.449C10.7538 10.1453 10.7538 9.65282 10.4501 9.34909L6.60062 5.49996L10.45 1.65093C10.7537 1.3472 10.7537 0.854765 10.45 0.551038C10.1462 0.247311 9.65374 0.24731 9.34999 0.551038L5.50063 4.40006L1.65018 0.549939C1.34643 0.246212 0.853943 0.246212 0.55019 0.549939C0.246437 0.853667 0.246436 1.34611 0.55019 1.64983L4.40064 5.49996L0.550081 9.35019C0.246327 9.65392 0.246327 10.1464 0.550081 10.4501C0.853834 10.7538 1.34632 10.7538 1.65007 10.4501L5.50063 6.59985L9.3501 10.449C9.65385 10.7527 10.1463 10.7527 10.4501 10.449Z\",\n      fill: \"#C4C4C4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\nexport const CloseModalButton = props => {\n  const {\n    onClick\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"onClick\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n    className: \"close-button-container\"\n  }, restProps), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"close-button\",\n      onClick: onClick,\n      children: /*#__PURE__*/_jsxDEV(CloseButtonSVG, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/common/icons/close_modal_button.tsx"],"names":["React","CloseButtonSVG","CloseModalButton","props","onClick","restProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAsC,OAAtC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,sBACI;AAAK,IAAA,KAAK,EAAC,IAAX;AAAgB,IAAA,MAAM,EAAC,IAAvB;AAA4B,IAAA,OAAO,EAAC,WAApC;AAAgD,IAAA,IAAI,EAAC,MAArD;AAA4D,IAAA,KAAK,EAAC,4BAAlE;AAAA,2BACI;AACI,MAAA,QAAQ,EAAC,SADb;AAEI,MAAA,QAAQ,EAAC,SAFb;AAGI,MAAA,CAAC,EAAC,2hBAHN;AAII,MAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;AAiBA,OAAO,MAAMC,gBAAiC,GAAGC,KAAK,IAAI;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAA4BD,KAAlC;AAAA,QAAoBE,SAApB,4BAAkCF,KAAlC;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA4CE,SAA5C;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,OAAO,EAAED,OAAxC;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAVM","sourcesContent":["import React, { HTMLAttributes } from 'react';\n\nconst CloseButtonSVG = () => {\n    return (\n        <svg width=\"11\" height=\"11\" viewBox=\"0 0 11 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M10.4501 10.449C10.7538 10.1453 10.7538 9.65282 10.4501 9.34909L6.60062 5.49996L10.45 1.65093C10.7537 1.3472 10.7537 0.854765 10.45 0.551038C10.1462 0.247311 9.65374 0.24731 9.34999 0.551038L5.50063 4.40006L1.65018 0.549939C1.34643 0.246212 0.853943 0.246212 0.55019 0.549939C0.246437 0.853667 0.246436 1.34611 0.55019 1.64983L4.40064 5.49996L0.550081 9.35019C0.246327 9.65392 0.246327 10.1464 0.550081 10.4501C0.853834 10.7538 1.34632 10.7538 1.65007 10.4501L5.50063 6.59985L9.3501 10.449C9.65385 10.7527 10.1463 10.7527 10.4501 10.449Z\"\n                fill=\"#C4C4C4\"\n            />\n        </svg>\n    );\n};\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n    onClick?: any;\n}\n\nexport const CloseModalButton: React.FC<Props> = props => {\n    const { onClick, ...restProps } = props;\n\n    return (\n        <div className=\"close-button-container\" {...restProps}>\n            <span className=\"close-button\" onClick={onClick}>\n                <CloseButtonSVG />\n            </span>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}