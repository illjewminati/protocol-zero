{"ast":null,"code":"import _defineProperty from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _objectWithoutProperties from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nexport var PendingTime = function PendingTime(_ref) {\n  var estimatedTimeMs = _ref.estimatedTimeMs,\n      now = _ref.now,\n      startTime = _ref.startTime,\n      restProps = _objectWithoutProperties(_ref, [\"estimatedTimeMs\", \"now\", \"startTime\"]);\n\n  var estimatedSeconds = Math.round(estimatedTimeMs / 1000);\n  var finishTime = new Date(startTime.valueOf() + estimatedTimeMs);\n  var totalPendingSeconds = now < finishTime ? Math.round((finishTime.valueOf() - now.valueOf()) / 1000) : 0;\n  var pendingMinutes = Math.floor(totalPendingSeconds / 60);\n  var pendingSeconds = totalPendingSeconds % 60;\n  var pendingMinutesStr = pendingMinutes < 10 ? \"0\".concat(pendingMinutes) : pendingMinutes.toString();\n  var pendingSecondsStr = pendingSeconds < 10 ? \"0\".concat(pendingSeconds) : pendingSeconds.toString();\n  return /*#__PURE__*/_jsxs(\"span\", _objectSpread(_objectSpread({\n    className: \"pending-time-wrapper\"\n  }, restProps), {}, {\n    children: [pendingMinutesStr, \":\", pendingSecondsStr, \" (Est. \", estimatedSeconds, \" seconds)\"]\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}