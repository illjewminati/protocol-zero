{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniswapDappSharedLogic = void 0;\n\nvar bignumber_js_1 = require(\"bignumber.js\");\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar simple_uniswap_sdk_1 = require(\"simple-uniswap-sdk\");\n\nvar chain_1 = require(\"./chain\");\n\nvar coin_gecko_1 = require(\"./coin-gecko\");\n\nvar ethereum_provider_1 = require(\"./ethereum-provider\");\n\nvar models_1 = require(\"./models\");\n\nvar theming_1 = require(\"./theming\");\n\nvar token_1 = require(\"./token\");\n\nvar utils_1 = require(\"./utils\");\n\nvar UniswapDappSharedLogic =\n/** @class */\nfunction () {\n  function UniswapDappSharedLogic(_context) {\n    this._context = _context;\n    this.inputToken$ = new rxjs_1.Subject();\n    this.outputToken$ = new rxjs_1.Subject();\n    this.tradeContext$ = new rxjs_1.Subject();\n    this.newPriceTradeContext$ = new rxjs_1.Subject();\n    this.loading$ = new rxjs_1.BehaviorSubject(false);\n    this.supportedTokenBalances = [];\n    this.uniswapPairSettings = new simple_uniswap_sdk_1.UniswapPairSettings();\n    this.uniswapPairSettings$ = new rxjs_1.Subject();\n    this.selectorOpenFrom$ = new rxjs_1.Subject();\n    this.chainId$ = new rxjs_1.Subject();\n    this.supportedNetwork = false;\n    this.supportedNetwork$ = new rxjs_1.BehaviorSubject(false);\n    this.miningTransaction$ = new rxjs_1.BehaviorSubject(undefined);\n    this.tradeCompleted$ = new rxjs_1.BehaviorSubject(false);\n    this._confirmSwapOpened = false;\n    this._inputAmount = new bignumber_js_1.BigNumber('0');\n    this._quoteSubscription = simple_uniswap_sdk_1.UniswapSubscription.EMPTY; // services\n\n    this._ethereumProvider = new ethereum_provider_1.EthereumProvider(this._context.ethereumAddress, this._context.ethereumProvider);\n    this._coinGecko = new coin_gecko_1.CoinGecko();\n    this._theming = new theming_1.Theming(this._context.theming);\n    this._tokenService = new token_1.TokenService(this._ethereumProvider, this._context.supportedNetworkTokens);\n    this._chainService = new chain_1.ChainService(this._ethereumProvider);\n    this._blockStream = rxjs_1.Subscription.EMPTY;\n\n    if (this._context.settings) {\n      this.uniswapPairSettings = this._context.settings;\n    }\n\n    this.uniswapPairSettings$.next(this.uniswapPairSettings);\n  }\n  /**\r\n   * Init the shared logic\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.init = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var eth, supportedNetworkTokens, inputToken, _a, _c;\n\n      var _this = this;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            this.loading$.next(true);\n            this.supportedNetwork = false;\n            this.supportedNetwork$.next(this.supportedNetwork);\n\n            this._quoteSubscription.unsubscribe();\n\n            this._blockStream.unsubscribe();\n\n            return [4\n            /*yield*/\n            , this.setupEthereumContext()];\n\n          case 1:\n            _d.sent();\n\n            if (!this.supportedNetwork) {\n              this.loading$.next(false);\n              return [2\n              /*return*/\n              ];\n            }\n\n            eth = simple_uniswap_sdk_1.ETH.info(this.chainId);\n            supportedNetworkTokens = this._context.supportedNetworkTokens.find(function (t) {\n              return t.chainId === _this.chainId;\n            });\n\n            if (supportedNetworkTokens.defaultInputValue && this._inputAmount.isZero()) {\n              this._inputAmount = new bignumber_js_1.BigNumber(supportedNetworkTokens.defaultInputValue);\n            }\n\n            if (!supportedNetworkTokens.supportedTokens.find(function (c) {\n              return c.contractAddress.toLowerCase() === eth.contractAddress.toLowerCase();\n            })) {\n              supportedNetworkTokens.supportedTokens.push({\n                contractAddress: eth.contractAddress\n              });\n            }\n\n            inputToken = supportedNetworkTokens.defaultInputToken || eth.contractAddress;\n            _a = this;\n            return [4\n            /*yield*/\n            , this._tokenService.getTokenInformation(inputToken, this._context.ethereumProvider)];\n\n          case 2:\n            _a.inputToken = _d.sent();\n            this.inputToken$.next(this.inputToken);\n            return [4\n            /*yield*/\n            , this.getBalances()];\n\n          case 3:\n            _d.sent();\n\n            this._blockStream = this.subscribeToBlockStream();\n\n            this._theming.apply();\n\n            if (!supportedNetworkTokens.defaultOutputToken) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.buildFactory(this.inputToken.contractAddress, supportedNetworkTokens.defaultOutputToken)];\n\n          case 4:\n            _d.sent();\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 5:\n            _c = this;\n            return [4\n            /*yield*/\n            , this._tokenService.getTokenInformation(inputToken, this._context.ethereumProvider)];\n\n          case 6:\n            _c.inputToken = _d.sent();\n            this.inputToken$.next(this.inputToken);\n            _d.label = 7;\n\n          case 7:\n            if (this._inputAmount && this.inputToken && this.outputToken) {\n              this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress);\n            } // resync once got context so ordering of tokens\n            // can sync\n\n\n            this.getBalances();\n            this.loading$.next(false);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Destroy logic\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.destroy = function () {\n    var _a;\n\n    this._quoteSubscription.unsubscribe();\n\n    this._blockStream.unsubscribe();\n\n    this._chainService.unwatch();\n\n    (_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.destroy();\n  };\n  /**\r\n   * Change ethereum address for your dApp if your provider does not\r\n   * emit the event `accountsChanged`\r\n   * @param ethereumAddress The ethereum address\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeEthereumAddress = function (ethereumAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this._quoteSubscription.unsubscribe();\n\n        this._ethereumProvider.updateEthereumAddress(ethereumAddress);\n\n        this.init();\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\r\n   * Change the chain for your dApp if your provider does not\r\n   * emit the event `chainChanged`. Your ethereum provider you passed\r\n   * to the lib if changed will work without passing a `newEthereumProvider`\r\n   * if its a brand new instance you need to pass the lib the new ethereum provider\r\n   * @param newEthereumProvider The new ethereum provider\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeChain = function (newEthereumProvider) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (newEthereumProvider) {\n          this._context.ethereumProvider = newEthereumProvider;\n        }\n\n        this._ethereumProvider = new ethereum_provider_1.EthereumProvider(this._context.ethereumAddress, this._context.ethereumProvider);\n        this._chainService = new chain_1.ChainService(this._ethereumProvider);\n        this._tokenService = new token_1.TokenService(this._ethereumProvider, this._context.supportedNetworkTokens);\n\n        this._quoteSubscription.unsubscribe();\n\n        this.init();\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\r\n   * Setup ethereum context\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.setupEthereumContext = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      var _this = this;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this;\n            return [4\n            /*yield*/\n            , this._ethereumProvider.provider.getNetwork()];\n\n          case 1:\n            _a.chainId = _c.sent().chainId;\n            this.chainId$.next(this.chainId);\n            this.supportedNetwork = this._ethereumProvider.isSupportedChain(this.chainId, this._context.supportedNetworkTokens);\n            this.supportedNetwork$.next(this.supportedNetwork);\n\n            if (this.supportedNetwork) {\n              this._tokensFactoryPublic = new simple_uniswap_sdk_1.TokensFactoryPublic({\n                chainId: this.chainId\n              });\n            } // handle chain and account changes automatically\n            // if they have event handlers on\n\n\n            if (this._context.ethereumProvider.on) {\n              this._context.ethereumProvider.on('accountsChanged', function (accounts) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4\n                        /*yield*/\n                        , this.changeEthereumAddress(accounts[0])];\n\n                      case 1:\n                        _a.sent();\n\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                });\n              });\n\n              this._context.ethereumProvider.on('chainChanged', function () {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4\n                        /*yield*/\n                        , this.changeChain()];\n\n                      case 1:\n                        _a.sent();\n\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                });\n              });\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Send the approve allowance\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.approveAllowance = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this._theming.hideSettings();\n\n            this.miningTransaction = {\n              status: models_1.TransactionStatus.waitingForConfirmation,\n              miningAction: models_1.MiningAction.approval\n            };\n            this.miningTransaction$.next(this.miningTransaction);\n            return [4\n            /*yield*/\n            , this.handleTransaction(this.tradeContext.approvalTransaction, this.miningTransaction)];\n\n          case 1:\n            _a.sent();\n\n            if (this.miningTransaction.status === models_1.TransactionStatus.completed) {\n              this.miningTransaction = undefined;\n              this.miningTransaction$.next(this.miningTransaction);\n              this.tradeContext.approvalTransaction = undefined;\n              this.tradeContext.hasEnoughAllowance = true;\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Send the swap transaction\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.swapTransaction = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.miningTransaction = {\n              status: models_1.TransactionStatus.waitingForConfirmation,\n              miningAction: models_1.MiningAction.swap\n            };\n            this.miningTransaction$.next(this.miningTransaction);\n            this.showTransaction();\n            return [4\n            /*yield*/\n            , this.handleTransaction(this.tradeContext.transaction, this.miningTransaction)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Toggle showing and hiding the settings\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.toggleSettings = function () {\n    if (!this.transactionInProcess()) {\n      this._theming.toggleSettings();\n    }\n  };\n  /**\r\n   * Open token selector from\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.openTokenSelectorFrom = function () {\n    this._theming.showTokenSelector();\n\n    this.selectorOpenFrom = models_1.SelectTokenActionFrom.input;\n    this.selectorOpenFrom$.next(this.selectorOpenFrom);\n  };\n  /**\r\n   * Open token selector to\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.openTokenSelectorTo = function () {\n    this._theming.showTokenSelector();\n\n    this.selectorOpenFrom = models_1.SelectTokenActionFrom.output;\n    this.selectorOpenFrom$.next(this.selectorOpenFrom);\n  };\n  /**\r\n   * Hide the token selector\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.hideTokenSelector = function () {\n    this.selectorOpenFrom = undefined;\n    this.currentTokenSearch = undefined;\n\n    this._theming.hideTokenSelector();\n  };\n  /**\r\n   * Show the confirm swap modal\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.showConfirmSwap = function () {\n    this._theming.showConfirmSwap();\n\n    this._confirmSwapOpened = true;\n  };\n  /**\r\n   * Hide the confirm swap modal\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.hideConfirmSwap = function () {\n    this._theming.hideConfirmSwap();\n\n    this._confirmSwapOpened = false;\n    this.acceptPriceChange();\n  };\n  /**\r\n   * Show transaction modal\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.showTransaction = function () {\n    this._theming.hideConfirmSwap();\n\n    this._theming.showTransaction();\n  };\n  /**\r\n   * Hide the transaction modal\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.hideTransaction = function () {\n    var _a;\n\n    this._theming.hideTransaction();\n\n    this.miningTransaction = undefined;\n    this.miningTransaction$.next(this.miningTransaction);\n    (_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.destroy();\n    this.tradeContext = undefined;\n    this.tradeContext$.next(undefined);\n    this._inputAmount = new bignumber_js_1.BigNumber(0); // let the client know the swap all done to clear down the fields\n\n    this.tradeCompleted$.next(true);\n    this.tradeCompleted$.next(false);\n    this.hideConfirmSwap();\n  };\n  /**\r\n   * Change token selected\r\n   * @param contractAddress The contract address\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeToken = function (contractAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this.selectorOpenFrom;\n\n            switch (_a) {\n              case models_1.SelectTokenActionFrom.input:\n                return [3\n                /*break*/\n                , 1];\n\n              case models_1.SelectTokenActionFrom.output:\n                return [3\n                /*break*/\n                , 3];\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 1:\n            return [4\n            /*yield*/\n            , this.changeInputToken(contractAddress)];\n\n          case 2:\n            _c.sent();\n\n            return [2\n            /*return*/\n            ];\n\n          case 3:\n            return [4\n            /*yield*/\n            , this.changeOutputToken(contractAddress)];\n\n          case 4:\n            _c.sent();\n\n            _c.label = 5;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Change trade price\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeTradePrice = function (amount, directon) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (directon === simple_uniswap_sdk_1.TradeDirection.input) {\n              this._inputAmount = new bignumber_js_1.BigNumber(amount);\n            }\n\n            if (!!this.factory) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [4\n            /*yield*/\n            , this.trade(new bignumber_js_1.BigNumber(amount), directon)];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Set max input\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.setMaxInput = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var maxBalance;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            maxBalance = this.inputToken.balance.toFixed();\n            return [4\n            /*yield*/\n            , this.changeTradePrice(maxBalance, simple_uniswap_sdk_1.TradeDirection.input)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , maxBalance];\n        }\n      });\n    });\n  };\n  /**\r\n   * Swap switch\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.swapSwitch = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var clonedOutput, clonedInput, amount, amount;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            clonedOutput = utils_1.Utils.deepClone(this.outputToken);\n            clonedInput = utils_1.Utils.deepClone(this.inputToken);\n            return [4\n            /*yield*/\n            , this.buildFactory(clonedOutput.contractAddress, clonedInput.contractAddress, false)];\n\n          case 1:\n            _a.sent();\n\n            if (!this.tradeContext) return [3\n            /*break*/\n            , 6];\n            if (!(this.tradeContext.quoteDirection === simple_uniswap_sdk_1.TradeDirection.output)) return [3\n            /*break*/\n            , 3];\n            amount = utils_1.Utils.deepClone(this.tradeContext.baseConvertRequest);\n            return [4\n            /*yield*/\n            , this.trade(new bignumber_js_1.BigNumber(amount), simple_uniswap_sdk_1.TradeDirection.input)];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , {\n              outputValue: this.tradeContext.expectedConvertQuote,\n              inputValue: amount\n            }];\n\n          case 3:\n            amount = utils_1.Utils.deepClone(this.tradeContext.baseConvertRequest);\n            return [4\n            /*yield*/\n            , this.trade(new bignumber_js_1.BigNumber(amount), simple_uniswap_sdk_1.TradeDirection.output)];\n\n          case 4:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , {\n              outputValue: amount,\n              inputValue: this.tradeContext.expectedConvertQuote\n            }];\n\n          case 5:\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            return [2\n            /*return*/\n            , {\n              outputValue: '',\n              inputValue: ''\n            }];\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Accept the price change\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.acceptPriceChange = function () {\n    if (this.newPriceTradeContext) {\n      this.tradeContext = this.newPriceTradeContext;\n      this.tradeContext$.next(this.tradeContext);\n    }\n\n    this.newPriceTradeContext = undefined;\n    this.newPriceTradeContext$.next(undefined);\n  };\n  /**\r\n   * work out what 1 is equal to\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.workOutOneEqualTo = function () {\n    return utils_1.Utils.toPrecision(new bignumber_js_1.BigNumber(+this.tradeContext.expectedConvertQuote / +this.tradeContext.baseConvertRequest));\n  };\n  /**\r\n   * Set multihops\r\n   * @param disableMultihops The status of disable multihops\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.setDisableMultihops = function (disableMultihops) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (disableMultihops === this.uniswapPairSettings.disableMultihops) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            this.uniswapPairSettings.disableMultihops = disableMultihops;\n            this.uniswapPairSettings$.next(this.uniswapPairSettings);\n            return [4\n            /*yield*/\n            , this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress, false)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.executeTradeAndHonourLastTradeDirection()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Set transaction deadline\r\n   * @param deadlineMinutes The deadline minutes the tx has to be mined before it fails\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.setTransactionDeadline = function (deadlineMinutes) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (Number(deadlineMinutes) === this.uniswapPairSettings.deadlineMinutes) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (deadlineMinutes === '') {\n              this.uniswapPairSettings.deadlineMinutes = 20;\n            } else {\n              this.uniswapPairSettings.deadlineMinutes = Number(deadlineMinutes);\n            }\n\n            this.uniswapPairSettings$.next(this.uniswapPairSettings);\n            return [4\n            /*yield*/\n            , this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress, false)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.executeTradeAndHonourLastTradeDirection()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Set transaction slippage\r\n   * @param slippage The slippage the route can take\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.setSlippage = function (slippage) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (Number(slippage) / 100 === this.uniswapPairSettings.slippage) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (slippage === '') {\n              this.uniswapPairSettings.slippage = 0.005;\n            } else {\n              this.uniswapPairSettings.slippage = Number(slippage) / 100;\n            }\n\n            this.uniswapPairSettings$.next(this.uniswapPairSettings);\n            return [4\n            /*yield*/\n            , this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress, false)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.executeTradeAndHonourLastTradeDirection()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Search for tokens\r\n   * @param search The search term\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.searchToken = function (search) {\n    this.currentTokenSearch = search;\n    this.supportedTokenBalances = this._tokenService.searchToken(search, this.supportedTokenBalances);\n    return this.supportedTokenBalances;\n  };\n  /**\r\n   * See if the transaction is in process\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.transactionInProcess = function () {\n    var _a, _c;\n\n    return ((_a = this.miningTransaction) === null || _a === void 0 ? void 0 : _a.status) === models_1.TransactionStatus.waitingForConfirmation || ((_c = this.miningTransaction) === null || _c === void 0 ? void 0 : _c.status) === models_1.TransactionStatus.mining;\n  };\n  /**\r\n   * View the tx on etherscan\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.viewOnEtherscan = function () {\n    var _a;\n\n    if ((_a = this.miningTransaction) === null || _a === void 0 ? void 0 : _a.blockExplorerLink) {\n      window.open(this.miningTransaction.blockExplorerLink, '_blank');\n    }\n  };\n  /**\r\n   * Execute the trade but honour the last trade direction\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.executeTradeAndHonourLastTradeDirection = function () {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!(((_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.quoteDirection) === simple_uniswap_sdk_1.TradeDirection.output)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.trade(new bignumber_js_1.BigNumber(utils_1.Utils.deepClone(this.tradeContext.baseConvertRequest)), simple_uniswap_sdk_1.TradeDirection.output)];\n\n          case 1:\n            _c.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this.trade(this._inputAmount, simple_uniswap_sdk_1.TradeDirection.input)];\n\n          case 3:\n            _c.sent();\n\n            _c.label = 4;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Handle transaction\r\n   * @param transaction The transaction\r\n   * @param miningTransaction The mining transaction\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.handleTransaction = function (transaction, miningTransaction) {\n    return __awaiter(this, void 0, void 0, function () {\n      var txHash_1, blockStream_1, error_1;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._ethereumProvider.sendAsync(transaction)];\n\n          case 1:\n            txHash_1 = _a.sent();\n\n            this._quoteSubscription.unsubscribe();\n\n            miningTransaction.status = models_1.TransactionStatus.mining;\n            miningTransaction.txHash = txHash_1;\n            miningTransaction.blockExplorerLink = this._chainService.getBlockExplorerLinkForTransactionHash(this.chainId, txHash_1);\n            this.miningTransaction$.next(miningTransaction);\n            blockStream_1 = rxjs_1.Subscription.EMPTY;\n            return [4\n            /*yield*/\n            , new Promise(function (resolve, reject) {\n              blockStream_1 = _this._chainService.newBlock$.subscribe(function () {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var receipt, error_2;\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        _a.trys.push([0, 2,, 3]);\n\n                        return [4\n                        /*yield*/\n                        , this._ethereumProvider.provider.getTransactionReceipt(txHash_1)];\n\n                      case 1:\n                        receipt = _a.sent();\n\n                        if (receipt) {\n                          resolve();\n                          this.miningTransaction.status = models_1.TransactionStatus.completed;\n                          this.miningTransaction$.next(miningTransaction);\n                        }\n\n                        return [3\n                        /*break*/\n                        , 3];\n\n                      case 2:\n                        error_2 = _a.sent();\n                        blockStream_1.unsubscribe();\n                        reject(error_2);\n                        return [3\n                        /*break*/\n                        , 3];\n\n                      case 3:\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                });\n              });\n            })];\n\n          case 2:\n            _a.sent();\n\n            blockStream_1.unsubscribe();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _a.sent();\n            miningTransaction.status = models_1.TransactionStatus.rejected;\n            this.miningTransaction$.next(miningTransaction);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Change input token\r\n   * @param contractAddress The contract address\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeInputToken = function (contractAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.changeTokenHandler(contractAddress, this.outputToken.contractAddress)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Change output token\r\n   * @param contractAddress The contract address\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeOutputToken = function (contractAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.changeTokenHandler(this.inputToken.contractAddress, contractAddress)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Change token handler\r\n   * @param inputToken The input token\r\n   * @param outputToken The output token\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.changeTokenHandler = function (inputToken, outputToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.hideTokenSelector();\n            return [4\n            /*yield*/\n            , this.buildFactory(inputToken, outputToken, false)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.executeTradeAndHonourLastTradeDirection()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Build factory\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.buildFactory = function (inputToken, outputToken, executeTrade) {\n    var _a;\n\n    if (executeTrade === void 0) {\n      executeTrade = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var uniswapPair, _c, fiatPrices, _d, _e, _f, _g, _h, _j, _k, _l;\n\n      return __generator(this, function (_m) {\n        switch (_m.label) {\n          case 0:\n            (_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.destroy();\n            inputToken = simple_uniswap_sdk_1.getAddress(inputToken, true);\n            outputToken = simple_uniswap_sdk_1.getAddress(outputToken, true);\n            uniswapPair = this.createUniswapPairContext(inputToken, outputToken, this.uniswapPairSettings);\n            _c = this;\n            return [4\n            /*yield*/\n            , uniswapPair.createFactory()];\n\n          case 1:\n            _c.factory = _m.sent();\n            return [4\n            /*yield*/\n            , this._coinGecko.getCoinGeckoFiatPrices([this.factory.fromToken.contractAddress, this.factory.toToken.contractAddress], this.chainId)];\n\n          case 2:\n            fiatPrices = _m.sent();\n            _d = this;\n            _f = (_e = this._tokenService).buildExtendedToken;\n            _g = [this.factory.fromToken];\n            return [4\n            /*yield*/\n            , this.factory.getFromTokenBalance()];\n\n          case 3:\n            return [4\n            /*yield*/\n            , _f.apply(_e, _g.concat([_m.sent(), fiatPrices]))];\n\n          case 4:\n            _d.inputToken = _m.sent();\n            this.inputToken$.next(this.inputToken);\n            _h = this;\n            _k = (_j = this._tokenService).buildExtendedToken;\n            _l = [this.factory.toToken];\n            return [4\n            /*yield*/\n            , this.factory.getToTokenBalance()];\n\n          case 5:\n            return [4\n            /*yield*/\n            , _k.apply(_j, _l.concat([_m.sent(), fiatPrices]))];\n\n          case 6:\n            _h.outputToken = _m.sent();\n            this.outputToken$.next(this.outputToken);\n            if (!executeTrade) return [3\n            /*break*/\n            , 8];\n            return [4\n            /*yield*/\n            , this.trade(this._inputAmount, simple_uniswap_sdk_1.TradeDirection.input)];\n\n          case 7:\n            _m.sent();\n\n            _m.label = 8;\n\n          case 8:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Create uniswap pair context\r\n   * @param inputToken The input token\r\n   * @param outputToken The output token\r\n   * @param settings The settings\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.createUniswapPairContext = function (inputToken, outputToken, settings) {\n    if (this._context.ethereumProvider) {\n      return new simple_uniswap_sdk_1.UniswapPair({\n        fromTokenContractAddress: inputToken,\n        toTokenContractAddress: outputToken,\n        ethereumAddress: this._ethereumProvider.address,\n        ethereumProvider: this._context.ethereumProvider,\n        settings: settings\n      });\n    }\n\n    return new simple_uniswap_sdk_1.UniswapPair({\n      fromTokenContractAddress: inputToken,\n      toTokenContractAddress: outputToken,\n      ethereumAddress: this._ethereumProvider.address,\n      chainId: this.chainId,\n      ethereumProvider: this._ethereumProvider.provider,\n      settings: settings\n    });\n  };\n  /**\r\n   * Execute the trade quote\r\n   * @param amount The amount\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.trade = function (amount, direction) {\n    return __awaiter(this, void 0, void 0, function () {\n      var context;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!amount.isGreaterThan(0)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.factory.trade(amount.toFixed(), direction)];\n\n          case 1:\n            context = _a.sent();\n            this.tradeContext = this.formatTradeContext(context);\n            this.tradeContext$.next(this.tradeContext);\n            this._quoteSubscription = this.tradeContext.quoteChanged$.subscribe(function (quote) {\n              var _a, _c, _d;\n\n              if (((_a = _this.miningTransaction) === null || _a === void 0 ? void 0 : _a.miningAction) === models_1.MiningAction.swap && (((_c = _this.miningTransaction) === null || _c === void 0 ? void 0 : _c.status) === models_1.TransactionStatus.mining || ((_d = _this.miningTransaction) === null || _d === void 0 ? void 0 : _d.status) === models_1.TransactionStatus.completed)) {\n                _this._quoteSubscription.unsubscribe();\n\n                return;\n              }\n\n              var formattedQuote = _this.formatTradeContext(quote);\n\n              if (_this._confirmSwapOpened) {\n                _this.newPriceTradeContext = formattedQuote;\n\n                _this.newPriceTradeContext$.next(_this.newPriceTradeContext);\n              } else {\n                _this.tradeContext = formattedQuote;\n\n                _this.tradeContext$.next(_this.tradeContext);\n              }\n            });\n\n            if (this.tradeContext.quoteDirection === simple_uniswap_sdk_1.TradeDirection.output) {\n              this._inputAmount = new bignumber_js_1.BigNumber(utils_1.Utils.deepClone(this.tradeContext.expectedConvertQuote));\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Format trade context values\r\n   * @param context The context\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.formatTradeContext = function (context) {\n    context.liquidityProviderFee = utils_1.Utils.toPrecision(context.liquidityProviderFee);\n\n    if (context.minAmountConvertQuote) {\n      context.minAmountConvertQuote = utils_1.Utils.toPrecision(context.minAmountConvertQuote);\n    }\n\n    if (context.maximumSent) {\n      context.maximumSent = utils_1.Utils.toPrecision(context.maximumSent);\n    }\n\n    context.expectedConvertQuote = utils_1.Utils.toPrecision(context.expectedConvertQuote);\n    return context;\n  };\n  /**\r\n   * Subscribe to the block stream\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.subscribeToBlockStream = function () {\n    var _this = this;\n\n    return this._chainService.newBlock$.subscribe(function (block) {\n      _this.blockNumber = block;\n\n      _this.getBalances();\n    });\n  };\n  /**\r\n   * Get the balances of the supported contracts\r\n   */\n\n\n  UniswapDappSharedLogic.prototype.getBalances = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var tokenWithAllowanceInfo, fiatPrices_1, _a, inputToken, newInputBalance, newInputFiatPrice, outputToken, newOutputBalance, newOutputFiatPrice;\n\n      var _this = this;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!this.supportedNetwork) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this._tokensFactoryPublic.getAllowanceAndBalanceOfForContracts(this._ethereumProvider.address, this._context.supportedNetworkTokens.find(function (t) {\n              return t.chainId === _this.chainId;\n            }).supportedTokens.map(function (c) {\n              return simple_uniswap_sdk_1.getAddress(c.contractAddress, true);\n            }), true)];\n\n          case 1:\n            tokenWithAllowanceInfo = _c.sent();\n            return [4\n            /*yield*/\n            , this._coinGecko.getCoinGeckoFiatPrices(tokenWithAllowanceInfo.map(function (c) {\n              return c.token.contractAddress;\n            }), this.chainId)];\n\n          case 2:\n            fiatPrices_1 = _c.sent();\n            _a = this;\n            return [4\n            /*yield*/\n            , Promise.all(tokenWithAllowanceInfo.map(function (item) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var token, canShow;\n\n                var _a;\n\n                return __generator(this, function (_c) {\n                  switch (_c.label) {\n                    case 0:\n                      return [4\n                      /*yield*/\n                      , this._tokenService.buildExtendedToken(item.token, item.allowanceAndBalanceOf.balanceOf, fiatPrices_1)];\n\n                    case 1:\n                      token = _c.sent();\n                      canShow = true;\n\n                      if (this.currentTokenSearch) {\n                        canShow = this.supportedTokenBalances.find(function (c) {\n                          return c.contractAddress.toLowerCase() === item.token.contractAddress.toLowerCase();\n                        }).canShow;\n                      }\n\n                      _a = {\n                        chainId: token.chainId,\n                        contractAddress: token.contractAddress,\n                        decimals: token.decimals,\n                        symbol: token.symbol,\n                        name: token.name,\n                        fiatPrice: token.fiatPrice,\n                        balance: token.balance,\n                        canShow: canShow\n                      };\n                      return [4\n                      /*yield*/\n                      , this._tokenService.getTokenImage(token.contractAddress, token.chainId)];\n\n                    case 2:\n                      return [2\n                      /*return*/\n                      , (_a.tokenImageContext = _c.sent(), _a)];\n                  }\n                });\n              });\n            }))];\n\n          case 3:\n            _a.supportedTokenBalances = _c.sent().sort(function (a, b) {\n              if (a.name < b.name) {\n                return -1;\n              }\n\n              if (a.name > b.name) {\n                return 1;\n              }\n\n              return 0;\n            }).sort(function (a, b) {\n              if (a.balance.isLessThan(b.balance)) {\n                return 1;\n              }\n\n              if (a.balance.isGreaterThan(b.balance)) {\n                return -1;\n              }\n\n              return 0;\n            }).sort(function (a, _b) {\n              var _a;\n\n              if (a.contractAddress === _this.inputToken.contractAddress) {\n                return -1;\n              }\n\n              if (a.contractAddress === ((_a = _this.outputToken) === null || _a === void 0 ? void 0 : _a.contractAddress)) {\n                return -1;\n              }\n\n              return 0;\n            });\n            inputToken = this.supportedTokenBalances.find(function (c) {\n              return c.contractAddress === _this.inputToken.contractAddress;\n            });\n\n            if (inputToken) {\n              newInputBalance = inputToken.balance;\n              newInputFiatPrice = inputToken.fiatPrice;\n\n              if (!this.inputToken.balance.isEqualTo(newInputBalance) || newInputFiatPrice && this.inputToken.fiatPrice && !this.inputToken.fiatPrice.isEqualTo(newInputFiatPrice)) {\n                this.inputToken.balance = newInputBalance;\n                this.inputToken.fiatPrice = newInputFiatPrice;\n                this.inputToken$.next(this.inputToken);\n              }\n            }\n\n            if (this.outputToken) {\n              outputToken = this.supportedTokenBalances.find(function (c) {\n                return c.contractAddress === _this.outputToken.contractAddress;\n              });\n\n              if (outputToken) {\n                newOutputBalance = outputToken.balance;\n                newOutputFiatPrice = outputToken.fiatPrice;\n\n                if (!this.outputToken.balance.isEqualTo(newOutputBalance) || newOutputFiatPrice && this.outputToken.fiatPrice && !this.outputToken.fiatPrice.isEqualTo(newOutputFiatPrice)) {\n                  this.outputToken.balance = newOutputBalance;\n                  this.outputToken.fiatPrice = newOutputFiatPrice;\n                  this.outputToken$.next(this.outputToken);\n                }\n              }\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            this.supportedTokenBalances = [];\n            _c.label = 5;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return UniswapDappSharedLogic;\n}();\n\nexports.UniswapDappSharedLogic = UniswapDappSharedLogic;","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/uniswap_components/uniswap-dapp-integration-shared/dist/cjs/uniswap-dapp-shared-logic.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","Object","defineProperty","exports","UniswapDappSharedLogic","bignumber_js_1","require","rxjs_1","simple_uniswap_sdk_1","chain_1","coin_gecko_1","ethereum_provider_1","models_1","theming_1","token_1","utils_1","_context","inputToken$","Subject","outputToken$","tradeContext$","newPriceTradeContext$","loading$","BehaviorSubject","supportedTokenBalances","uniswapPairSettings","UniswapPairSettings","uniswapPairSettings$","selectorOpenFrom$","chainId$","supportedNetwork","supportedNetwork$","miningTransaction$","undefined","tradeCompleted$","_confirmSwapOpened","_inputAmount","BigNumber","_quoteSubscription","UniswapSubscription","EMPTY","_ethereumProvider","EthereumProvider","ethereumAddress","ethereumProvider","_coinGecko","CoinGecko","_theming","Theming","theming","_tokenService","TokenService","supportedNetworkTokens","_chainService","ChainService","_blockStream","Subscription","settings","prototype","init","eth","inputToken","_a","_c","_this","_d","unsubscribe","setupEthereumContext","ETH","info","chainId","find","defaultInputValue","isZero","supportedTokens","c","contractAddress","toLowerCase","defaultInputToken","getTokenInformation","getBalances","subscribeToBlockStream","defaultOutputToken","buildFactory","outputToken","destroy","unwatch","tradeContext","changeEthereumAddress","updateEthereumAddress","changeChain","newEthereumProvider","provider","getNetwork","isSupportedChain","_tokensFactoryPublic","TokensFactoryPublic","on","accounts","approveAllowance","hideSettings","miningTransaction","status","TransactionStatus","waitingForConfirmation","miningAction","MiningAction","approval","handleTransaction","approvalTransaction","completed","hasEnoughAllowance","swapTransaction","swap","showTransaction","transaction","toggleSettings","transactionInProcess","openTokenSelectorFrom","showTokenSelector","selectorOpenFrom","SelectTokenActionFrom","input","openTokenSelectorTo","output","hideTokenSelector","currentTokenSearch","showConfirmSwap","hideConfirmSwap","acceptPriceChange","hideTransaction","changeToken","changeInputToken","changeOutputToken","changeTradePrice","amount","directon","TradeDirection","factory","trade","setMaxInput","maxBalance","balance","toFixed","swapSwitch","clonedOutput","clonedInput","Utils","deepClone","quoteDirection","baseConvertRequest","outputValue","expectedConvertQuote","inputValue","newPriceTradeContext","workOutOneEqualTo","toPrecision","setDisableMultihops","disableMultihops","executeTradeAndHonourLastTradeDirection","setTransactionDeadline","deadlineMinutes","Number","setSlippage","slippage","searchToken","search","mining","viewOnEtherscan","blockExplorerLink","window","open","txHash_1","blockStream_1","error_1","sendAsync","txHash","getBlockExplorerLinkForTransactionHash","newBlock$","subscribe","receipt","error_2","getTransactionReceipt","changeTokenHandler","executeTrade","uniswapPair","fiatPrices","_e","_f","_g","_h","_j","_k","_l","_m","getAddress","createUniswapPairContext","createFactory","getCoinGeckoFiatPrices","fromToken","toToken","buildExtendedToken","getFromTokenBalance","concat","getToTokenBalance","UniswapPair","fromTokenContractAddress","toTokenContractAddress","address","direction","context","isGreaterThan","formatTradeContext","quoteChanged$","quote","formattedQuote","liquidityProviderFee","minAmountConvertQuote","maximumSent","block","blockNumber","tokenWithAllowanceInfo","fiatPrices_1","newInputBalance","newInputFiatPrice","newOutputBalance","newOutputFiatPrice","getAllowanceAndBalanceOfForContracts","map","token","all","item","canShow","allowanceAndBalanceOf","balanceOf","decimals","symbol","name","fiatPrice","getTokenImage","tokenImageContext","sort","a","b","isLessThan","_b","isEqualTo"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.UniswapDappSharedLogic = void 0;\r\nvar bignumber_js_1 = require(\"bignumber.js\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar simple_uniswap_sdk_1 = require(\"simple-uniswap-sdk\");\r\nvar chain_1 = require(\"./chain\");\r\nvar coin_gecko_1 = require(\"./coin-gecko\");\r\nvar ethereum_provider_1 = require(\"./ethereum-provider\");\r\nvar models_1 = require(\"./models\");\r\nvar theming_1 = require(\"./theming\");\r\nvar token_1 = require(\"./token\");\r\nvar utils_1 = require(\"./utils\");\r\nvar UniswapDappSharedLogic = /** @class */ (function () {\r\n    function UniswapDappSharedLogic(_context) {\r\n        this._context = _context;\r\n        this.inputToken$ = new rxjs_1.Subject();\r\n        this.outputToken$ = new rxjs_1.Subject();\r\n        this.tradeContext$ = new rxjs_1.Subject();\r\n        this.newPriceTradeContext$ = new rxjs_1.Subject();\r\n        this.loading$ = new rxjs_1.BehaviorSubject(false);\r\n        this.supportedTokenBalances = [];\r\n        this.uniswapPairSettings = new simple_uniswap_sdk_1.UniswapPairSettings();\r\n        this.uniswapPairSettings$ = new rxjs_1.Subject();\r\n        this.selectorOpenFrom$ = new rxjs_1.Subject();\r\n        this.chainId$ = new rxjs_1.Subject();\r\n        this.supportedNetwork = false;\r\n        this.supportedNetwork$ = new rxjs_1.BehaviorSubject(false);\r\n        this.miningTransaction$ = new rxjs_1.BehaviorSubject(undefined);\r\n        this.tradeCompleted$ = new rxjs_1.BehaviorSubject(false);\r\n        this._confirmSwapOpened = false;\r\n        this._inputAmount = new bignumber_js_1.BigNumber('0');\r\n        this._quoteSubscription = simple_uniswap_sdk_1.UniswapSubscription.EMPTY;\r\n        // services\r\n        this._ethereumProvider = new ethereum_provider_1.EthereumProvider(this._context.ethereumAddress, this._context.ethereumProvider);\r\n        this._coinGecko = new coin_gecko_1.CoinGecko();\r\n        this._theming = new theming_1.Theming(this._context.theming);\r\n        this._tokenService = new token_1.TokenService(this._ethereumProvider, this._context.supportedNetworkTokens);\r\n        this._chainService = new chain_1.ChainService(this._ethereumProvider);\r\n        this._blockStream = rxjs_1.Subscription.EMPTY;\r\n        if (this._context.settings) {\r\n            this.uniswapPairSettings = this._context.settings;\r\n        }\r\n        this.uniswapPairSettings$.next(this.uniswapPairSettings);\r\n    }\r\n    /**\r\n     * Init the shared logic\r\n     */\r\n    UniswapDappSharedLogic.prototype.init = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var eth, supportedNetworkTokens, inputToken, _a, _c;\r\n            var _this = this;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        this.loading$.next(true);\r\n                        this.supportedNetwork = false;\r\n                        this.supportedNetwork$.next(this.supportedNetwork);\r\n                        this._quoteSubscription.unsubscribe();\r\n                        this._blockStream.unsubscribe();\r\n                        return [4 /*yield*/, this.setupEthereumContext()];\r\n                    case 1:\r\n                        _d.sent();\r\n                        if (!this.supportedNetwork) {\r\n                            this.loading$.next(false);\r\n                            return [2 /*return*/];\r\n                        }\r\n                        eth = simple_uniswap_sdk_1.ETH.info(this.chainId);\r\n                        supportedNetworkTokens = this._context.supportedNetworkTokens.find(function (t) { return t.chainId === _this.chainId; });\r\n                        if (supportedNetworkTokens.defaultInputValue &&\r\n                            this._inputAmount.isZero()) {\r\n                            this._inputAmount = new bignumber_js_1.BigNumber(supportedNetworkTokens.defaultInputValue);\r\n                        }\r\n                        if (!supportedNetworkTokens.supportedTokens.find(function (c) {\r\n                            return c.contractAddress.toLowerCase() === eth.contractAddress.toLowerCase();\r\n                        })) {\r\n                            supportedNetworkTokens.supportedTokens.push({\r\n                                contractAddress: eth.contractAddress,\r\n                            });\r\n                        }\r\n                        inputToken = supportedNetworkTokens.defaultInputToken || eth.contractAddress;\r\n                        _a = this;\r\n                        return [4 /*yield*/, this._tokenService.getTokenInformation(inputToken, this._context.ethereumProvider)];\r\n                    case 2:\r\n                        _a.inputToken = _d.sent();\r\n                        this.inputToken$.next(this.inputToken);\r\n                        return [4 /*yield*/, this.getBalances()];\r\n                    case 3:\r\n                        _d.sent();\r\n                        this._blockStream = this.subscribeToBlockStream();\r\n                        this._theming.apply();\r\n                        if (!supportedNetworkTokens.defaultOutputToken) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.buildFactory(this.inputToken.contractAddress, supportedNetworkTokens.defaultOutputToken)];\r\n                    case 4:\r\n                        _d.sent();\r\n                        return [3 /*break*/, 7];\r\n                    case 5:\r\n                        _c = this;\r\n                        return [4 /*yield*/, this._tokenService.getTokenInformation(inputToken, this._context.ethereumProvider)];\r\n                    case 6:\r\n                        _c.inputToken = _d.sent();\r\n                        this.inputToken$.next(this.inputToken);\r\n                        _d.label = 7;\r\n                    case 7:\r\n                        if (this._inputAmount && this.inputToken && this.outputToken) {\r\n                            this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress);\r\n                        }\r\n                        // resync once got context so ordering of tokens\r\n                        // can sync\r\n                        this.getBalances();\r\n                        this.loading$.next(false);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Destroy logic\r\n     */\r\n    UniswapDappSharedLogic.prototype.destroy = function () {\r\n        var _a;\r\n        this._quoteSubscription.unsubscribe();\r\n        this._blockStream.unsubscribe();\r\n        this._chainService.unwatch();\r\n        (_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.destroy();\r\n    };\r\n    /**\r\n     * Change ethereum address for your dApp if your provider does not\r\n     * emit the event `accountsChanged`\r\n     * @param ethereumAddress The ethereum address\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeEthereumAddress = function (ethereumAddress) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                this._quoteSubscription.unsubscribe();\r\n                this._ethereumProvider.updateEthereumAddress(ethereumAddress);\r\n                this.init();\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Change the chain for your dApp if your provider does not\r\n     * emit the event `chainChanged`. Your ethereum provider you passed\r\n     * to the lib if changed will work without passing a `newEthereumProvider`\r\n     * if its a brand new instance you need to pass the lib the new ethereum provider\r\n     * @param newEthereumProvider The new ethereum provider\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeChain = function (newEthereumProvider) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (newEthereumProvider) {\r\n                    this._context.ethereumProvider = newEthereumProvider;\r\n                }\r\n                this._ethereumProvider = new ethereum_provider_1.EthereumProvider(this._context.ethereumAddress, this._context.ethereumProvider);\r\n                this._chainService = new chain_1.ChainService(this._ethereumProvider);\r\n                this._tokenService = new token_1.TokenService(this._ethereumProvider, this._context.supportedNetworkTokens);\r\n                this._quoteSubscription.unsubscribe();\r\n                this.init();\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Setup ethereum context\r\n     */\r\n    UniswapDappSharedLogic.prototype.setupEthereumContext = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4 /*yield*/, this._ethereumProvider.provider.getNetwork()];\r\n                    case 1:\r\n                        _a.chainId = (_c.sent()).chainId;\r\n                        this.chainId$.next(this.chainId);\r\n                        this.supportedNetwork = this._ethereumProvider.isSupportedChain(this.chainId, this._context.supportedNetworkTokens);\r\n                        this.supportedNetwork$.next(this.supportedNetwork);\r\n                        if (this.supportedNetwork) {\r\n                            this._tokensFactoryPublic = new simple_uniswap_sdk_1.TokensFactoryPublic({\r\n                                chainId: this.chainId,\r\n                            });\r\n                        }\r\n                        // handle chain and account changes automatically\r\n                        // if they have event handlers on\r\n                        if (this._context.ethereumProvider.on) {\r\n                            this._context.ethereumProvider.on('accountsChanged', function (accounts) { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, this.changeEthereumAddress(accounts[0])];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); });\r\n                            this._context.ethereumProvider.on('chainChanged', function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, this.changeChain()];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); });\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Send the approve allowance\r\n     */\r\n    UniswapDappSharedLogic.prototype.approveAllowance = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this._theming.hideSettings();\r\n                        this.miningTransaction = {\r\n                            status: models_1.TransactionStatus.waitingForConfirmation,\r\n                            miningAction: models_1.MiningAction.approval,\r\n                        };\r\n                        this.miningTransaction$.next(this.miningTransaction);\r\n                        return [4 /*yield*/, this.handleTransaction(this.tradeContext.approvalTransaction, this.miningTransaction)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (this.miningTransaction.status === models_1.TransactionStatus.completed) {\r\n                            this.miningTransaction = undefined;\r\n                            this.miningTransaction$.next(this.miningTransaction);\r\n                            this.tradeContext.approvalTransaction = undefined;\r\n                            this.tradeContext.hasEnoughAllowance = true;\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Send the swap transaction\r\n     */\r\n    UniswapDappSharedLogic.prototype.swapTransaction = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.miningTransaction = {\r\n                            status: models_1.TransactionStatus.waitingForConfirmation,\r\n                            miningAction: models_1.MiningAction.swap,\r\n                        };\r\n                        this.miningTransaction$.next(this.miningTransaction);\r\n                        this.showTransaction();\r\n                        return [4 /*yield*/, this.handleTransaction(this.tradeContext.transaction, this.miningTransaction)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Toggle showing and hiding the settings\r\n     */\r\n    UniswapDappSharedLogic.prototype.toggleSettings = function () {\r\n        if (!this.transactionInProcess()) {\r\n            this._theming.toggleSettings();\r\n        }\r\n    };\r\n    /**\r\n     * Open token selector from\r\n     */\r\n    UniswapDappSharedLogic.prototype.openTokenSelectorFrom = function () {\r\n        this._theming.showTokenSelector();\r\n        this.selectorOpenFrom = models_1.SelectTokenActionFrom.input;\r\n        this.selectorOpenFrom$.next(this.selectorOpenFrom);\r\n    };\r\n    /**\r\n     * Open token selector to\r\n     */\r\n    UniswapDappSharedLogic.prototype.openTokenSelectorTo = function () {\r\n        this._theming.showTokenSelector();\r\n        this.selectorOpenFrom = models_1.SelectTokenActionFrom.output;\r\n        this.selectorOpenFrom$.next(this.selectorOpenFrom);\r\n    };\r\n    /**\r\n     * Hide the token selector\r\n     */\r\n    UniswapDappSharedLogic.prototype.hideTokenSelector = function () {\r\n        this.selectorOpenFrom = undefined;\r\n        this.currentTokenSearch = undefined;\r\n        this._theming.hideTokenSelector();\r\n    };\r\n    /**\r\n     * Show the confirm swap modal\r\n     */\r\n    UniswapDappSharedLogic.prototype.showConfirmSwap = function () {\r\n        this._theming.showConfirmSwap();\r\n        this._confirmSwapOpened = true;\r\n    };\r\n    /**\r\n     * Hide the confirm swap modal\r\n     */\r\n    UniswapDappSharedLogic.prototype.hideConfirmSwap = function () {\r\n        this._theming.hideConfirmSwap();\r\n        this._confirmSwapOpened = false;\r\n        this.acceptPriceChange();\r\n    };\r\n    /**\r\n     * Show transaction modal\r\n     */\r\n    UniswapDappSharedLogic.prototype.showTransaction = function () {\r\n        this._theming.hideConfirmSwap();\r\n        this._theming.showTransaction();\r\n    };\r\n    /**\r\n     * Hide the transaction modal\r\n     */\r\n    UniswapDappSharedLogic.prototype.hideTransaction = function () {\r\n        var _a;\r\n        this._theming.hideTransaction();\r\n        this.miningTransaction = undefined;\r\n        this.miningTransaction$.next(this.miningTransaction);\r\n        (_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.destroy();\r\n        this.tradeContext = undefined;\r\n        this.tradeContext$.next(undefined);\r\n        this._inputAmount = new bignumber_js_1.BigNumber(0);\r\n        // let the client know the swap all done to clear down the fields\r\n        this.tradeCompleted$.next(true);\r\n        this.tradeCompleted$.next(false);\r\n        this.hideConfirmSwap();\r\n    };\r\n    /**\r\n     * Change token selected\r\n     * @param contractAddress The contract address\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeToken = function (contractAddress) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _a = this.selectorOpenFrom;\r\n                        switch (_a) {\r\n                            case models_1.SelectTokenActionFrom.input: return [3 /*break*/, 1];\r\n                            case models_1.SelectTokenActionFrom.output: return [3 /*break*/, 3];\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 1: return [4 /*yield*/, this.changeInputToken(contractAddress)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        return [2 /*return*/];\r\n                    case 3: return [4 /*yield*/, this.changeOutputToken(contractAddress)];\r\n                    case 4:\r\n                        _c.sent();\r\n                        _c.label = 5;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Change trade price\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeTradePrice = function (amount, directon) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (directon === simple_uniswap_sdk_1.TradeDirection.input) {\r\n                            this._inputAmount = new bignumber_js_1.BigNumber(amount);\r\n                        }\r\n                        if (!!this.factory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [4 /*yield*/, this.trade(new bignumber_js_1.BigNumber(amount), directon)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Set max input\r\n     */\r\n    UniswapDappSharedLogic.prototype.setMaxInput = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var maxBalance;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        maxBalance = this.inputToken.balance.toFixed();\r\n                        return [4 /*yield*/, this.changeTradePrice(maxBalance, simple_uniswap_sdk_1.TradeDirection.input)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, maxBalance];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Swap switch\r\n     */\r\n    UniswapDappSharedLogic.prototype.swapSwitch = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clonedOutput, clonedInput, amount, amount;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        clonedOutput = utils_1.Utils.deepClone(this.outputToken);\r\n                        clonedInput = utils_1.Utils.deepClone(this.inputToken);\r\n                        return [4 /*yield*/, this.buildFactory(clonedOutput.contractAddress, clonedInput.contractAddress, false)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (!this.tradeContext) return [3 /*break*/, 6];\r\n                        if (!(this.tradeContext.quoteDirection === simple_uniswap_sdk_1.TradeDirection.output)) return [3 /*break*/, 3];\r\n                        amount = utils_1.Utils.deepClone(this.tradeContext.baseConvertRequest);\r\n                        return [4 /*yield*/, this.trade(new bignumber_js_1.BigNumber(amount), simple_uniswap_sdk_1.TradeDirection.input)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, {\r\n                                outputValue: this.tradeContext.expectedConvertQuote,\r\n                                inputValue: amount,\r\n                            }];\r\n                    case 3:\r\n                        amount = utils_1.Utils.deepClone(this.tradeContext.baseConvertRequest);\r\n                        return [4 /*yield*/, this.trade(new bignumber_js_1.BigNumber(amount), simple_uniswap_sdk_1.TradeDirection.output)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [2 /*return*/, {\r\n                                outputValue: amount,\r\n                                inputValue: this.tradeContext.expectedConvertQuote,\r\n                            }];\r\n                    case 5: return [3 /*break*/, 7];\r\n                    case 6: return [2 /*return*/, {\r\n                            outputValue: '',\r\n                            inputValue: '',\r\n                        }];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Accept the price change\r\n     */\r\n    UniswapDappSharedLogic.prototype.acceptPriceChange = function () {\r\n        if (this.newPriceTradeContext) {\r\n            this.tradeContext = this.newPriceTradeContext;\r\n            this.tradeContext$.next(this.tradeContext);\r\n        }\r\n        this.newPriceTradeContext = undefined;\r\n        this.newPriceTradeContext$.next(undefined);\r\n    };\r\n    /**\r\n     * work out what 1 is equal to\r\n     */\r\n    UniswapDappSharedLogic.prototype.workOutOneEqualTo = function () {\r\n        return utils_1.Utils.toPrecision(new bignumber_js_1.BigNumber(+this.tradeContext.expectedConvertQuote /\r\n            +this.tradeContext.baseConvertRequest));\r\n    };\r\n    /**\r\n     * Set multihops\r\n     * @param disableMultihops The status of disable multihops\r\n     */\r\n    UniswapDappSharedLogic.prototype.setDisableMultihops = function (disableMultihops) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (disableMultihops === this.uniswapPairSettings.disableMultihops) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.uniswapPairSettings.disableMultihops = disableMultihops;\r\n                        this.uniswapPairSettings$.next(this.uniswapPairSettings);\r\n                        return [4 /*yield*/, this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress, false)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.executeTradeAndHonourLastTradeDirection()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Set transaction deadline\r\n     * @param deadlineMinutes The deadline minutes the tx has to be mined before it fails\r\n     */\r\n    UniswapDappSharedLogic.prototype.setTransactionDeadline = function (deadlineMinutes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (Number(deadlineMinutes) === this.uniswapPairSettings.deadlineMinutes) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (deadlineMinutes === '') {\r\n                            this.uniswapPairSettings.deadlineMinutes = 20;\r\n                        }\r\n                        else {\r\n                            this.uniswapPairSettings.deadlineMinutes = Number(deadlineMinutes);\r\n                        }\r\n                        this.uniswapPairSettings$.next(this.uniswapPairSettings);\r\n                        return [4 /*yield*/, this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress, false)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.executeTradeAndHonourLastTradeDirection()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Set transaction slippage\r\n     * @param slippage The slippage the route can take\r\n     */\r\n    UniswapDappSharedLogic.prototype.setSlippage = function (slippage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (Number(slippage) / 100 === this.uniswapPairSettings.slippage) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (slippage === '') {\r\n                            this.uniswapPairSettings.slippage = 0.005;\r\n                        }\r\n                        else {\r\n                            this.uniswapPairSettings.slippage = Number(slippage) / 100;\r\n                        }\r\n                        this.uniswapPairSettings$.next(this.uniswapPairSettings);\r\n                        return [4 /*yield*/, this.buildFactory(this.inputToken.contractAddress, this.outputToken.contractAddress, false)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.executeTradeAndHonourLastTradeDirection()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Search for tokens\r\n     * @param search The search term\r\n     */\r\n    UniswapDappSharedLogic.prototype.searchToken = function (search) {\r\n        this.currentTokenSearch = search;\r\n        this.supportedTokenBalances = this._tokenService.searchToken(search, this.supportedTokenBalances);\r\n        return this.supportedTokenBalances;\r\n    };\r\n    /**\r\n     * See if the transaction is in process\r\n     */\r\n    UniswapDappSharedLogic.prototype.transactionInProcess = function () {\r\n        var _a, _c;\r\n        return (((_a = this.miningTransaction) === null || _a === void 0 ? void 0 : _a.status) ===\r\n            models_1.TransactionStatus.waitingForConfirmation ||\r\n            ((_c = this.miningTransaction) === null || _c === void 0 ? void 0 : _c.status) === models_1.TransactionStatus.mining);\r\n    };\r\n    /**\r\n     * View the tx on etherscan\r\n     */\r\n    UniswapDappSharedLogic.prototype.viewOnEtherscan = function () {\r\n        var _a;\r\n        if ((_a = this.miningTransaction) === null || _a === void 0 ? void 0 : _a.blockExplorerLink) {\r\n            window.open(this.miningTransaction.blockExplorerLink, '_blank');\r\n        }\r\n    };\r\n    /**\r\n     * Execute the trade but honour the last trade direction\r\n     */\r\n    UniswapDappSharedLogic.prototype.executeTradeAndHonourLastTradeDirection = function () {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!(((_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.quoteDirection) === simple_uniswap_sdk_1.TradeDirection.output)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.trade(new bignumber_js_1.BigNumber(utils_1.Utils.deepClone(this.tradeContext.baseConvertRequest)), simple_uniswap_sdk_1.TradeDirection.output)];\r\n                    case 1:\r\n                        _c.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 2: return [4 /*yield*/, this.trade(this._inputAmount, simple_uniswap_sdk_1.TradeDirection.input)];\r\n                    case 3:\r\n                        _c.sent();\r\n                        _c.label = 4;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handle transaction\r\n     * @param transaction The transaction\r\n     * @param miningTransaction The mining transaction\r\n     */\r\n    UniswapDappSharedLogic.prototype.handleTransaction = function (transaction, miningTransaction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var txHash_1, blockStream_1, error_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 3, , 4]);\r\n                        return [4 /*yield*/, this._ethereumProvider.sendAsync(transaction)];\r\n                    case 1:\r\n                        txHash_1 = _a.sent();\r\n                        this._quoteSubscription.unsubscribe();\r\n                        miningTransaction.status = models_1.TransactionStatus.mining;\r\n                        miningTransaction.txHash = txHash_1;\r\n                        miningTransaction.blockExplorerLink =\r\n                            this._chainService.getBlockExplorerLinkForTransactionHash(this.chainId, txHash_1);\r\n                        this.miningTransaction$.next(miningTransaction);\r\n                        blockStream_1 = rxjs_1.Subscription.EMPTY;\r\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\r\n                                blockStream_1 = _this._chainService.newBlock$.subscribe(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                    var receipt, error_2;\r\n                                    return __generator(this, function (_a) {\r\n                                        switch (_a.label) {\r\n                                            case 0:\r\n                                                _a.trys.push([0, 2, , 3]);\r\n                                                return [4 /*yield*/, this._ethereumProvider.provider.getTransactionReceipt(txHash_1)];\r\n                                            case 1:\r\n                                                receipt = _a.sent();\r\n                                                if (receipt) {\r\n                                                    resolve();\r\n                                                    this.miningTransaction.status = models_1.TransactionStatus.completed;\r\n                                                    this.miningTransaction$.next(miningTransaction);\r\n                                                }\r\n                                                return [3 /*break*/, 3];\r\n                                            case 2:\r\n                                                error_2 = _a.sent();\r\n                                                blockStream_1.unsubscribe();\r\n                                                reject(error_2);\r\n                                                return [3 /*break*/, 3];\r\n                                            case 3: return [2 /*return*/];\r\n                                        }\r\n                                    });\r\n                                }); });\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        blockStream_1.unsubscribe();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        miningTransaction.status = models_1.TransactionStatus.rejected;\r\n                        this.miningTransaction$.next(miningTransaction);\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Change input token\r\n     * @param contractAddress The contract address\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeInputToken = function (contractAddress) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.changeTokenHandler(contractAddress, this.outputToken.contractAddress)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Change output token\r\n     * @param contractAddress The contract address\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeOutputToken = function (contractAddress) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.changeTokenHandler(this.inputToken.contractAddress, contractAddress)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Change token handler\r\n     * @param inputToken The input token\r\n     * @param outputToken The output token\r\n     */\r\n    UniswapDappSharedLogic.prototype.changeTokenHandler = function (inputToken, outputToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.hideTokenSelector();\r\n                        return [4 /*yield*/, this.buildFactory(inputToken, outputToken, false)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.executeTradeAndHonourLastTradeDirection()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Build factory\r\n     */\r\n    UniswapDappSharedLogic.prototype.buildFactory = function (inputToken, outputToken, executeTrade) {\r\n        var _a;\r\n        if (executeTrade === void 0) { executeTrade = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var uniswapPair, _c, fiatPrices, _d, _e, _f, _g, _h, _j, _k, _l;\r\n            return __generator(this, function (_m) {\r\n                switch (_m.label) {\r\n                    case 0:\r\n                        (_a = this.tradeContext) === null || _a === void 0 ? void 0 : _a.destroy();\r\n                        inputToken = simple_uniswap_sdk_1.getAddress(inputToken, true);\r\n                        outputToken = simple_uniswap_sdk_1.getAddress(outputToken, true);\r\n                        uniswapPair = this.createUniswapPairContext(inputToken, outputToken, this.uniswapPairSettings);\r\n                        _c = this;\r\n                        return [4 /*yield*/, uniswapPair.createFactory()];\r\n                    case 1:\r\n                        _c.factory = _m.sent();\r\n                        return [4 /*yield*/, this._coinGecko.getCoinGeckoFiatPrices([\r\n                                this.factory.fromToken.contractAddress,\r\n                                this.factory.toToken.contractAddress,\r\n                            ], this.chainId)];\r\n                    case 2:\r\n                        fiatPrices = _m.sent();\r\n                        _d = this;\r\n                        _f = (_e = this._tokenService).buildExtendedToken;\r\n                        _g = [this.factory.fromToken];\r\n                        return [4 /*yield*/, this.factory.getFromTokenBalance()];\r\n                    case 3: return [4 /*yield*/, _f.apply(_e, _g.concat([_m.sent(), fiatPrices]))];\r\n                    case 4:\r\n                        _d.inputToken = _m.sent();\r\n                        this.inputToken$.next(this.inputToken);\r\n                        _h = this;\r\n                        _k = (_j = this._tokenService).buildExtendedToken;\r\n                        _l = [this.factory.toToken];\r\n                        return [4 /*yield*/, this.factory.getToTokenBalance()];\r\n                    case 5: return [4 /*yield*/, _k.apply(_j, _l.concat([_m.sent(), fiatPrices]))];\r\n                    case 6:\r\n                        _h.outputToken = _m.sent();\r\n                        this.outputToken$.next(this.outputToken);\r\n                        if (!executeTrade) return [3 /*break*/, 8];\r\n                        return [4 /*yield*/, this.trade(this._inputAmount, simple_uniswap_sdk_1.TradeDirection.input)];\r\n                    case 7:\r\n                        _m.sent();\r\n                        _m.label = 8;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create uniswap pair context\r\n     * @param inputToken The input token\r\n     * @param outputToken The output token\r\n     * @param settings The settings\r\n     */\r\n    UniswapDappSharedLogic.prototype.createUniswapPairContext = function (inputToken, outputToken, settings) {\r\n        if (this._context.ethereumProvider) {\r\n            return new simple_uniswap_sdk_1.UniswapPair({\r\n                fromTokenContractAddress: inputToken,\r\n                toTokenContractAddress: outputToken,\r\n                ethereumAddress: this._ethereumProvider.address,\r\n                ethereumProvider: this._context.ethereumProvider,\r\n                settings: settings,\r\n            });\r\n        }\r\n        return new simple_uniswap_sdk_1.UniswapPair({\r\n            fromTokenContractAddress: inputToken,\r\n            toTokenContractAddress: outputToken,\r\n            ethereumAddress: this._ethereumProvider.address,\r\n            chainId: this.chainId,\r\n            ethereumProvider: this._ethereumProvider.provider,\r\n            settings: settings,\r\n        });\r\n    };\r\n    /**\r\n     * Execute the trade quote\r\n     * @param amount The amount\r\n     */\r\n    UniswapDappSharedLogic.prototype.trade = function (amount, direction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var context;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!amount.isGreaterThan(0)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.factory.trade(amount.toFixed(), direction)];\r\n                    case 1:\r\n                        context = _a.sent();\r\n                        this.tradeContext = this.formatTradeContext(context);\r\n                        this.tradeContext$.next(this.tradeContext);\r\n                        this._quoteSubscription = this.tradeContext.quoteChanged$.subscribe(function (quote) {\r\n                            var _a, _c, _d;\r\n                            if (((_a = _this.miningTransaction) === null || _a === void 0 ? void 0 : _a.miningAction) === models_1.MiningAction.swap &&\r\n                                (((_c = _this.miningTransaction) === null || _c === void 0 ? void 0 : _c.status) === models_1.TransactionStatus.mining ||\r\n                                    ((_d = _this.miningTransaction) === null || _d === void 0 ? void 0 : _d.status) === models_1.TransactionStatus.completed)) {\r\n                                _this._quoteSubscription.unsubscribe();\r\n                                return;\r\n                            }\r\n                            var formattedQuote = _this.formatTradeContext(quote);\r\n                            if (_this._confirmSwapOpened) {\r\n                                _this.newPriceTradeContext = formattedQuote;\r\n                                _this.newPriceTradeContext$.next(_this.newPriceTradeContext);\r\n                            }\r\n                            else {\r\n                                _this.tradeContext = formattedQuote;\r\n                                _this.tradeContext$.next(_this.tradeContext);\r\n                            }\r\n                        });\r\n                        if (this.tradeContext.quoteDirection === simple_uniswap_sdk_1.TradeDirection.output) {\r\n                            this._inputAmount = new bignumber_js_1.BigNumber(utils_1.Utils.deepClone(this.tradeContext.expectedConvertQuote));\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Format trade context values\r\n     * @param context The context\r\n     */\r\n    UniswapDappSharedLogic.prototype.formatTradeContext = function (context) {\r\n        context.liquidityProviderFee = utils_1.Utils.toPrecision(context.liquidityProviderFee);\r\n        if (context.minAmountConvertQuote) {\r\n            context.minAmountConvertQuote = utils_1.Utils.toPrecision(context.minAmountConvertQuote);\r\n        }\r\n        if (context.maximumSent) {\r\n            context.maximumSent = utils_1.Utils.toPrecision(context.maximumSent);\r\n        }\r\n        context.expectedConvertQuote = utils_1.Utils.toPrecision(context.expectedConvertQuote);\r\n        return context;\r\n    };\r\n    /**\r\n     * Subscribe to the block stream\r\n     */\r\n    UniswapDappSharedLogic.prototype.subscribeToBlockStream = function () {\r\n        var _this = this;\r\n        return this._chainService.newBlock$.subscribe(function (block) {\r\n            _this.blockNumber = block;\r\n            _this.getBalances();\r\n        });\r\n    };\r\n    /**\r\n     * Get the balances of the supported contracts\r\n     */\r\n    UniswapDappSharedLogic.prototype.getBalances = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenWithAllowanceInfo, fiatPrices_1, _a, inputToken, newInputBalance, newInputFiatPrice, outputToken, newOutputBalance, newOutputFiatPrice;\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!this.supportedNetwork) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this._tokensFactoryPublic.getAllowanceAndBalanceOfForContracts(this._ethereumProvider.address, this._context.supportedNetworkTokens\r\n                                .find(function (t) { return t.chainId === _this.chainId; })\r\n                                .supportedTokens.map(function (c) { return simple_uniswap_sdk_1.getAddress(c.contractAddress, true); }), true)];\r\n                    case 1:\r\n                        tokenWithAllowanceInfo = _c.sent();\r\n                        return [4 /*yield*/, this._coinGecko.getCoinGeckoFiatPrices(tokenWithAllowanceInfo.map(function (c) { return c.token.contractAddress; }), this.chainId)];\r\n                    case 2:\r\n                        fiatPrices_1 = _c.sent();\r\n                        _a = this;\r\n                        return [4 /*yield*/, Promise.all(tokenWithAllowanceInfo.map(function (item) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var token, canShow;\r\n                                var _a;\r\n                                return __generator(this, function (_c) {\r\n                                    switch (_c.label) {\r\n                                        case 0: return [4 /*yield*/, this._tokenService.buildExtendedToken(item.token, item.allowanceAndBalanceOf.balanceOf, fiatPrices_1)];\r\n                                        case 1:\r\n                                            token = _c.sent();\r\n                                            canShow = true;\r\n                                            if (this.currentTokenSearch) {\r\n                                                canShow = this.supportedTokenBalances.find(function (c) {\r\n                                                    return c.contractAddress.toLowerCase() ===\r\n                                                        item.token.contractAddress.toLowerCase();\r\n                                                }).canShow;\r\n                                            }\r\n                                            _a = {\r\n                                                chainId: token.chainId,\r\n                                                contractAddress: token.contractAddress,\r\n                                                decimals: token.decimals,\r\n                                                symbol: token.symbol,\r\n                                                name: token.name,\r\n                                                fiatPrice: token.fiatPrice,\r\n                                                balance: token.balance,\r\n                                                canShow: canShow\r\n                                            };\r\n                                            return [4 /*yield*/, this._tokenService.getTokenImage(token.contractAddress, token.chainId)];\r\n                                        case 2: return [2 /*return*/, (_a.tokenImageContext = _c.sent(),\r\n                                                _a)];\r\n                                    }\r\n                                });\r\n                            }); }))];\r\n                    case 3:\r\n                        _a.supportedTokenBalances = (_c.sent())\r\n                            .sort(function (a, b) {\r\n                            if (a.name < b.name) {\r\n                                return -1;\r\n                            }\r\n                            if (a.name > b.name) {\r\n                                return 1;\r\n                            }\r\n                            return 0;\r\n                        })\r\n                            .sort(function (a, b) {\r\n                            if (a.balance.isLessThan(b.balance)) {\r\n                                return 1;\r\n                            }\r\n                            if (a.balance.isGreaterThan(b.balance)) {\r\n                                return -1;\r\n                            }\r\n                            return 0;\r\n                        })\r\n                            .sort(function (a, _b) {\r\n                            var _a;\r\n                            if (a.contractAddress === _this.inputToken.contractAddress) {\r\n                                return -1;\r\n                            }\r\n                            if (a.contractAddress === ((_a = _this.outputToken) === null || _a === void 0 ? void 0 : _a.contractAddress)) {\r\n                                return -1;\r\n                            }\r\n                            return 0;\r\n                        });\r\n                        inputToken = this.supportedTokenBalances.find(function (c) { return c.contractAddress === _this.inputToken.contractAddress; });\r\n                        if (inputToken) {\r\n                            newInputBalance = inputToken.balance;\r\n                            newInputFiatPrice = inputToken.fiatPrice;\r\n                            if (!this.inputToken.balance.isEqualTo(newInputBalance) ||\r\n                                (newInputFiatPrice &&\r\n                                    this.inputToken.fiatPrice &&\r\n                                    !this.inputToken.fiatPrice.isEqualTo(newInputFiatPrice))) {\r\n                                this.inputToken.balance = newInputBalance;\r\n                                this.inputToken.fiatPrice = newInputFiatPrice;\r\n                                this.inputToken$.next(this.inputToken);\r\n                            }\r\n                        }\r\n                        if (this.outputToken) {\r\n                            outputToken = this.supportedTokenBalances.find(function (c) { return c.contractAddress === _this.outputToken.contractAddress; });\r\n                            if (outputToken) {\r\n                                newOutputBalance = outputToken.balance;\r\n                                newOutputFiatPrice = outputToken.fiatPrice;\r\n                                if (!this.outputToken.balance.isEqualTo(newOutputBalance) ||\r\n                                    (newOutputFiatPrice &&\r\n                                        this.outputToken.fiatPrice &&\r\n                                        !this.outputToken.fiatPrice.isEqualTo(newOutputFiatPrice))) {\r\n                                    this.outputToken.balance = newOutputBalance;\r\n                                    this.outputToken.fiatPrice = newOutputFiatPrice;\r\n                                    this.outputToken$.next(this.outputToken);\r\n                                }\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        this.supportedTokenBalances = [];\r\n                        _c.label = 5;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return UniswapDappSharedLogic;\r\n}());\r\nexports.UniswapDappSharedLogic = UniswapDappSharedLogic;\r\n"]},"metadata":{},"sourceType":"script"}