{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/common/toolbar_content.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport { getEthAccount, getSelectedNetworkID, getWeb3State } from '../../store/blockchain/selectors';\nimport { Logo } from './logo';\nimport { WalletConnectionContentContainer } from './wallet_connection_content';\nimport { Web3State } from '../../types/blockchain';\nimport { ErrorIcons, FontSize, ErrorCard } from './error_card';\nimport { errorsWallet } from '../../util/error_messages';\nimport { getNetworkName } from '../../util/web3_utils';\nimport { NETWORK_ID } from '../../common/constants';\nvar NavActive;\n\n(function (NavActive) {\n  NavActive[NavActive[\"INDEX\"] = 0] = \"INDEX\";\n  NavActive[NavActive[\"MULTISIG\"] = 1] = \"MULTISIG\";\n})(NavActive || (NavActive = {}));\n\nvar ToolbarContent = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ToolbarContent, _PureComponent);\n\n  var _super = _createSuper(ToolbarContent);\n\n  function ToolbarContent() {\n    var _this;\n\n    _classCallCheck(this, ToolbarContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      active: NavActive.INDEX\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidUpdate\", function () {\n      var activePath = _this.getActivePath();\n\n      if (_this.state.active !== activePath) {\n        _this.setState({\n          active: activePath\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getActivePath\", function () {\n      var router = _this.props.router;\n\n      switch (router.pathname) {\n        case \"/multisig\":\n          return NavActive.MULTISIG;\n\n        default:\n          return NavActive.INDEX;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (position) {\n      var router = _this.props.router;\n\n      _this.setState({\n        active: NavActive.INDEX\n      });\n\n      switch (position) {\n        case NavActive.MULTISIG:\n          return router.push('/multisig/new');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getContentFromWeb3State\", function (web3State) {\n      console.log(web3State);\n\n      switch (web3State) {\n        case Web3State.Locked:\n          return /*#__PURE__*/_jsxDEV(ErrorCard, {\n            fontSize: FontSize.Large,\n            text: errorsWallet.mmLocked,\n            icon: ErrorIcons.Lock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 24\n          }, _assertThisInitialized(_this));\n\n        case Web3State.NotInstalled:\n          return /*#__PURE__*/_jsxDEV(ErrorCard, {\n            fontSize: FontSize.Large,\n            text: errorsWallet.mmNotInstalled,\n            icon: ErrorIcons.Metamask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, _assertThisInitialized(_this));\n\n        case Web3State.Loading:\n          return /*#__PURE__*/_jsxDEV(ErrorCard, {\n            fontSize: FontSize.Large,\n            text: errorsWallet.mmLoading,\n            icon: ErrorIcons.Metamask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 24\n          }, _assertThisInitialized(_this));\n\n        case Web3State.Error:\n          console.log(\"aca\");\n          return /*#__PURE__*/_jsxDEV(ErrorCard, {\n            fontSize: FontSize.Large,\n            text: errorsWallet.mmWrongNetwork(NETWORK_ID),\n            icon: ErrorIcons.Warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, _assertThisInitialized(_this));\n\n        case Web3State.Done:\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wallet-dropdown separator\",\n            children: /*#__PURE__*/_jsxDEV(WalletConnectionContentContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 67\n            }, _assertThisInitialized(_this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 24\n          }, _assertThisInitialized(_this));\n\n        default:\n          var _exhaustiveCheck = web3State;\n          return _exhaustiveCheck;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderNetworkName\", function () {\n      var selectedNetwork = _this.props.selectedNetwork;\n\n      if (selectedNetwork === 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"network-name\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 20\n        }, _assertThisInitialized(_this));\n      }\n\n      var netValue = selectedNetwork === 1 ? \"Ethereum Mainnet\" : getNetworkName(selectedNetwork) + \"Network Selected\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"network-name\",\n        children: netValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, _assertThisInitialized(_this));\n    });\n\n    return _this;\n  }\n\n  _createClass(ToolbarContent, [{\n    key: \"render\",\n    value: function render() {\n      var logo = /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo-styled\",\n        src: \"/static/img/logo.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 22\n      }, this);\n\n      var active = this.state.active;\n      var web3State = this.props.web3State;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header_area\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {\n          bg: \"light\",\n          expand: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            children: /*#__PURE__*/_jsxDEV(Logo, {\n              image: logo,\n              text: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n            \"aria-controls\": \"basic-navbar-nav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n            id: \"basic-navbar-nav\",\n            children: /*#__PURE__*/_jsxDEV(Nav, {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(Nav, {\n                className: \"spacer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n                children: this.renderNetworkName()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n                children: this.getContentFromWeb3State(web3State)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return ToolbarContent;\n}(PureComponent);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ethAccount: getEthAccount(state),\n    web3State: getWeb3State(state),\n    selectedNetwork: getSelectedNetworkID(state)\n  };\n};\n\nvar ToolbarContentContainer = connect(mapStateToProps)(withRouter(ToolbarContent));\nexport { ToolbarContentContainer };","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/common/toolbar_content.tsx"],"names":["React","PureComponent","Nav","Navbar","connect","withRouter","getEthAccount","getSelectedNetworkID","getWeb3State","Logo","WalletConnectionContentContainer","Web3State","ErrorIcons","FontSize","ErrorCard","errorsWallet","getNetworkName","NETWORK_ID","NavActive","ToolbarContent","active","INDEX","activePath","getActivePath","state","setState","router","props","pathname","MULTISIG","position","push","web3State","console","log","Locked","Large","mmLocked","Lock","NotInstalled","mmNotInstalled","Metamask","Loading","mmLoading","Error","mmWrongNetwork","Warning","Done","_exhaustiveCheck","selectedNetwork","netValue","logo","renderNetworkName","getContentFromWeb3State","mapStateToProps","ethAccount","ToolbarContentContainer"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { NextRouter, withRouter } from 'next/router';\n\nimport { getEthAccount, getSelectedNetworkID, getWeb3State } from '../../store/blockchain/selectors';\nimport { StoreState } from '../../types/store';\nimport { Logo } from './logo';\nimport { WalletConnectionContentContainer } from './wallet_connection_content';\nimport { Web3State } from '../../types/blockchain';\nimport { ErrorIcons, FontSize, ErrorCard } from './error_card';\nimport { errorsWallet } from '../../util/error_messages';\nimport { getNetworkName } from '../../util/web3_utils';\nimport { NETWORK_ID } from '../../common/constants';\n\nenum NavActive {\n    INDEX = 0,\n    MULTISIG = 1,\n}\n\ninterface StateProps {\n    ethAccount: string;\n    web3State: Web3State;\n    selectedNetwork: number;\n}\n\ninterface OwnProps {\n    active: NavActive\n}\n\ninterface WithRouterProps {\n    router: NextRouter\n}\n\ntype Props = StateProps & WithRouterProps;\n\nclass ToolbarContent extends PureComponent<Props, OwnProps> {\n\n    state = {\n        active: NavActive.INDEX\n    }\n\n    componentDidUpdate = () => {\n        const activePath = this.getActivePath()\n        if(this.state.active !== activePath) {\n            this.setState({active: activePath})\n        }\n    }\n\n    getActivePath = (): NavActive => {\n        const {router} = this.props;\n        switch(router.pathname) {\n            case \"/multisig\": return NavActive.MULTISIG;\n            default: return NavActive.INDEX;\n        }\n        \n    }\n\n    handleClick = (position: NavActive) => {\n        const {router} = this.props;\n        this.setState({active: NavActive.INDEX})\n        switch(position) {\n            case NavActive.MULTISIG:\n                return router.push('/multisig/new');\n        }\n\n    }\n\n    getContentFromWeb3State = (web3State: Web3State): React.ReactNode => {\n        console.log(web3State)\n        switch (web3State) {\n            case Web3State.Locked:\n                return <ErrorCard fontSize={FontSize.Large} text={errorsWallet.mmLocked} icon={ErrorIcons.Lock} />;\n            case Web3State.NotInstalled:\n                return (\n                    <ErrorCard\n                        fontSize={FontSize.Large}\n                        text={errorsWallet.mmNotInstalled}\n                        icon={ErrorIcons.Metamask}\n                    />\n                );\n            case Web3State.Loading:\n                return <ErrorCard fontSize={FontSize.Large} text={errorsWallet.mmLoading} icon={ErrorIcons.Metamask} />;\n            case Web3State.Error:\n                console.log(\"aca\")\n                return  <ErrorCard fontSize={FontSize.Large} text={errorsWallet.mmWrongNetwork(NETWORK_ID)} icon={ErrorIcons.Warning} />;\n            case Web3State.Done:\n                return <div className=\"wallet-dropdown separator\"><WalletConnectionContentContainer /></div>;\n            \n            default:\n                const _exhaustiveCheck: never = web3State;\n                return _exhaustiveCheck;\n        }\n    };\n\n    renderNetworkName = () => {\n        const { selectedNetwork } = this.props;\n        if(selectedNetwork === 0) {\n            return <div className=\"network-name\">Loading...</div>\n        }\n\n        const netValue = selectedNetwork === 1 ? \"Ethereum Mainnet\" : getNetworkName(selectedNetwork) + \"Network Selected\"\n        return (\n            <div className=\"network-name\">{netValue}</div>\n        )\n    }\n    \n    \n    render() {\n        const logo = <img className=\"logo-styled\" src=\"/static/img/logo.png\"  />;\n        const { active } = this.state;\n        const { web3State } = this.props;\n\n        return (\n            <div className='header_area'>\n            <Navbar bg='light' expand=\"lg\">\n                <Navbar.Brand  >\n                    <Logo\n                        image={logo}\n                        text={\"\"}\n                    />\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"\">\n                    \n                        <Nav className=\"spacer\"></Nav>\n                        <Nav.Item>{this.renderNetworkName()}</Nav.Item>\n                        <Nav.Item>{this.getContentFromWeb3State(web3State)}</Nav.Item>\n                    </Nav>\n                        \n                </Navbar.Collapse>\n            </Navbar>\n            </div>\n        )\n    }\n};\n\n\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n    return {\n        ethAccount: getEthAccount(state),\n        web3State: getWeb3State(state),\n        selectedNetwork: getSelectedNetworkID(state)\n    };\n}\n\nconst ToolbarContentContainer = connect(\n    mapStateToProps,\n)(withRouter(ToolbarContent))\n\nexport { ToolbarContentContainer };\n"]},"metadata":{},"sourceType":"module"}