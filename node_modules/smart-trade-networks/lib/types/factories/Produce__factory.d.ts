import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { ContractFactory, Overrides } from "@ethersproject/contracts";
import type { Produce } from "../Produce";
export declare class Produce__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(_multisigWallet: string, _permissions: string, overrides?: Overrides): Promise<Produce>;
    getDeployTransaction(_multisigWallet: string, _permissions: string, overrides?: Overrides): TransactionRequest;
    attach(address: string): Produce;
    connect(signer: Signer): Produce__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): Produce;
}
