import { BigNumberish, ContractTransaction, Signer } from "ethers";
import { ProviderOrSigner } from "../../localTypes";
import { STN721 } from "../../types";
import { ERC721Controller } from "./erc721Controller";
export declare class STN721Controller extends ERC721Controller {
    private _stn721Address;
    private _stn721Contract?;
    constructor(stn721Address: string, signerOrProvider: ProviderOrSigner);
    private _getSTN721Contract;
    static deploySTN721Contract(signer: Signer, parentAddress: string, parentId: BigNumberish, name: string, symbol: string): Promise<STN721>;
    /**Getters */
    getContract(): Promise<STN721>;
    getParentAddress(): Promise<string>;
    getParentId(): Promise<BigNumberish>;
    isDivisible(tokenId: BigNumberish): Promise<boolean>;
    getChildIndexById(tokenId: BigNumberish): Promise<string>;
    getChildIndexByAddress(stn721: string): Promise<BigNumberish>;
    /** Setters */
    attachChild(stn721Child: string, tokenId: BigNumberish): Promise<ContractTransaction>;
    mint(divisible: boolean, tokenIds: Array<BigNumberish>, receiver: string): Promise<ContractTransaction>;
}
