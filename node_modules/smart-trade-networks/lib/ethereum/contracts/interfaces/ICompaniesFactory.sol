// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;



interface ICompaniesFactory {

    event NewCompany(address indexed companyAddress, address indexed companyOwner);
    event RemoveCompany(address indexed company);
    event ApproveCompany(address indexed company);
    event NewSignatorie(address indexed company, address indexed newSignatorie);
    event RemoveSignatorie(address indexed company, address indexed signatorie);

    function createCompany(address _owner, string calldata _name, bytes32 _ipfsLink) external;
    function removeCompany(address _company) external;
    function approveCompany(address _company) external;

    function addCompanySignatorie(address _company, address _newSignatorie) external;
    function removeCompanySignatorie(address _company, address _signatorie) external;

    function getCompanies() external view returns(address[] memory);
    function isCompanyOwner(address _company, address _owner) external view returns (bool);
    function getCompaniesBySignatorie(address _signatorie) external view returns (address[] memory);
    function getSignersByCompany(address _company) external view returns (address[] memory);
    function isCompanyApproved(address _company) external view returns(bool);
    function isSignerApproved(address _company, address _signer) external view returns(bool);

}