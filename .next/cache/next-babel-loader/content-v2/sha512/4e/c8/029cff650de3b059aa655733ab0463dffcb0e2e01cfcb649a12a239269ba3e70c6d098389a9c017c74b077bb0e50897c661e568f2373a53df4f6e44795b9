{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Validator } from 'jsonschema';\nimport configFile from '../config.json';\nimport { configSchema, schemas } from './configSchema';\nexport class Config {\n  static getInstance() {\n    if (!Config._instance) {\n      Config._instance = new Config();\n    }\n\n    return Config._instance;\n  }\n\n  static getConfig() {\n    return this.getInstance()._config;\n  }\n\n  constructor() {\n    _defineProperty(this, \"_validator\", void 0);\n\n    _defineProperty(this, \"_config\", void 0);\n\n    this._validator = new Validator();\n\n    for (const schema of schemas) {\n      this._validator.addSchema(schema, schema.id);\n    }\n\n    this._validator.validate(configFile, configSchema, {\n      throwError: true\n    });\n\n    this._config = configFile;\n  }\n\n}\n\n_defineProperty(Config, \"_instance\", void 0);","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/common/config.ts"],"names":["Validator","configFile","configSchema","schemas","Config","getInstance","_instance","getConfig","_config","constructor","_validator","schema","addSchema","id","validate","throwError"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,YAA1B;AAEA,OAAOC,UAAP,MAAuB,gBAAvB;AAGA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,gBAAtC;AAEA,OAAO,MAAMC,MAAN,CAAa;AAIhB,SAAcC,WAAd,GAAoC;AAChC,QAAI,CAACD,MAAM,CAACE,SAAZ,EAAuB;AACnBF,MAAAA,MAAM,CAACE,SAAP,GAAmB,IAAIF,MAAJ,EAAnB;AACH;;AACD,WAAOA,MAAM,CAACE,SAAd;AACH;;AACD,SAAcC,SAAd,GAAsC;AAClC,WAAO,KAAKF,WAAL,GAAmBG,OAA1B;AACH;;AACDC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AACV,SAAKC,UAAL,GAAkB,IAAIV,SAAJ,EAAlB;;AACA,SAAK,MAAMW,MAAX,IAAqBR,OAArB,EAA8B;AAC1B,WAAKO,UAAL,CAAgBE,SAAhB,CAA0BD,MAA1B,EAAkCA,MAAM,CAACE,EAAzC;AACH;;AACD,SAAKH,UAAL,CAAgBI,QAAhB,CAAyBb,UAAzB,EAAqCC,YAArC,EAAmD;AAAEa,MAAAA,UAAU,EAAE;AAAd,KAAnD;;AACA,SAAKP,OAAL,GAAeP,UAAf;AACH;;AApBe;;gBAAPG,M","sourcesContent":["import { Validator } from 'jsonschema';\n\nimport configFile from '../config.json';\nimport { ConfigFile } from '../types/blockchain';\n\nimport { configSchema, schemas } from './configSchema';\n\nexport class Config {\n    private static _instance: Config;\n    private readonly _validator: Validator;\n    private readonly _config: ConfigFile;\n    public static getInstance(): Config {\n        if (!Config._instance) {\n            Config._instance = new Config();\n        }\n        return Config._instance;\n    }\n    public static getConfig(): ConfigFile {\n        return this.getInstance()._config;\n    }\n    constructor() {\n        this._validator = new Validator();\n        for (const schema of schemas) { \n            this._validator.addSchema(schema, schema.id);\n        }\n        this._validator.validate(configFile, configSchema, { throwError: true });\n        this._config = configFile;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}