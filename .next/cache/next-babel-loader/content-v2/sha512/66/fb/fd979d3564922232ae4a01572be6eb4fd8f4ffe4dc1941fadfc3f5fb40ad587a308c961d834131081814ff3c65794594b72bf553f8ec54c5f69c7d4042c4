{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createAction } from \"typesafe-actions\";\nimport { isMetamaskInstalled } from \"../../services/web3_wrapper\";\nimport { Web3State } from \"../../types/blockchain\";\nimport { RelayProvider } from \"@opengsn/provider/dist/RelayProvider\";\nimport { ethers } from \"ethers\";\nimport { loadRelayHubContract } from \"../../services/relay_hub\";\nimport { getGasUsedByPost, getMinBalance, getMinGas, getOwner, getPaymentData, getTargetContract, getTokenToEthOutput, setFee, setForwarder, setGasUsedByPost, setMinBalance, setMinGas, setPaymentToken, setRelayHub, setTarget, whitelistToken, withdrawFromRelayHub } from \"../../services/paymaster\";\nimport { getTokenValue } from \"../../services/uniswap_router\";\nimport { getKnownTokens } from \"../../util/known_tokens\";\nimport { ERC20Controller } from \"smart-trade-networks\";\nimport { getTokenTotalSupply, getBalance, approveTokens, getAllowance } from \"../../services/erc20_service\";\nimport { swap } from \"../../services/gsn_service\";\nimport { NETWORK_ID } from \"../../common/constants\";\nexport var setWeb3State = createAction('blockchain/WEB3_STATE_set', function (resolve) {\n  return function (web3State) {\n    return resolve(web3State);\n  };\n});\nexport var setEthAccount = createAction('blockchain/ETH_ACCOUNT_set', function (resolve) {\n  return function (ethAccount) {\n    return resolve(ethAccount);\n  };\n});\nexport var setEthBalance = createAction('blockchain/ETH_BALANCE_set', function (resolve) {\n  return function (ethBalance) {\n    return resolve(ethBalance);\n  };\n});\nexport var setTokenBalance = createAction('blockchain/TOKEN_BALANCE_set', function (resolve) {\n  return function (tokenBalance) {\n    return resolve(tokenBalance);\n  };\n});\nexport var setNetworkID = createAction('blockchain/NETWORK_ID_set', function (resolve) {\n  return function (networkID) {\n    return resolve(networkID);\n  };\n});\nexport var setNetworkBalance = createAction('blockchain/NETWORK_BALANCE_set', function (resolve) {\n  return function (balance) {\n    return resolve(balance);\n  };\n});\nexport var setPaymasterData = createAction('blockchain/PAYMASTER_DATAset', function (resolve) {\n  return function (data) {\n    return resolve(data);\n  };\n});\nexport var initializeBlockchainData = createAction('blockchain/init', function (resolve) {\n  return function (blockchainData) {\n    return resolve(blockchainData);\n  };\n});\nexport var setGSNProvider = createAction('blockchain/GSN_PROVIDER_set', function (resolve) {\n  return function (gsnProvider) {\n    return resolve(gsnProvider);\n  };\n});\nexport var setGasPrice = createAction('blockchain/GAS_PRICE_set', function (resolve) {\n  return function (gasPrice) {\n    return resolve(gasPrice);\n  };\n});\nexport var setWeb3Provider = createAction('blockchain/WEB3_PROVIDER_set', function (resolve) {\n  return function (web3Provider) {\n    return resolve(web3Provider);\n  };\n});\nexport var initWeb3 = function initWeb3() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, _, _ref) {\n      var initializeWeb3Wrapper, listenNetwork, web3Wrapper, networkId, onChainChanged;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              initializeWeb3Wrapper = _ref.initializeWeb3Wrapper, listenNetwork = _ref.listenNetwork;\n              _context.next = 3;\n              return initializeWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context.sent;\n\n              if (!web3Wrapper) {\n                _context.next = 16;\n                break;\n              }\n\n              dispatch(setWeb3Provider(web3Wrapper));\n              _context.next = 8;\n              return web3Wrapper.getNetwork();\n\n            case 8:\n              networkId = _context.sent.chainId;\n              dispatch(setNetworkID(networkId));\n\n              if (!(NETWORK_ID !== networkId)) {\n                _context.next = 15;\n                break;\n              }\n\n              dispatch(setWeb3State(Web3State.Error));\n\n              onChainChanged = function onChainChanged() {\n                dispatch(initWeb3());\n              };\n\n              listenNetwork(onChainChanged);\n              return _context.abrupt(\"return\");\n\n            case 15:\n              dispatch(initWallet());\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var initGSNProvider = function initGSNProvider() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var gsnConfig, gsnProvider, provider;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              gsnConfig = {\n                loggerConfiguration: {\n                  logLevel: 'error'\n                },\n                paymasterAddress: process.env.GSN_PAYMASTER\n              };\n              _context2.next = 3;\n              return RelayProvider.newProvider({\n                provider: window.ethereum,\n                config: gsnConfig\n              }).init();\n\n            case 3:\n              gsnProvider = _context2.sent;\n              // const gasFees = await gsnProvider.calculateGasFees()\n              provider = new ethers.providers.Web3Provider(gsnProvider); // dispatch(setGasPrice(gasFees.maxFeePerGas.toString()))\n\n              dispatch(setGSNProvider(provider));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var initWallet = function initWallet() {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, _, _ref4) {\n      var enableWeb3, onAccountsChange, enableMetamask;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              enableWeb3 = _ref4.enableWeb3;\n              dispatch(setWeb3State(Web3State.Loading));\n              _context3.prev = 2;\n\n              if (!isMetamaskInstalled()) {\n                dispatch(initializeAppNoMetamaskOrLocked());\n              }\n\n              if (!(typeof window.ethereum !== 'undefined')) {\n                _context3.next = 19;\n                break;\n              }\n\n              onAccountsChange = function onAccountsChange() {\n                console.log(\"callcak\");\n                dispatch(initWallet());\n              };\n\n              _context3.next = 8;\n              return enableWeb3(onAccountsChange);\n\n            case 8:\n              enableMetamask = _context3.sent;\n\n              if (!enableMetamask) {\n                _context3.next = 16;\n                break;\n              }\n\n              _context3.next = 12;\n              return dispatch(initBalances());\n\n            case 12:\n              _context3.next = 14;\n              return dispatch(initGSNProvider());\n\n            case 14:\n              _context3.next = 17;\n              break;\n\n            case 16:\n              dispatch(initializeAppNoMetamaskOrLocked());\n\n            case 17:\n              _context3.next = 20;\n              break;\n\n            case 19:\n              dispatch(setWeb3State(Web3State.NotInstalled));\n\n            case 20:\n              _context3.next = 26;\n              break;\n\n            case 22:\n              _context3.prev = 22;\n              _context3.t0 = _context3[\"catch\"](2);\n              // Web3Error\n              console.log(_context3.t0);\n              dispatch(setWeb3State(Web3State.Error));\n\n            case 26:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 22]]);\n    }));\n\n    return function (_x5, _x6, _x7) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var initializeAppNoMetamaskOrLocked = function initializeAppNoMetamaskOrLocked() {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (isMetamaskInstalled()) {\n                dispatch(setWeb3State(Web3State.Locked));\n              } else {\n                dispatch(setWeb3State(Web3State.NotInstalled));\n              }\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x8) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport var initBalances = function initBalances() {\n  return /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState, _ref7) {\n      var getWeb3Wrapper;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              getWeb3Wrapper = _ref7.getWeb3Wrapper;\n              _context5.next = 3;\n              return dispatch(initWalletBeginCommon());\n\n            case 3:\n              _context5.next = 5;\n              return dispatch(initWalletERC20());\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x9, _x10, _x11) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n};\n\nvar initWalletBeginCommon = function initWalletBeginCommon() {\n  return /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch, _, _ref9) {\n      var getWeb3Wrapper, web3Wrapper, ethAccount;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              getWeb3Wrapper = _ref9.getWeb3Wrapper;\n              _context6.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context6.sent;\n              _context6.next = 6;\n              return web3Wrapper.getSigner().getAddress();\n\n            case 6:\n              ethAccount = _context6.sent;\n              dispatch(initializeBlockchainData({\n                ethAccount: ethAccount,\n                web3State: Web3State.Done\n              }));\n              dispatch(initNetworksBalance());\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x12, _x13, _x14) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n};\n\nvar initNetworksBalance = function initNetworksBalance() {\n  return /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch, getState, _ref11) {\n      var getWeb3Wrapper, web3Wrapper, signer, ethAccount, balance, networkID, balanceData, relayHub, paymasterBalance, paymasterBalanceData, paymasterMinBalance, minGas, owner, paymentData, gasUsedByPost, targetContract;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              getWeb3Wrapper = _ref11.getWeb3Wrapper;\n              _context7.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context7.sent;\n              signer = web3Wrapper.getSigner();\n              _context7.next = 7;\n              return signer.getAddress();\n\n            case 7:\n              ethAccount = _context7.sent;\n              _context7.next = 10;\n              return web3Wrapper.getBalance(ethAccount);\n\n            case 10:\n              balance = _context7.sent.toString();\n              networkID = getState().blockchain.networkID;\n              balanceData = {\n                balance: balance,\n                networkID: networkID,\n                coin: \"ETH\"\n              };\n              _context7.next = 15;\n              return loadRelayHubContract(signer);\n\n            case 15:\n              relayHub = _context7.sent;\n              _context7.next = 18;\n              return relayHub.balanceOf(process.env.GSN_PAYMASTER);\n\n            case 18:\n              paymasterBalance = _context7.sent.toString();\n              paymasterBalanceData = {\n                balance: paymasterBalance,\n                networkID: networkID,\n                coin: \"ETH\"\n              };\n              _context7.next = 22;\n              return getMinBalance(signer);\n\n            case 22:\n              paymasterMinBalance = _context7.sent;\n              _context7.next = 25;\n              return getMinGas(signer);\n\n            case 25:\n              minGas = _context7.sent;\n              _context7.next = 28;\n              return getOwner(signer);\n\n            case 28:\n              owner = _context7.sent;\n              _context7.next = 31;\n              return getPaymentData(signer);\n\n            case 31:\n              paymentData = _context7.sent;\n              _context7.next = 34;\n              return getGasUsedByPost(signer);\n\n            case 34:\n              gasUsedByPost = _context7.sent;\n              _context7.next = 37;\n              return getTargetContract(signer);\n\n            case 37:\n              targetContract = _context7.sent;\n              dispatch(setPaymasterData({\n                balance: paymasterBalanceData,\n                minBalance: paymasterMinBalance,\n                minGas: minGas,\n                owner: owner,\n                paymentData: paymentData,\n                gasUsedByPost: gasUsedByPost,\n                targetContract: targetContract\n              }));\n              dispatch(setNetworkBalance(balanceData));\n\n            case 40:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x15, _x16, _x17) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n};\n\nvar initWalletERC20 = function initWalletERC20() {\n  return /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              dispatch(fetchTokenBalances());\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function (_x18) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n};\n\nexport var fetchTokenBalances = function fetchTokenBalances() {\n  return /*#__PURE__*/function () {\n    var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(dispatch, getState, _ref14) {\n      var getWeb3Wrapper, web3Wrapper, signer, ethAccount, networkID, knownTokens;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              getWeb3Wrapper = _ref14.getWeb3Wrapper;\n              _context10.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context10.sent;\n              signer = web3Wrapper.getSigner();\n              _context10.next = 7;\n              return signer.getAddress();\n\n            case 7:\n              ethAccount = _context10.sent;\n              networkID = getState().blockchain.networkID;\n              knownTokens = getKnownTokens(networkID).getTokens();\n              knownTokens.map( /*#__PURE__*/function () {\n                var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(token) {\n                  var erc20, balance, decimals, tokenValue, totalSupply, burned, tokenSwapAllowance;\n                  return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          erc20 = new ERC20Controller(token.address, signer);\n                          _context9.next = 3;\n                          return erc20.balanceOf(ethAccount);\n\n                        case 3:\n                          balance = _context9.sent.toString();\n                          _context9.t0 = parseInt;\n                          _context9.next = 7;\n                          return erc20.getDecimals();\n\n                        case 7:\n                          _context9.t1 = _context9.sent.toString();\n                          decimals = (0, _context9.t0)(_context9.t1);\n                          _context9.next = 11;\n                          return getTokenValue(signer, token.address, decimals);\n\n                        case 11:\n                          tokenValue = _context9.sent[1];\n                          _context9.next = 14;\n                          return getTokenTotalSupply(signer, token.address, decimals);\n\n                        case 14:\n                          totalSupply = _context9.sent;\n                          _context9.next = 17;\n                          return getBalance(signer, token.address, process.env.NULL_ADDRESS, decimals);\n\n                        case 17:\n                          burned = _context9.sent;\n                          _context9.next = 20;\n                          return getAllowance(signer, token.address, process.env.GSN_TOKEN_SWAP, decimals);\n\n                        case 20:\n                          tokenSwapAllowance = _context9.sent;\n                          dispatch(setTokenBalance({\n                            token: token,\n                            balance: balance,\n                            networkID: networkID,\n                            uniswapValue: tokenValue.toString(),\n                            totalSupply: totalSupply,\n                            burned: burned,\n                            tokenSwapAllowance: tokenSwapAllowance\n                          }));\n\n                        case 22:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9);\n                }));\n\n                return function (_x22) {\n                  return _ref16.apply(this, arguments);\n                };\n              }());\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function (_x19, _x20, _x21) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n};\nexport var setAllowance = function setAllowance(tokenAddress, amount, to) {\n  return /*#__PURE__*/function () {\n    var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(dispatch, getState, _ref17) {\n      var getWeb3Wrapper, web3Wrapper, signer;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              getWeb3Wrapper = _ref17.getWeb3Wrapper;\n              _context11.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context11.sent;\n              signer = web3Wrapper.getSigner();\n              _context11.prev = 5;\n              return _context11.abrupt(\"return\", approveTokens(signer, tokenAddress, to, amount));\n\n            case 9:\n              _context11.prev = 9;\n              _context11.t0 = _context11[\"catch\"](5);\n              console.log(_context11.t0);\n\n            case 12:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[5, 9]]);\n    }));\n\n    return function (_x23, _x24, _x25) {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n};\nexport var swapTokens = function swapTokens(token, amount) {\n  return /*#__PURE__*/function () {\n    var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(dispatch, getState, _ref19) {\n      var getWeb3Wrapper, web3Wrapper, gsnProvider, minGas, signer;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              getWeb3Wrapper = _ref19.getWeb3Wrapper;\n              _context12.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context12.sent;\n              gsnProvider = getState().blockchain.gsnProvider;\n              minGas = getState().blockchain.paymaster.minGas;\n              signer = web3Wrapper.getSigner();\n              return _context12.abrupt(\"return\", swap(signer, gsnProvider, token, amount, minGas.toString()));\n\n            case 8:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function (_x26, _x27, _x28) {\n      return _ref20.apply(this, arguments);\n    };\n  }();\n};\nexport var reviewSwap = function reviewSwap(amount, token) {\n  return /*#__PURE__*/function () {\n    var _ref22 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(dispatch, getState, _ref21) {\n      var getWeb3Wrapper, web3Wrapper, signer;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              getWeb3Wrapper = _ref21.getWeb3Wrapper;\n              _context13.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context13.sent;\n              signer = web3Wrapper.getSigner();\n              return _context13.abrupt(\"return\", getTokenToEthOutput(signer, amount, token, process.env.UNISWAP_WETH));\n\n            case 6:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    return function (_x29, _x30, _x31) {\n      return _ref22.apply(this, arguments);\n    };\n  }();\n};\nexport var setPaymasterMinBalance = function setPaymasterMinBalance(amount) {\n  return /*#__PURE__*/function () {\n    var _ref24 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(dispatch, getState, _ref23) {\n      var getWeb3Wrapper, web3Wrapper, signer;\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              getWeb3Wrapper = _ref23.getWeb3Wrapper;\n              _context14.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context14.sent;\n              signer = web3Wrapper.getSigner();\n              return _context14.abrupt(\"return\", setMinBalance(signer, amount));\n\n            case 6:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n\n    return function (_x32, _x33, _x34) {\n      return _ref24.apply(this, arguments);\n    };\n  }();\n};\nexport var setPaymasterPaymentToken = function setPaymasterPaymentToken(address) {\n  return /*#__PURE__*/function () {\n    var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(dispatch, getState, _ref25) {\n      var getWeb3Wrapper, web3Wrapper, signer;\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              getWeb3Wrapper = _ref25.getWeb3Wrapper;\n              _context15.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context15.sent;\n              signer = web3Wrapper.getSigner();\n              return _context15.abrupt(\"return\", setPaymentToken(signer, address));\n\n            case 6:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }));\n\n    return function (_x35, _x36, _x37) {\n      return _ref26.apply(this, arguments);\n    };\n  }();\n};\nexport var setPaymasterFee = function setPaymasterFee(amount) {\n  return /*#__PURE__*/function () {\n    var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(dispatch, getState, _ref27) {\n      var getWeb3Wrapper, web3Wrapper, signer;\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              getWeb3Wrapper = _ref27.getWeb3Wrapper;\n              _context16.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context16.sent;\n              signer = web3Wrapper.getSigner();\n              return _context16.abrupt(\"return\", setFee(signer, amount));\n\n            case 6:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n\n    return function (_x38, _x39, _x40) {\n      return _ref28.apply(this, arguments);\n    };\n  }();\n};\nexport var setWhitelist = function setWhitelist(address, whitelist) {\n  return /*#__PURE__*/function () {\n    var _ref30 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(dispatch, getState, _ref29) {\n      var getWeb3Wrapper, web3Wrapper, signer;\n      return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              getWeb3Wrapper = _ref29.getWeb3Wrapper;\n              _context17.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context17.sent;\n              signer = web3Wrapper.getSigner();\n              return _context17.abrupt(\"return\", whitelistToken(signer, address, whitelist));\n\n            case 6:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    }));\n\n    return function (_x41, _x42, _x43) {\n      return _ref30.apply(this, arguments);\n    };\n  }();\n};\nexport var setPaymasterGasUsedByPost = function setPaymasterGasUsedByPost(amount) {\n  return /*#__PURE__*/function () {\n    var _ref32 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(dispatch, getState, _ref31) {\n      var getWeb3Wrapper, web3Wrapper, signer;\n      return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              getWeb3Wrapper = _ref31.getWeb3Wrapper;\n              _context18.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context18.sent;\n              signer = web3Wrapper.getSigner();\n              return _context18.abrupt(\"return\", setGasUsedByPost(signer, amount));\n\n            case 6:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18);\n    }));\n\n    return function (_x44, _x45, _x46) {\n      return _ref32.apply(this, arguments);\n    };\n  }();\n};\nexport var setPamasterMinGas = function setPamasterMinGas(amount) {\n  return /*#__PURE__*/function () {\n    var _ref34 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(dispatch, getState, _ref33) {\n      var getWeb3Wrapper, web3Wrapper, signer;\n      return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              getWeb3Wrapper = _ref33.getWeb3Wrapper;\n              _context19.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context19.sent;\n              signer = web3Wrapper.getSigner();\n              return _context19.abrupt(\"return\", setMinGas(signer, amount));\n\n            case 6:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    }));\n\n    return function (_x47, _x48, _x49) {\n      return _ref34.apply(this, arguments);\n    };\n  }();\n};\nexport var setPaymasterTarget = function setPaymasterTarget(amount) {\n  return /*#__PURE__*/function () {\n    var _ref36 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(dispatch, getState, _ref35) {\n      var getWeb3Wrapper, web3Wrapper, signer;\n      return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              getWeb3Wrapper = _ref35.getWeb3Wrapper;\n              _context20.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context20.sent;\n              signer = web3Wrapper.getSigner();\n              return _context20.abrupt(\"return\", setTarget(signer, amount));\n\n            case 6:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }));\n\n    return function (_x50, _x51, _x52) {\n      return _ref36.apply(this, arguments);\n    };\n  }();\n};\nexport var setPaymasterRelayHub = function setPaymasterRelayHub(amount) {\n  return /*#__PURE__*/function () {\n    var _ref38 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(dispatch, getState, _ref37) {\n      var getWeb3Wrapper, web3Wrapper, signer;\n      return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              getWeb3Wrapper = _ref37.getWeb3Wrapper;\n              _context21.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context21.sent;\n              signer = web3Wrapper.getSigner();\n              return _context21.abrupt(\"return\", setRelayHub(signer, amount));\n\n            case 6:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }));\n\n    return function (_x53, _x54, _x55) {\n      return _ref38.apply(this, arguments);\n    };\n  }();\n};\nexport var setPaymasterForwarder = function setPaymasterForwarder(amount) {\n  return /*#__PURE__*/function () {\n    var _ref40 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(dispatch, getState, _ref39) {\n      var getWeb3Wrapper, web3Wrapper, signer;\n      return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              getWeb3Wrapper = _ref39.getWeb3Wrapper;\n              _context22.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context22.sent;\n              signer = web3Wrapper.getSigner();\n              return _context22.abrupt(\"return\", setForwarder(signer, amount));\n\n            case 6:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22);\n    }));\n\n    return function (_x56, _x57, _x58) {\n      return _ref40.apply(this, arguments);\n    };\n  }();\n};\nexport var withdrawPaymaster = function withdrawPaymaster(amount, receiver) {\n  return /*#__PURE__*/function () {\n    var _ref42 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(dispatch, getState, _ref41) {\n      var getWeb3Wrapper, web3Wrapper, signer;\n      return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              getWeb3Wrapper = _ref41.getWeb3Wrapper;\n              _context23.next = 3;\n              return getWeb3Wrapper();\n\n            case 3:\n              web3Wrapper = _context23.sent;\n              signer = web3Wrapper.getSigner();\n              return _context23.abrupt(\"return\", withdrawFromRelayHub(signer, amount, receiver));\n\n            case 6:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23);\n    }));\n\n    return function (_x59, _x60, _x61) {\n      return _ref42.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/store/blockchain/actions.ts"],"names":["createAction","isMetamaskInstalled","Web3State","RelayProvider","ethers","loadRelayHubContract","getGasUsedByPost","getMinBalance","getMinGas","getOwner","getPaymentData","getTargetContract","getTokenToEthOutput","setFee","setForwarder","setGasUsedByPost","setMinBalance","setMinGas","setPaymentToken","setRelayHub","setTarget","whitelistToken","withdrawFromRelayHub","getTokenValue","getKnownTokens","ERC20Controller","getTokenTotalSupply","getBalance","approveTokens","getAllowance","swap","NETWORK_ID","setWeb3State","resolve","web3State","setEthAccount","ethAccount","setEthBalance","ethBalance","setTokenBalance","tokenBalance","setNetworkID","networkID","setNetworkBalance","balance","setPaymasterData","data","initializeBlockchainData","blockchainData","setGSNProvider","gsnProvider","setGasPrice","gasPrice","setWeb3Provider","web3Provider","initWeb3","dispatch","_","initializeWeb3Wrapper","listenNetwork","web3Wrapper","getNetwork","networkId","chainId","Error","onChainChanged","initWallet","initGSNProvider","gsnConfig","loggerConfiguration","logLevel","paymasterAddress","process","env","GSN_PAYMASTER","newProvider","provider","window","ethereum","config","init","providers","Web3Provider","enableWeb3","Loading","initializeAppNoMetamaskOrLocked","onAccountsChange","console","log","enableMetamask","initBalances","NotInstalled","Locked","getState","getWeb3Wrapper","initWalletBeginCommon","initWalletERC20","getSigner","getAddress","Done","initNetworksBalance","signer","toString","blockchain","balanceData","coin","relayHub","balanceOf","paymasterBalance","paymasterBalanceData","paymasterMinBalance","minGas","owner","paymentData","gasUsedByPost","targetContract","minBalance","fetchTokenBalances","knownTokens","getTokens","map","token","erc20","address","parseInt","getDecimals","decimals","tokenValue","totalSupply","NULL_ADDRESS","burned","GSN_TOKEN_SWAP","tokenSwapAllowance","uniswapValue","setAllowance","tokenAddress","amount","to","swapTokens","paymaster","reviewSwap","UNISWAP_WETH","setPaymasterMinBalance","setPaymasterPaymentToken","setPaymasterFee","setWhitelist","whitelist","setPaymasterGasUsedByPost","setPamasterMinGas","setPaymasterTarget","setPaymasterRelayHub","setPaymasterForwarder","withdrawPaymaster","receiver"],"mappings":"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","sourcesContent":["import { createAction } from \"typesafe-actions\";\n\nimport { isMetamaskInstalled } from \"../../services/web3_wrapper\";\nimport { ThunkCreator } from \"../../types/store\";\nimport { Balance, Blockchain, Paymaster, Token, TokenBalance, Web3State } from \"../../types/blockchain\";\nimport { RelayProvider } from \"@opengsn/provider/dist/RelayProvider\";\nimport { BigNumber, ethers, utils } from \"ethers\";\nimport { loadRelayHubContract } from \"../../services/relay_hub\";\nimport { getGasUsedByPost, getMinBalance, getMinGas, getOwner, getPaymentData, getTargetContract, getTokenToEthOutput, setFee, setForwarder, setGasUsedByPost, setMinBalance, setMinGas, setPaymentToken, setRelayHub, setTarget, whitelistToken, withdrawFromRelayHub } from \"../../services/paymaster\";\nimport { getTokenValue } from \"../../services/uniswap_router\";\nimport { getKnownTokens } from \"../../util/known_tokens\";\nimport { ERC20Controller } from \"smart-trade-networks\";\nimport { getTokenTotalSupply, getBalance, approveTokens, getAllowance } from \"../../services/erc20_service\";\nimport { swap } from \"../../services/gsn_service\";\nimport { getPaymasterData } from \"./selectors\";\nimport { retrieveError } from \"../../util/gsn_error_handler\";\nimport { NETWORK_ID } from \"../../common/constants\";\n\n\n\nexport const setWeb3State = createAction('blockchain/WEB3_STATE_set', resolve => {\n    return (web3State: Web3State) => resolve(web3State);\n});\n\nexport const setEthAccount = createAction('blockchain/ETH_ACCOUNT_set', resolve => {\n    return (ethAccount: string) => resolve(ethAccount);\n});\n\nexport const setEthBalance = createAction('blockchain/ETH_BALANCE_set', resolve => {\n    return (ethBalance: string) => resolve(ethBalance);\n});\n\nexport const setTokenBalance = createAction('blockchain/TOKEN_BALANCE_set', resolve => {\n    return (tokenBalance: TokenBalance) => resolve(tokenBalance);\n});\n\nexport const setNetworkID = createAction('blockchain/NETWORK_ID_set', resolve => {\n    return (networkID: number) => resolve(networkID);\n});\n\nexport const setNetworkBalance = createAction('blockchain/NETWORK_BALANCE_set', resolve => {\n    return (balance: Balance) => resolve(balance);\n});\n\nexport const setPaymasterData = createAction('blockchain/PAYMASTER_DATAset', resolve => {\n    return (data: Paymaster) => resolve(data);\n});\n\nexport const initializeBlockchainData = createAction('blockchain/init', resolve => {\n    return (blockchainData: Partial<Blockchain>) => resolve(blockchainData);\n});\n\nexport const setGSNProvider = createAction('blockchain/GSN_PROVIDER_set', resolve => {\n    return (gsnProvider: ethers.providers.Web3Provider) => resolve(gsnProvider);\n});\n\nexport const setGasPrice = createAction('blockchain/GAS_PRICE_set', resolve => {\n    return (gasPrice: string) => resolve(gasPrice);\n});\n\nexport const setWeb3Provider = createAction('blockchain/WEB3_PROVIDER_set', resolve => {\n    return (web3Provider: ethers.providers.Web3Provider) => resolve(web3Provider);\n});\n\nexport const initWeb3: ThunkCreator<Promise<any>> = () => {\n    return async (dispatch, _, { initializeWeb3Wrapper, listenNetwork }) => {\n        const web3Wrapper = await initializeWeb3Wrapper();\n        if (web3Wrapper) {\n            dispatch(setWeb3Provider(web3Wrapper));\n\n            const networkId = (await web3Wrapper.getNetwork()).chainId\n            dispatch(setNetworkID(networkId))\n\n            if (NETWORK_ID !== networkId) {\n                dispatch(setWeb3State(Web3State.Error));\n\n                const onChainChanged = () => {\n                    dispatch(initWeb3())\n                }\n\n                listenNetwork(onChainChanged);\n                return;\n            }\n            dispatch(initWallet())\n        }\n    }\n}\n\nexport const initGSNProvider: ThunkCreator<Promise<any>> = () => {\n    return async (dispatch) => {\n        const gsnConfig: Partial<any> = {\n            loggerConfiguration: {\n                logLevel: 'error'\n            },\n            paymasterAddress: process.env.GSN_PAYMASTER\n        }\n\n        const gsnProvider = await RelayProvider.newProvider({\n            provider: window.ethereum,\n            config: gsnConfig\n        }).init()\n\n        // const gasFees = await gsnProvider.calculateGasFees()\n\n        const provider = new ethers.providers.Web3Provider(gsnProvider)\n        // dispatch(setGasPrice(gasFees.maxFeePerGas.toString()))\n\n        dispatch(setGSNProvider(provider));\n\n    }\n}\n\nexport const initWallet: ThunkCreator<Promise<any>> = () => {\n    return async (dispatch, _, { enableWeb3 }) => {\n        dispatch(setWeb3State(Web3State.Loading));\n        try {\n            if (!isMetamaskInstalled()) {\n                dispatch(initializeAppNoMetamaskOrLocked());\n            }\n\n            if (typeof window.ethereum !== 'undefined') {\n\n                const onAccountsChange = () => {\n                    console.log(\"callcak\")\n                    dispatch(initWallet())\n                }\n\n                const enableMetamask = await enableWeb3(onAccountsChange);\n\n                if (enableMetamask) {\n\n                    await dispatch(initBalances())\n                    await dispatch(initGSNProvider())\n\n\n                } else {\n                    dispatch(initializeAppNoMetamaskOrLocked());\n                }\n            } else {\n                dispatch(setWeb3State(Web3State.NotInstalled));\n            }\n        } catch (error) {\n            // Web3Error\n            console.log(error)\n            dispatch(setWeb3State(Web3State.Error));\n        }\n    };\n};\n\nexport const initializeAppNoMetamaskOrLocked: ThunkCreator = () => {\n    return async (dispatch) => {\n        if (isMetamaskInstalled()) {\n            dispatch(setWeb3State(Web3State.Locked));\n        } else {\n            dispatch(setWeb3State(Web3State.NotInstalled));\n        }\n    };\n};\n\nexport const initBalances: ThunkCreator<Promise<any>> = () => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        await dispatch(initWalletBeginCommon());\n        await dispatch(initWalletERC20());\n    }\n}\n\n\nconst initWalletBeginCommon: ThunkCreator<Promise<any>> = () => {\n    return async (dispatch, _, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const ethAccount = await web3Wrapper.getSigner().getAddress();\n        dispatch(\n            initializeBlockchainData({\n                ethAccount,\n                web3State: Web3State.Done,\n            }),\n        );\n        dispatch(initNetworksBalance())\n    };\n};\n\nconst initNetworksBalance: ThunkCreator<Promise<any>> = () => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner();\n        const ethAccount = await signer.getAddress();\n        const balance = (await web3Wrapper.getBalance(ethAccount)).toString();\n        const networkID = getState().blockchain.networkID\n        const balanceData: Balance = {\n            balance,\n            networkID,\n            coin: \"ETH\"\n        }\n\n        const relayHub = await loadRelayHubContract(signer)\n        const paymasterBalance = (await relayHub.balanceOf(process.env.GSN_PAYMASTER)).toString();\n        const paymasterBalanceData: Balance = {\n            balance: paymasterBalance,\n            networkID,\n            coin: \"ETH\"\n        }\n        const paymasterMinBalance = await getMinBalance(signer);\n        const minGas = await getMinGas(signer);\n\n        const owner = await getOwner(signer);\n\n        const paymentData = await getPaymentData(signer);\n\n        const gasUsedByPost = await getGasUsedByPost(signer);\n\n        const targetContract = await getTargetContract(signer)\n\n\n        dispatch(setPaymasterData({\n            balance: paymasterBalanceData,\n            minBalance: paymasterMinBalance,\n            minGas,\n            owner,\n            paymentData,\n            gasUsedByPost,\n            targetContract\n        }))\n\n        dispatch(setNetworkBalance(balanceData))\n    };\n};\n\nconst initWalletERC20: ThunkCreator<Promise<any>> = () => {\n    return async (dispatch) => {\n        dispatch(fetchTokenBalances())\n    };\n};\n\nexport const fetchTokenBalances: ThunkCreator<Promise<any>> = () => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        const ethAccount = await signer.getAddress();\n        const networkID = getState().blockchain.networkID\n\n\n        const knownTokens = getKnownTokens(networkID).getTokens()\n        knownTokens.map(async token => {\n            const erc20 = new ERC20Controller(token.address, signer);\n            const balance = (await erc20.balanceOf(ethAccount)).toString();\n            const decimals = parseInt((await erc20.getDecimals()).toString())\n\n            let tokenValue = (await getTokenValue(signer, token.address, decimals))[1]\n\n            const totalSupply = await getTokenTotalSupply(signer, token.address, decimals);\n\n            const burned = await getBalance(signer, token.address, process.env.NULL_ADDRESS, decimals);\n\n            const tokenSwapAllowance = await getAllowance(signer, token.address, process.env.GSN_TOKEN_SWAP, decimals);\n\n\n\n            dispatch(setTokenBalance({\n                token,\n                balance,\n                networkID: networkID,\n                uniswapValue: tokenValue.toString(),\n                totalSupply,\n                burned,\n                tokenSwapAllowance\n            }));\n        })\n    }\n}\n\n\nexport const setAllowance: ThunkCreator<Promise<any>> = (\n    tokenAddress: string,\n    amount: string,\n    to: string\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        try {\n            return approveTokens(signer, tokenAddress, to, amount);\n        } catch (e) {\n            console.log(e)\n        }\n    }\n}\n\n\nexport const swapTokens: ThunkCreator<Promise<any>> = (\n    token: Token,\n    amount: string\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const gsnProvider = getState().blockchain.gsnProvider;\n        const minGas = getState().blockchain.paymaster.minGas;\n        const signer = web3Wrapper.getSigner()\n        return swap(signer, gsnProvider, token, amount, minGas.toString());\n    }\n}\n\nexport const reviewSwap: ThunkCreator<Promise<any>> = (\n    amount: string,\n    token: Token\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        return getTokenToEthOutput(signer, amount, token, process.env.UNISWAP_WETH)\n    }\n}\n\nexport const setPaymasterMinBalance: ThunkCreator<Promise<any>> = (\n    amount: string\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        return setMinBalance(signer, amount);\n    }\n}\n\nexport const setPaymasterPaymentToken: ThunkCreator<Promise<any>> = (\n    address: string\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        return setPaymentToken(signer, address);\n    }\n}\n\nexport const setPaymasterFee: ThunkCreator<Promise<any>> = (\n    amount: string\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        return setFee(signer, amount);\n    }\n}\n\nexport const setWhitelist: ThunkCreator<Promise<any>> = (\n    address: string,\n    whitelist: boolean\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        return whitelistToken(signer, address, whitelist);\n    }\n}\n\nexport const setPaymasterGasUsedByPost: ThunkCreator<Promise<any>> = (\n    amount: string\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        return setGasUsedByPost(signer, amount);\n    }\n}\n\nexport const setPamasterMinGas: ThunkCreator<Promise<any>> = (\n    amount: string\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        return setMinGas(signer, amount);\n    }\n}\n\nexport const setPaymasterTarget: ThunkCreator<Promise<any>> = (\n    amount: string\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        return setTarget(signer, amount);\n    }\n}\n\nexport const setPaymasterRelayHub: ThunkCreator<Promise<any>> = (\n    amount: string\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        return setRelayHub(signer, amount);\n    }\n}\n\nexport const setPaymasterForwarder: ThunkCreator<Promise<any>> = (\n    amount: string\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        return setForwarder(signer, amount);\n    }\n}\n\n\nexport const withdrawPaymaster: ThunkCreator<Promise<any>> = (\n    amount: string,\n    receiver: string\n) => {\n    return async (dispatch, getState, { getWeb3Wrapper }) => {\n        const web3Wrapper = await getWeb3Wrapper();\n        const signer = web3Wrapper.getSigner()\n        return withdrawFromRelayHub(signer, amount, receiver);\n    }\n}"]},"metadata":{},"sourceType":"module"}