// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface IProduce {

    event SetPermissionsContract(address indexed permissionsContract);
    event SetSTN721ManagerContract(address indexed stn721ManagerContract);
    event ProductionEvent(address indexed companyAddress, address indexed stn721Address, bytes32 dbId, uint256 numOfTokens);
    event ValidationEvent(address indexed companyAddress, uint256 entry);

    struct ProduceData {
        address company;
        address signatorie;
        address stn721Address;
        uint256[] tokenIds;
        uint256 timestamp;
        address[] involvedCompanies;
        bytes32 dbId;
    }

    struct Validation {
        address company;
        address signatorie;
        uint256 timestamp;
    }

    function setPermissionsContract(address _permissions) external;

    function setSTN721ManagerContract(address _stn721Manager) external;

    function produce(
        uint256[] calldata _tokenIds, 
        bool _divisible,
        address _stn721Address, 
        address _companyAddress,
        address[] calldata _involvedCompanies,
        bytes32 _dbId
    ) external;

    /** @dev tokens minted go to owner of token */
    function produceChild(
        uint256[] calldata _tokenIds, 
        bool _divisible,
        address _stn721Address, 
        address _companyAddress,
        address[] calldata _involvedCompanies,
        bytes32 _dbId
    ) external;

    function createSTN721Child(
        address _companyAddress,
        address _stn721Parent, 
        uint256 _tokenId, 
        string memory _name, 
        string memory _symbol
    ) external;

    function validateEntry(uint256 _entry, address _companyAddress) external;

    /**Getters */
    function getEntriesByCompany(address _company) external view returns(uint256[] memory);

    function getEntriesByUser(address _user) external view returns(uint256[] memory);

    function getEntryData(uint256 _pos) external view returns(ProduceData memory);

    function getNumOfValidations(uint256 _entry) external view returns (uint256);

    function getValidation(uint256 _entry, uint256 _pos) external view returns (Validation memory);
}