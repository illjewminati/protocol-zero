{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/common/steps_modal/admin_set_min_balance_step.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getStepsModalCurrentStep } from '../../../store/ui/selectors';\nimport { BaseStepModal } from './base_step_modal';\nimport { initBalances as _initBalances, setPaymasterMinBalance } from '../../../store/actions';\nimport { getWeb3Wrapper } from '../../../services/web3_wrapper';\n\nvar SetMinBalanceStep = /*#__PURE__*/function (_React$Component) {\n  _inherits(SetMinBalanceStep, _React$Component);\n\n  var _super = _createSuper(SetMinBalanceStep);\n\n  function SetMinBalanceStep() {\n    var _this;\n\n    _classCallCheck(this, SetMinBalanceStep);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var _this$props = _this.props,\n          buildStepsProgress = _this$props.buildStepsProgress,\n          step = _this$props.step;\n      var amount = step.amount;\n      var title = \"Set \".concat(amount, \" ETH Min Balance\");\n      var confirmCaption = \"Confirm on Metamask Send Transaction\";\n      var loadingCaption = \"Sending Transaction\";\n      var doneCaption = \"Transaction Mined\";\n      var errorCaption = \"Failed to Send Transaction\";\n      var loadingFooterCaption = \"Waiting for confirmation...\";\n      var doneFooterCaption = \"Sent\";\n      return /*#__PURE__*/_jsxDEV(BaseStepModal, {\n        step: step,\n        title: title,\n        confirmCaption: confirmCaption,\n        loadingCaption: loadingCaption,\n        doneCaption: doneCaption,\n        errorCaption: errorCaption,\n        loadingFooterCaption: loadingFooterCaption,\n        doneFooterCaption: doneFooterCaption,\n        buildStepsProgress: buildStepsProgress,\n        estimatedTxTimeMs: 30000,\n        runAction: _this._approveTokens,\n        showPartialProgress: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, _assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_approveTokens\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var onLoading, onDone, onError, _this$props2, step, onSend, initBalances, web3Wrapper, contractTransaction, contractReceipt;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                onLoading = _ref.onLoading, onDone = _ref.onDone, onError = _ref.onError;\n                _this$props2 = _this.props, step = _this$props2.step, onSend = _this$props2.onSend, initBalances = _this$props2.initBalances;\n                _context.next = 4;\n                return getWeb3Wrapper();\n\n              case 4:\n                web3Wrapper = _context.sent;\n                _context.prev = 5;\n                _context.next = 8;\n                return onSend(step.amount);\n\n              case 8:\n                contractTransaction = _context.sent;\n                onLoading();\n                _context.next = 12;\n                return contractTransaction.wait();\n\n              case 12:\n                contractReceipt = _context.sent;\n                _context.next = 15;\n                return web3Wrapper.waitForTransaction(contractReceipt.transactionHash);\n\n              case 15:\n                initBalances();\n                onDone();\n                _context.next = 23;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t0 = _context[\"catch\"](5);\n                console.log(_context.t0);\n                onError(_context.t0);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 19]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  return SetMinBalanceStep;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    step: getStepsModalCurrentStep(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSend: function onSend(amount) {\n      return dispatch(setPaymasterMinBalance(amount));\n    },\n    initBalances: function initBalances() {\n      return dispatch(_initBalances());\n    }\n  };\n};\n\nvar SetMinBalanceStepContainer = connect(mapStateToProps, mapDispatchToProps)(SetMinBalanceStep);\nexport { SetMinBalanceStep, SetMinBalanceStepContainer };","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/common/steps_modal/admin_set_min_balance_step.tsx"],"names":["React","connect","getStepsModalCurrentStep","BaseStepModal","initBalances","setPaymasterMinBalance","getWeb3Wrapper","SetMinBalanceStep","props","buildStepsProgress","step","amount","title","confirmCaption","loadingCaption","doneCaption","errorCaption","loadingFooterCaption","doneFooterCaption","_approveTokens","onLoading","onDone","onError","onSend","web3Wrapper","contractTransaction","wait","contractReceipt","waitForTransaction","transactionHash","console","log","Component","mapStateToProps","state","mapDispatchToProps","dispatch","SetMinBalanceStepContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getStepsModalCurrentStep } from '../../../store/ui/selectors';\nimport { StoreState } from '../../../types/store';\nimport { BaseStepModal } from './base_step_modal';\nimport { StepItem } from './steps_progress';\nimport { BigNumberish, ContractReceipt, ContractTransaction } from 'ethers';\nimport { initBalances, setAllowance, setPaymasterMinBalance, stepsModalAdvanceStep } from '../../../store/actions';\nimport { StepSetMinBalance } from '../../../types/steps-modal';\nimport { getWeb3Wrapper } from '../../../services/web3_wrapper';\n\ninterface OwnProps {\n    buildStepsProgress: (currentStepItem: StepItem) => StepItem[];\n}\ninterface StateProps {\n    step: StepSetMinBalance;\n}\n\ninterface DispatchProps {\n    onSend: (\n        amount: string\n    ) => Promise<any>;\n    initBalances: () => any\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass SetMinBalanceStep extends React.Component<Props> {\n    public render = () => {\n        const { buildStepsProgress, step } = this.props;\n        const { amount } = step;\n\n        const title = `Set ${amount} ETH Min Balance`;\n        const confirmCaption = `Confirm on Metamask Send Transaction`;\n        const loadingCaption = \"Sending Transaction\";\n        const doneCaption = \"Transaction Mined\";\n        const errorCaption = `Failed to Send Transaction`;\n        const loadingFooterCaption = `Waiting for confirmation...`;\n        const doneFooterCaption = `Sent`;\n\n        return (\n            <BaseStepModal\n                step={step}\n                title={title}\n                confirmCaption={confirmCaption}\n                loadingCaption={loadingCaption}\n                doneCaption={doneCaption}\n                errorCaption={errorCaption}\n                loadingFooterCaption={loadingFooterCaption}\n                doneFooterCaption={doneFooterCaption}\n                buildStepsProgress={buildStepsProgress}\n                estimatedTxTimeMs={30000}\n                runAction={this._approveTokens}\n                showPartialProgress={true}\n            />\n        );\n    };\n\n    private readonly _approveTokens = async ({ onLoading, onDone, onError }: any) => {\n        const { step, onSend, initBalances } = this.props;\n\n        const web3Wrapper = await getWeb3Wrapper();\n\n        try {\n            const contractTransaction: ContractTransaction = await onSend(step.amount);\n            onLoading();\n    \n            const contractReceipt: ContractReceipt = await contractTransaction.wait();\n            await web3Wrapper.waitForTransaction(contractReceipt.transactionHash);\n            initBalances()\n            onDone()\n        } catch(e) {\n            console.log(e)\n            onError(e)\n        }\n\n    };\n}\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n    return {\n        step: getStepsModalCurrentStep(state) as StepSetMinBalance,\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => {\n    return {\n        onSend: (amount: string) => \n            dispatch(setPaymasterMinBalance(amount)),\n        initBalances: () => dispatch(initBalances())\n    }\n}\n\nconst SetMinBalanceStepContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SetMinBalanceStep);\n\nexport { SetMinBalanceStep, SetMinBalanceStepContainer };\n"]},"metadata":{},"sourceType":"module"}