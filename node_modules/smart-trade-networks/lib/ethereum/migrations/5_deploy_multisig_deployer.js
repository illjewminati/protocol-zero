const MultisigDeployer = artifacts.require('MultisigDeployer.sol');
const Proxy = artifacts.require('OwnedUpgradeabilityProxy.sol')
const abi = require('ethereumjs-abi');


function encodeCall(name, args, values) {
	const methodId = abi.methodID(name, args).toString('hex');
	const params = abi.rawEncode(args, values).toString('hex');
	return '0x' + methodId + params;
}

module.exports = async deployer => {

	/** Steps */

	/** 1: Deploy contract to upgrade */
	await deployer.deploy(MultisigDeployer);
	/** 1b: Deploy upgradabiltiy */
    await deployer.deploy(Proxy);

	// /** 2: Fetch deployed contract address */
	const multisigDeployed = await MultisigDeployer.deployed();
    const proxy = await Proxy.deployed();


	// /** 4: Encode data to initialize */
	const initData = encodeCall('initialize', ['address'], ["0x23C6599aAdF44Be7cbaD6D9051bb4C2255b2f713"]);

	// /** 5: Upgrade proxy contract */
	await proxy.upgradeToAndCall(multisigDeployed.address, initData);

    const multisigContract = await MultisigDeployer.at(proxy.address);
    const owner = await multisigContract.owner();
    console.log("owner", owner)

	
}