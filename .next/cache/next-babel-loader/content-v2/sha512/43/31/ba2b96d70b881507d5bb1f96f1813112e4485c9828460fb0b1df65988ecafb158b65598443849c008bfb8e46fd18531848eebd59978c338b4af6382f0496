{"ast":null,"code":"import _defineProperty from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/common/pending_time.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nexport var PendingTime = function PendingTime(_ref) {\n  var estimatedTimeMs = _ref.estimatedTimeMs,\n      now = _ref.now,\n      startTime = _ref.startTime,\n      restProps = _objectWithoutProperties(_ref, [\"estimatedTimeMs\", \"now\", \"startTime\"]);\n\n  var estimatedSeconds = Math.round(estimatedTimeMs / 1000);\n  var finishTime = new Date(startTime.valueOf() + estimatedTimeMs);\n  var totalPendingSeconds = now < finishTime ? Math.round((finishTime.valueOf() - now.valueOf()) / 1000) : 0;\n  var pendingMinutes = Math.floor(totalPendingSeconds / 60);\n  var pendingSeconds = totalPendingSeconds % 60;\n  var pendingMinutesStr = pendingMinutes < 10 ? \"0\".concat(pendingMinutes) : pendingMinutes.toString();\n  var pendingSecondsStr = pendingSeconds < 10 ? \"0\".concat(pendingSeconds) : pendingSeconds.toString();\n  return /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({\n    className: \"pending-time-wrapper\"\n  }, restProps), {}, {\n    children: [pendingMinutesStr, \":\", pendingSecondsStr, \" (Est. \", estimatedSeconds, \" seconds)\"]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, _this);\n};\n_c = PendingTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"PendingTime\");","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/common/pending_time.tsx"],"names":["React","PendingTime","estimatedTimeMs","now","startTime","restProps","estimatedSeconds","Math","round","finishTime","Date","valueOf","totalPendingSeconds","pendingMinutes","floor","pendingSeconds","pendingMinutesStr","toString","pendingSecondsStr"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,OAAO,IAAMC,WAA4B,GAAG,SAA/BA,WAA+B,OAAuD;AAAA,MAApDC,eAAoD,QAApDA,eAAoD;AAAA,MAAnCC,GAAmC,QAAnCA,GAAmC;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;AAAA,MAAhBC,SAAgB;;AAC/F,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWN,eAAe,GAAG,IAA7B,CAAzB;AACA,MAAMO,UAAU,GAAG,IAAIC,IAAJ,CAASN,SAAS,CAACO,OAAV,KAAsBT,eAA/B,CAAnB;AAEA,MAAMU,mBAAmB,GAAGT,GAAG,GAAGM,UAAN,GAAmBF,IAAI,CAACC,KAAL,CAAW,CAACC,UAAU,CAACE,OAAX,KAAuBR,GAAG,CAACQ,OAAJ,EAAxB,IAAyC,IAApD,CAAnB,GAA+E,CAA3G;AAEA,MAAME,cAAc,GAAGN,IAAI,CAACO,KAAL,CAAWF,mBAAmB,GAAG,EAAjC,CAAvB;AACA,MAAMG,cAAc,GAAGH,mBAAmB,GAAG,EAA7C;AAEA,MAAMI,iBAAiB,GAAGH,cAAc,GAAG,EAAjB,cAA0BA,cAA1B,IAA6CA,cAAc,CAACI,QAAf,EAAvE;AACA,MAAMC,iBAAiB,GAAGH,cAAc,GAAG,EAAjB,cAA0BA,cAA1B,IAA6CA,cAAc,CAACE,QAAf,EAAvE;AAEA,sBACI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA2CZ,SAA3C;AAAA,eACKW,iBADL,OACyBE,iBADzB,aACmDZ,gBADnD;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAjBM;KAAML,W","sourcesContent":["import React from 'react';\n\ninterface Props {\n    estimatedTimeMs: number;\n    now: Date;\n    startTime: Date;\n}\n\nexport const PendingTime: React.FC<Props> = ({ estimatedTimeMs, now, startTime, ...restProps }) => {\n    const estimatedSeconds = Math.round(estimatedTimeMs / 1000);\n    const finishTime = new Date(startTime.valueOf() + estimatedTimeMs);\n\n    const totalPendingSeconds = now < finishTime ? Math.round((finishTime.valueOf() - now.valueOf()) / 1000) : 0;\n\n    const pendingMinutes = Math.floor(totalPendingSeconds / 60);\n    const pendingSeconds = totalPendingSeconds % 60;\n\n    const pendingMinutesStr = pendingMinutes < 10 ? `0${pendingMinutes}` : pendingMinutes.toString();\n    const pendingSecondsStr = pendingSeconds < 10 ? `0${pendingSeconds}` : pendingSeconds.toString();\n\n    return (\n        <span className=\"pending-time-wrapper\" {...restProps}>\n            {pendingMinutesStr}:{pendingSecondsStr} (Est. {estimatedSeconds} seconds)\n        </span>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}