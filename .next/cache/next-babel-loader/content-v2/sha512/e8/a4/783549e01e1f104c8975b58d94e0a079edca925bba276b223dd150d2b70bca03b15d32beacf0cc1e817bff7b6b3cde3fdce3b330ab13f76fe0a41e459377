{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/common/steps_modal/steps_modal.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport { StepKind } from '../../../types/steps-modal';\nimport { getStepTitle } from '../../../util/steps';\nimport { CloseModalButton } from '../icons/close_modal_button';\nimport { ModalContent } from './steps_common';\nimport { getStepsModalCurrentStep, getStepsModalDoneSteps, getStepsModalPendingSteps } from '../../../store/ui/selectors';\nimport { stepsModalReset } from '../../../store/actions';\nimport { AllowanceStepContainer } from './allowance_step';\nimport { SwapTokensStepContainer } from './swap_step';\nimport { SetMinBalanceStepContainer } from './admin_set_min_balance_step';\nimport { SetPaymentTokenStepContainer } from './admin_set_payment_token';\nimport { SetFeeStepStepContainer } from './admin_set_fee';\nimport { WhitelistTokenStepContainer } from './admin_whitelist_token_step';\nimport { SetGasUsedByPostStepContainer } from './admin_set_gas_used_by_post_step';\nimport { SetMinGasStepContainer } from './admin_set_min_gas';\nimport { SetTargetStepContainer } from './admin_set_target';\nimport { SetRelayHubStepContainer } from './admin_set_relay_hub_step';\nimport { SetForwarderStepContainer } from './admin_set_forwarder_step';\nimport { WithdrawStepContainer } from './admin_withdraw_step';\nconst modalThemeStyle = {\n  content: {\n    backgroundColor: '#fff',\n    borderColor: '#dedede',\n    bottom: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: '0',\n    left: 'auto',\n    maxHeight: '90%',\n    minWidth: '350px',\n    overflow: 'hidden',\n    padding: '16px',\n    position: 'relative',\n    right: 'auto',\n    top: 'auto'\n  },\n  overlay: {\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    display: 'flex',\n    justifyContent: 'center',\n    zIndex: '12345'\n  }\n};\n\nclass StepsModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"render\", () => {\n      const {\n        currentStep,\n        doneSteps,\n        pendingSteps,\n        reset\n      } = this.props;\n      const isOpen = currentStep !== null;\n\n      const buildStepsProgress = currentStepItem => [...doneSteps.map(doneStep => ({\n        title: getStepTitle(doneStep),\n        progress: 100,\n        active: false,\n        isLong: false\n      })), currentStepItem, ...pendingSteps.map(pendingStep => ({\n        title: getStepTitle(pendingStep),\n        progress: 0,\n        active: false,\n        isLong: false\n      }))]; // this is used to avoid an issue with two consecutive steps of the same kind\n\n\n      const stepIndex = doneSteps.length;\n      return /*#__PURE__*/_jsxDEV(Modal, {\n        ariaHideApp: false,\n        isOpen: isOpen,\n        style: modalThemeStyle,\n        children: [/*#__PURE__*/_jsxDEV(CloseModalButton, {\n          onClick: reset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [currentStep && currentStep.kind === StepKind.Allowance && /*#__PURE__*/_jsxDEV(AllowanceStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), currentStep && currentStep.kind === StepKind.Swap && /*#__PURE__*/_jsxDEV(SwapTokensStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), currentStep && currentStep.kind === StepKind.SetMinBalance && /*#__PURE__*/_jsxDEV(SetMinBalanceStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), currentStep && currentStep.kind === StepKind.SetPaymentToken && /*#__PURE__*/_jsxDEV(SetPaymentTokenStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), currentStep && currentStep.kind === StepKind.SetFee && /*#__PURE__*/_jsxDEV(SetFeeStepStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), currentStep && currentStep.kind === StepKind.Whitelist && /*#__PURE__*/_jsxDEV(WhitelistTokenStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), currentStep && currentStep.kind === StepKind.SetGasUsedByPost && /*#__PURE__*/_jsxDEV(SetGasUsedByPostStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), currentStep && currentStep.kind === StepKind.SetMinGas && /*#__PURE__*/_jsxDEV(SetMinGasStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), currentStep && currentStep.kind === StepKind.SetTarget && /*#__PURE__*/_jsxDEV(SetTargetStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), currentStep && currentStep.kind === StepKind.SetTarget && /*#__PURE__*/_jsxDEV(SetRelayHubStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), currentStep && currentStep.kind === StepKind.SetForwarder && /*#__PURE__*/_jsxDEV(SetForwarderStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), currentStep && currentStep.kind === StepKind.Withdraw && /*#__PURE__*/_jsxDEV(WithdrawStepContainer, {\n            buildStepsProgress: buildStepsProgress\n          }, stepIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentStep: getStepsModalCurrentStep(state),\n    doneSteps: getStepsModalDoneSteps(state),\n    pendingSteps: getStepsModalPendingSteps(state)\n  };\n};\n\nconst StepsModalContainer = connect(mapStateToProps, {\n  reset: stepsModalReset\n})(StepsModal);\nexport { StepsModal, StepsModalContainer };","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/common/steps_modal/steps_modal.tsx"],"names":["React","connect","Modal","StepKind","getStepTitle","CloseModalButton","ModalContent","getStepsModalCurrentStep","getStepsModalDoneSteps","getStepsModalPendingSteps","stepsModalReset","AllowanceStepContainer","SwapTokensStepContainer","SetMinBalanceStepContainer","SetPaymentTokenStepContainer","SetFeeStepStepContainer","WhitelistTokenStepContainer","SetGasUsedByPostStepContainer","SetMinGasStepContainer","SetTargetStepContainer","SetRelayHubStepContainer","SetForwarderStepContainer","WithdrawStepContainer","modalThemeStyle","content","backgroundColor","borderColor","bottom","display","flexDirection","flexGrow","left","maxHeight","minWidth","overflow","padding","position","right","top","overlay","alignItems","justifyContent","zIndex","StepsModal","Component","currentStep","doneSteps","pendingSteps","reset","props","isOpen","buildStepsProgress","currentStepItem","map","doneStep","title","progress","active","isLong","pendingStep","stepIndex","length","kind","Allowance","Swap","SetMinBalance","SetPaymentToken","SetFee","Whitelist","SetGasUsedByPost","SetMinGas","SetTarget","SetForwarder","Withdraw","mapStateToProps","state","StepsModalContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal, { Styles } from 'react-modal';\n\nimport { Step, StepKind } from '../../../types/steps-modal';\nimport { getStepTitle } from '../../../util/steps';\nimport { StepItem } from './steps_progress';\nimport { CloseModalButton } from '../icons/close_modal_button';\nimport { ModalContent } from './steps_common';\nimport { StoreState } from '../../../types/store';\nimport { getStepsModalCurrentStep, getStepsModalDoneSteps, getStepsModalPendingSteps } from '../../../store/ui/selectors'\nimport { stepsModalReset } from '../../../store/actions';\nimport { AllowanceStepContainer } from './allowance_step';\nimport { SwapTokensStepContainer } from './swap_step';\nimport { SetMinBalanceStepContainer } from './admin_set_min_balance_step';\nimport { SetPaymentTokenStepContainer } from './admin_set_payment_token';\nimport { SetFeeStepStepContainer } from './admin_set_fee';\nimport { WhitelistTokenStepContainer } from './admin_whitelist_token_step';\nimport { SetGasUsedByPostStepContainer } from './admin_set_gas_used_by_post_step';\nimport { SetMinGasStepContainer } from './admin_set_min_gas';\nimport { SetTargetStepContainer } from './admin_set_target';\nimport { SetRelayHubStepContainer } from './admin_set_relay_hub_step';\nimport { SetForwarderStepContainer } from './admin_set_forwarder_step';\nimport { WithdrawStepContainer } from './admin_withdraw_step';\n\nconst modalThemeStyle = {\n    content: {\n        backgroundColor: '#fff',\n        borderColor: '#dedede',\n        bottom: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: '0',\n        left: 'auto',\n        maxHeight: '90%',\n        minWidth: '350px',\n        overflow: 'hidden',\n        padding: '16px',\n        position: 'relative',\n        right: 'auto',\n        top: 'auto',\n    },\n    overlay: {\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.4)',\n        display: 'flex',\n        justifyContent: 'center',\n        zIndex: '12345',\n    },\n};\n\ninterface StateProps {\n    currentStep: Step | null;\n    doneSteps: Step[];\n    pendingSteps: Step[];\n}\n\ninterface DispatchProps {\n    reset: () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass StepsModal extends React.Component<Props> {\n    public render = () => {\n        const { currentStep, doneSteps, pendingSteps, reset } = this.props;\n        const isOpen = currentStep !== null;\n\n        const buildStepsProgress = (currentStepItem: StepItem): StepItem[] => [\n            ...doneSteps.map(doneStep => ({\n                title: getStepTitle(doneStep),\n                progress: 100,\n                active: false,\n                isLong: false,\n            })),\n            currentStepItem,\n            ...pendingSteps.map(pendingStep => ({\n                title: getStepTitle(pendingStep),\n                progress: 0,\n                active: false,\n                isLong: false,\n            })),\n        ];\n\n\n        // this is used to avoid an issue with two consecutive steps of the same kind\n        const stepIndex = doneSteps.length;\n\n        \n\n        return (\n            <Modal ariaHideApp={false} isOpen={isOpen} style={modalThemeStyle as Styles}>\n                <CloseModalButton onClick={reset} />\n                    <ModalContent >\n\n                    {currentStep && currentStep.kind === StepKind.Allowance && (\n                        <AllowanceStepContainer key={stepIndex} buildStepsProgress={buildStepsProgress} />\n                    )}\n\n                    {currentStep && currentStep.kind === StepKind.Swap && (\n                        <SwapTokensStepContainer key={stepIndex} buildStepsProgress={buildStepsProgress} />\n                    )}\n\n                    {currentStep && currentStep.kind === StepKind.SetMinBalance && (\n                        <SetMinBalanceStepContainer key={stepIndex} buildStepsProgress={buildStepsProgress} />\n                    )}\n\n                    {currentStep && currentStep.kind === StepKind.SetPaymentToken && (\n                        <SetPaymentTokenStepContainer key={stepIndex} buildStepsProgress={buildStepsProgress} />\n                    )}\n\n                    {currentStep && currentStep.kind === StepKind.SetFee && (\n                        <SetFeeStepStepContainer key={stepIndex} buildStepsProgress={buildStepsProgress} />\n                    )}\n\n                    {currentStep && currentStep.kind === StepKind.Whitelist && (\n                        <WhitelistTokenStepContainer key={stepIndex} buildStepsProgress={buildStepsProgress} />\n                    )}\n\n                    {currentStep && currentStep.kind === StepKind.SetGasUsedByPost && (\n                        <SetGasUsedByPostStepContainer key={stepIndex} buildStepsProgress={buildStepsProgress} />\n                    )}\n\n                    {currentStep && currentStep.kind === StepKind.SetMinGas && (\n                        <SetMinGasStepContainer key={stepIndex} buildStepsProgress={buildStepsProgress} />\n                    )}\n\n                    {currentStep && currentStep.kind === StepKind.SetTarget && (\n                        <SetTargetStepContainer key={stepIndex} buildStepsProgress={buildStepsProgress} />\n                    )}\n\n                    {currentStep && currentStep.kind === StepKind.SetTarget && (\n                        <SetRelayHubStepContainer key={stepIndex} buildStepsProgress={buildStepsProgress} />\n                    )}\n\n                    {currentStep && currentStep.kind === StepKind.SetForwarder && (\n                        <SetForwarderStepContainer key={stepIndex} buildStepsProgress={buildStepsProgress} />\n                    )}\n\n                    {currentStep && currentStep.kind === StepKind.Withdraw && (\n                        <WithdrawStepContainer key={stepIndex} buildStepsProgress={buildStepsProgress} />\n                    )}\n\n                       \n                    </ModalContent>\n            </Modal>\n        );\n    };\n}\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n    return {\n        currentStep: getStepsModalCurrentStep(state),\n        doneSteps: getStepsModalDoneSteps(state),\n        pendingSteps: getStepsModalPendingSteps(state),\n    };\n};\n\nconst StepsModalContainer = connect(mapStateToProps, { reset: stepsModalReset })(StepsModal)\n\n\nexport { StepsModal, StepsModalContainer };\n"]},"metadata":{},"sourceType":"module"}