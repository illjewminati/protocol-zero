import { Signer, BytesLike } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { ContractFactory, Overrides } from "@ethersproject/contracts";
import type { Company } from "../Company";
export declare class Company__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(_companyOwner: string, _name: string, _ipfsLink: BytesLike, overrides?: Overrides): Promise<Company>;
    getDeployTransaction(_companyOwner: string, _name: string, _ipfsLink: BytesLike, overrides?: Overrides): TransactionRequest;
    attach(address: string): Company;
    connect(signer: Signer): Company__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): Company;
}
