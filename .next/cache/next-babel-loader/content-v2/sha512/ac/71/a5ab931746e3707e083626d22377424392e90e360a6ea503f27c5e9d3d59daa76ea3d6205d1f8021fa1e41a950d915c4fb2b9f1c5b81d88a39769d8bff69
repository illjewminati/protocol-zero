{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { utils } from \"ethers\";\nimport { loadTokenSwapContract } from \"./token_swap\";\nexport var swap = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(signer, gsnProvider, token, amount, minGas) {\n    var tSwap, amountBN;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return loadTokenSwapContract(signer);\n\n          case 2:\n            tSwap = _context.sent;\n            amountBN = utils.parseUnits(amount, token.decimals);\n            return _context.abrupt(\"return\", tSwap.connect(gsnProvider.getSigner()).swapTokensForEth(token.address, amountBN, {\n              gasLimit: minGas\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function swap(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}