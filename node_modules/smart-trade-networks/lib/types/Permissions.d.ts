/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface PermissionsInterface extends ethers.utils.Interface {
  functions: {
    "ACCEPT()": FunctionFragment;
    "CITE()": FunctionFragment;
    "CONSUME()": FunctionFragment;
    "DELIVER_SERVICE()": FunctionFragment;
    "DROP_OFF()": FunctionFragment;
    "LOWER()": FunctionFragment;
    "MODIFY()": FunctionFragment;
    "MOVE()": FunctionFragment;
    "PICK_UP()": FunctionFragment;
    "PRODUCE()": FunctionFragment;
    "RAISE()": FunctionFragment;
    "TRANSFER()": FunctionFragment;
    "TRANSFER_ALL_RIGHTS()": FunctionFragment;
    "TRANSFER_CUSTODY()": FunctionFragment;
    "USE()": FunctionFragment;
    "WORK()": FunctionFragment;
    "owner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "setCompaniesContract(address)": FunctionFragment;
    "setPermission(uint8,address,address,bool)": FunctionFragment;
    "setPermissions(uint8[],address,address,bool)": FunctionFragment;
    "setBoolPermissions(bool[16],address,address)": FunctionFragment;
    "getPermission(uint8,address,address,address)": FunctionFragment;
    "getPermissions(address,address)": FunctionFragment;
    "isSignerApproved(address,address)": FunctionFragment;
    "getCompaniesContract()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "ACCEPT", values?: undefined): string;
  encodeFunctionData(functionFragment: "CITE", values?: undefined): string;
  encodeFunctionData(functionFragment: "CONSUME", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "DELIVER_SERVICE",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "DROP_OFF", values?: undefined): string;
  encodeFunctionData(functionFragment: "LOWER", values?: undefined): string;
  encodeFunctionData(functionFragment: "MODIFY", values?: undefined): string;
  encodeFunctionData(functionFragment: "MOVE", values?: undefined): string;
  encodeFunctionData(functionFragment: "PICK_UP", values?: undefined): string;
  encodeFunctionData(functionFragment: "PRODUCE", values?: undefined): string;
  encodeFunctionData(functionFragment: "RAISE", values?: undefined): string;
  encodeFunctionData(functionFragment: "TRANSFER", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "TRANSFER_ALL_RIGHTS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "TRANSFER_CUSTODY",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "USE", values?: undefined): string;
  encodeFunctionData(functionFragment: "WORK", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setCompaniesContract",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setPermission",
    values: [BigNumberish, string, string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setPermissions",
    values: [BigNumberish[], string, string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setBoolPermissions",
    values: [
      [
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean
      ],
      string,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getPermission",
    values: [BigNumberish, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getPermissions",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isSignerApproved",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getCompaniesContract",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "ACCEPT", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CITE", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CONSUME", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "DELIVER_SERVICE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "DROP_OFF", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "LOWER", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "MODIFY", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "MOVE", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PICK_UP", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PRODUCE", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "RAISE", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "TRANSFER", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "TRANSFER_ALL_RIGHTS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "TRANSFER_CUSTODY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "USE", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "WORK", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCompaniesContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPermission",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPermissions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBoolPermissions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPermission",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPermissions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isSignerApproved",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCompaniesContract",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
    "SetCompaniesContract(address)": EventFragment;
    "SetPermission(uint8,address,address,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetCompaniesContract"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetPermission"): EventFragment;
}

export class Permissions extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: PermissionsInterface;

  functions: {
    ACCEPT(overrides?: CallOverrides): Promise<[number]>;

    "ACCEPT()"(overrides?: CallOverrides): Promise<[number]>;

    CITE(overrides?: CallOverrides): Promise<[number]>;

    "CITE()"(overrides?: CallOverrides): Promise<[number]>;

    CONSUME(overrides?: CallOverrides): Promise<[number]>;

    "CONSUME()"(overrides?: CallOverrides): Promise<[number]>;

    DELIVER_SERVICE(overrides?: CallOverrides): Promise<[number]>;

    "DELIVER_SERVICE()"(overrides?: CallOverrides): Promise<[number]>;

    DROP_OFF(overrides?: CallOverrides): Promise<[number]>;

    "DROP_OFF()"(overrides?: CallOverrides): Promise<[number]>;

    LOWER(overrides?: CallOverrides): Promise<[number]>;

    "LOWER()"(overrides?: CallOverrides): Promise<[number]>;

    MODIFY(overrides?: CallOverrides): Promise<[number]>;

    "MODIFY()"(overrides?: CallOverrides): Promise<[number]>;

    MOVE(overrides?: CallOverrides): Promise<[number]>;

    "MOVE()"(overrides?: CallOverrides): Promise<[number]>;

    PICK_UP(overrides?: CallOverrides): Promise<[number]>;

    "PICK_UP()"(overrides?: CallOverrides): Promise<[number]>;

    PRODUCE(overrides?: CallOverrides): Promise<[number]>;

    "PRODUCE()"(overrides?: CallOverrides): Promise<[number]>;

    RAISE(overrides?: CallOverrides): Promise<[number]>;

    "RAISE()"(overrides?: CallOverrides): Promise<[number]>;

    TRANSFER(overrides?: CallOverrides): Promise<[number]>;

    "TRANSFER()"(overrides?: CallOverrides): Promise<[number]>;

    TRANSFER_ALL_RIGHTS(overrides?: CallOverrides): Promise<[number]>;

    "TRANSFER_ALL_RIGHTS()"(overrides?: CallOverrides): Promise<[number]>;

    TRANSFER_CUSTODY(overrides?: CallOverrides): Promise<[number]>;

    "TRANSFER_CUSTODY()"(overrides?: CallOverrides): Promise<[number]>;

    USE(overrides?: CallOverrides): Promise<[number]>;

    "USE()"(overrides?: CallOverrides): Promise<[number]>;

    WORK(overrides?: CallOverrides): Promise<[number]>;

    "WORK()"(overrides?: CallOverrides): Promise<[number]>;

    /**
     * Returns the address of the current owner.
     */
    owner(overrides?: CallOverrides): Promise<[string]>;

    /**
     * Returns the address of the current owner.
     */
    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    /**
     * Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.
     */
    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    /**
     * Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.
     */
    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    /**
     * Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.
     */
    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    /**
     * Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.
     */
    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    /**
     * Setters
     */
    setCompaniesContract(
      _companies: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    /**
     * Setters
     */
    "setCompaniesContract(address)"(
      _companies: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPermission(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPermission(uint8,address,address,bool)"(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPermissions(
      _permissions: BigNumberish[],
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPermissions(uint8[],address,address,bool)"(
      _permissions: BigNumberish[],
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setBoolPermissions(
      _permissions: [
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean
      ],
      _company: string,
      _nftAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setBoolPermissions(bool[16],address,address)"(
      _permissions: [
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean
      ],
      _company: string,
      _nftAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    /**
     * Getters
     */
    getPermission(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    /**
     * Getters
     */
    "getPermission(uint8,address,address,address)"(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getPermissions(
      _company: string,
      _nftAddress: string,
      overrides?: CallOverrides
    ): Promise<[boolean[]]>;

    "getPermissions(address,address)"(
      _company: string,
      _nftAddress: string,
      overrides?: CallOverrides
    ): Promise<[boolean[]]>;

    isSignerApproved(
      _company: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isSignerApproved(address,address)"(
      _company: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getCompaniesContract(overrides?: CallOverrides): Promise<[string]>;

    "getCompaniesContract()"(overrides?: CallOverrides): Promise<[string]>;
  };

  ACCEPT(overrides?: CallOverrides): Promise<number>;

  "ACCEPT()"(overrides?: CallOverrides): Promise<number>;

  CITE(overrides?: CallOverrides): Promise<number>;

  "CITE()"(overrides?: CallOverrides): Promise<number>;

  CONSUME(overrides?: CallOverrides): Promise<number>;

  "CONSUME()"(overrides?: CallOverrides): Promise<number>;

  DELIVER_SERVICE(overrides?: CallOverrides): Promise<number>;

  "DELIVER_SERVICE()"(overrides?: CallOverrides): Promise<number>;

  DROP_OFF(overrides?: CallOverrides): Promise<number>;

  "DROP_OFF()"(overrides?: CallOverrides): Promise<number>;

  LOWER(overrides?: CallOverrides): Promise<number>;

  "LOWER()"(overrides?: CallOverrides): Promise<number>;

  MODIFY(overrides?: CallOverrides): Promise<number>;

  "MODIFY()"(overrides?: CallOverrides): Promise<number>;

  MOVE(overrides?: CallOverrides): Promise<number>;

  "MOVE()"(overrides?: CallOverrides): Promise<number>;

  PICK_UP(overrides?: CallOverrides): Promise<number>;

  "PICK_UP()"(overrides?: CallOverrides): Promise<number>;

  PRODUCE(overrides?: CallOverrides): Promise<number>;

  "PRODUCE()"(overrides?: CallOverrides): Promise<number>;

  RAISE(overrides?: CallOverrides): Promise<number>;

  "RAISE()"(overrides?: CallOverrides): Promise<number>;

  TRANSFER(overrides?: CallOverrides): Promise<number>;

  "TRANSFER()"(overrides?: CallOverrides): Promise<number>;

  TRANSFER_ALL_RIGHTS(overrides?: CallOverrides): Promise<number>;

  "TRANSFER_ALL_RIGHTS()"(overrides?: CallOverrides): Promise<number>;

  TRANSFER_CUSTODY(overrides?: CallOverrides): Promise<number>;

  "TRANSFER_CUSTODY()"(overrides?: CallOverrides): Promise<number>;

  USE(overrides?: CallOverrides): Promise<number>;

  "USE()"(overrides?: CallOverrides): Promise<number>;

  WORK(overrides?: CallOverrides): Promise<number>;

  "WORK()"(overrides?: CallOverrides): Promise<number>;

  /**
   * Returns the address of the current owner.
   */
  owner(overrides?: CallOverrides): Promise<string>;

  /**
   * Returns the address of the current owner.
   */
  "owner()"(overrides?: CallOverrides): Promise<string>;

  /**
   * Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.
   */
  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  /**
   * Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.
   */
  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  /**
   * Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.
   */
  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  /**
   * Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.
   */
  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  /**
   * Setters
   */
  setCompaniesContract(
    _companies: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  /**
   * Setters
   */
  "setCompaniesContract(address)"(
    _companies: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPermission(
    _action: BigNumberish,
    _company: string,
    _nftAddress: string,
    _allow: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPermission(uint8,address,address,bool)"(
    _action: BigNumberish,
    _company: string,
    _nftAddress: string,
    _allow: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPermissions(
    _permissions: BigNumberish[],
    _company: string,
    _nftAddress: string,
    _allow: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPermissions(uint8[],address,address,bool)"(
    _permissions: BigNumberish[],
    _company: string,
    _nftAddress: string,
    _allow: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setBoolPermissions(
    _permissions: [
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean
    ],
    _company: string,
    _nftAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setBoolPermissions(bool[16],address,address)"(
    _permissions: [
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      boolean
    ],
    _company: string,
    _nftAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  /**
   * Getters
   */
  getPermission(
    _action: BigNumberish,
    _company: string,
    _nftAddress: string,
    _signer: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  /**
   * Getters
   */
  "getPermission(uint8,address,address,address)"(
    _action: BigNumberish,
    _company: string,
    _nftAddress: string,
    _signer: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getPermissions(
    _company: string,
    _nftAddress: string,
    overrides?: CallOverrides
  ): Promise<boolean[]>;

  "getPermissions(address,address)"(
    _company: string,
    _nftAddress: string,
    overrides?: CallOverrides
  ): Promise<boolean[]>;

  isSignerApproved(
    _company: string,
    _signer: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isSignerApproved(address,address)"(
    _company: string,
    _signer: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getCompaniesContract(overrides?: CallOverrides): Promise<string>;

  "getCompaniesContract()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    ACCEPT(overrides?: CallOverrides): Promise<number>;

    "ACCEPT()"(overrides?: CallOverrides): Promise<number>;

    CITE(overrides?: CallOverrides): Promise<number>;

    "CITE()"(overrides?: CallOverrides): Promise<number>;

    CONSUME(overrides?: CallOverrides): Promise<number>;

    "CONSUME()"(overrides?: CallOverrides): Promise<number>;

    DELIVER_SERVICE(overrides?: CallOverrides): Promise<number>;

    "DELIVER_SERVICE()"(overrides?: CallOverrides): Promise<number>;

    DROP_OFF(overrides?: CallOverrides): Promise<number>;

    "DROP_OFF()"(overrides?: CallOverrides): Promise<number>;

    LOWER(overrides?: CallOverrides): Promise<number>;

    "LOWER()"(overrides?: CallOverrides): Promise<number>;

    MODIFY(overrides?: CallOverrides): Promise<number>;

    "MODIFY()"(overrides?: CallOverrides): Promise<number>;

    MOVE(overrides?: CallOverrides): Promise<number>;

    "MOVE()"(overrides?: CallOverrides): Promise<number>;

    PICK_UP(overrides?: CallOverrides): Promise<number>;

    "PICK_UP()"(overrides?: CallOverrides): Promise<number>;

    PRODUCE(overrides?: CallOverrides): Promise<number>;

    "PRODUCE()"(overrides?: CallOverrides): Promise<number>;

    RAISE(overrides?: CallOverrides): Promise<number>;

    "RAISE()"(overrides?: CallOverrides): Promise<number>;

    TRANSFER(overrides?: CallOverrides): Promise<number>;

    "TRANSFER()"(overrides?: CallOverrides): Promise<number>;

    TRANSFER_ALL_RIGHTS(overrides?: CallOverrides): Promise<number>;

    "TRANSFER_ALL_RIGHTS()"(overrides?: CallOverrides): Promise<number>;

    TRANSFER_CUSTODY(overrides?: CallOverrides): Promise<number>;

    "TRANSFER_CUSTODY()"(overrides?: CallOverrides): Promise<number>;

    USE(overrides?: CallOverrides): Promise<number>;

    "USE()"(overrides?: CallOverrides): Promise<number>;

    WORK(overrides?: CallOverrides): Promise<number>;

    "WORK()"(overrides?: CallOverrides): Promise<number>;

    /**
     * Returns the address of the current owner.
     */
    owner(overrides?: CallOverrides): Promise<string>;

    /**
     * Returns the address of the current owner.
     */
    "owner()"(overrides?: CallOverrides): Promise<string>;

    /**
     * Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.
     */
    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    /**
     * Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.
     */
    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    /**
     * Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.
     */
    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    /**
     * Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.
     */
    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    /**
     * Setters
     */
    setCompaniesContract(
      _companies: string,
      overrides?: CallOverrides
    ): Promise<void>;

    /**
     * Setters
     */
    "setCompaniesContract(address)"(
      _companies: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setPermission(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPermission(uint8,address,address,bool)"(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setPermissions(
      _permissions: BigNumberish[],
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPermissions(uint8[],address,address,bool)"(
      _permissions: BigNumberish[],
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setBoolPermissions(
      _permissions: [
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean
      ],
      _company: string,
      _nftAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setBoolPermissions(bool[16],address,address)"(
      _permissions: [
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean
      ],
      _company: string,
      _nftAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    /**
     * Getters
     */
    getPermission(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    /**
     * Getters
     */
    "getPermission(uint8,address,address,address)"(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getPermissions(
      _company: string,
      _nftAddress: string,
      overrides?: CallOverrides
    ): Promise<boolean[]>;

    "getPermissions(address,address)"(
      _company: string,
      _nftAddress: string,
      overrides?: CallOverrides
    ): Promise<boolean[]>;

    isSignerApproved(
      _company: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isSignerApproved(address,address)"(
      _company: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getCompaniesContract(overrides?: CallOverrides): Promise<string>;

    "getCompaniesContract()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;

    SetCompaniesContract(companiesContract: string | null): EventFilter;

    SetPermission(
      action: null,
      company: string | null,
      nftAddress: string | null,
      allow: null
    ): EventFilter;
  };

  estimateGas: {
    ACCEPT(overrides?: CallOverrides): Promise<BigNumber>;

    "ACCEPT()"(overrides?: CallOverrides): Promise<BigNumber>;

    CITE(overrides?: CallOverrides): Promise<BigNumber>;

    "CITE()"(overrides?: CallOverrides): Promise<BigNumber>;

    CONSUME(overrides?: CallOverrides): Promise<BigNumber>;

    "CONSUME()"(overrides?: CallOverrides): Promise<BigNumber>;

    DELIVER_SERVICE(overrides?: CallOverrides): Promise<BigNumber>;

    "DELIVER_SERVICE()"(overrides?: CallOverrides): Promise<BigNumber>;

    DROP_OFF(overrides?: CallOverrides): Promise<BigNumber>;

    "DROP_OFF()"(overrides?: CallOverrides): Promise<BigNumber>;

    LOWER(overrides?: CallOverrides): Promise<BigNumber>;

    "LOWER()"(overrides?: CallOverrides): Promise<BigNumber>;

    MODIFY(overrides?: CallOverrides): Promise<BigNumber>;

    "MODIFY()"(overrides?: CallOverrides): Promise<BigNumber>;

    MOVE(overrides?: CallOverrides): Promise<BigNumber>;

    "MOVE()"(overrides?: CallOverrides): Promise<BigNumber>;

    PICK_UP(overrides?: CallOverrides): Promise<BigNumber>;

    "PICK_UP()"(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCE(overrides?: CallOverrides): Promise<BigNumber>;

    "PRODUCE()"(overrides?: CallOverrides): Promise<BigNumber>;

    RAISE(overrides?: CallOverrides): Promise<BigNumber>;

    "RAISE()"(overrides?: CallOverrides): Promise<BigNumber>;

    TRANSFER(overrides?: CallOverrides): Promise<BigNumber>;

    "TRANSFER()"(overrides?: CallOverrides): Promise<BigNumber>;

    TRANSFER_ALL_RIGHTS(overrides?: CallOverrides): Promise<BigNumber>;

    "TRANSFER_ALL_RIGHTS()"(overrides?: CallOverrides): Promise<BigNumber>;

    TRANSFER_CUSTODY(overrides?: CallOverrides): Promise<BigNumber>;

    "TRANSFER_CUSTODY()"(overrides?: CallOverrides): Promise<BigNumber>;

    USE(overrides?: CallOverrides): Promise<BigNumber>;

    "USE()"(overrides?: CallOverrides): Promise<BigNumber>;

    WORK(overrides?: CallOverrides): Promise<BigNumber>;

    "WORK()"(overrides?: CallOverrides): Promise<BigNumber>;

    /**
     * Returns the address of the current owner.
     */
    owner(overrides?: CallOverrides): Promise<BigNumber>;

    /**
     * Returns the address of the current owner.
     */
    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    /**
     * Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.
     */
    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    /**
     * Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.
     */
    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    /**
     * Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.
     */
    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    /**
     * Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.
     */
    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    /**
     * Setters
     */
    setCompaniesContract(
      _companies: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    /**
     * Setters
     */
    "setCompaniesContract(address)"(
      _companies: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPermission(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPermission(uint8,address,address,bool)"(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPermissions(
      _permissions: BigNumberish[],
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPermissions(uint8[],address,address,bool)"(
      _permissions: BigNumberish[],
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setBoolPermissions(
      _permissions: [
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean
      ],
      _company: string,
      _nftAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setBoolPermissions(bool[16],address,address)"(
      _permissions: [
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean
      ],
      _company: string,
      _nftAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    /**
     * Getters
     */
    getPermission(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    /**
     * Getters
     */
    "getPermission(uint8,address,address,address)"(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPermissions(
      _company: string,
      _nftAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPermissions(address,address)"(
      _company: string,
      _nftAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isSignerApproved(
      _company: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isSignerApproved(address,address)"(
      _company: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCompaniesContract(overrides?: CallOverrides): Promise<BigNumber>;

    "getCompaniesContract()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    ACCEPT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ACCEPT()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    CITE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "CITE()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    CONSUME(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "CONSUME()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    DELIVER_SERVICE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "DELIVER_SERVICE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    DROP_OFF(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "DROP_OFF()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    LOWER(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "LOWER()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    MODIFY(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "MODIFY()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    MOVE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "MOVE()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PICK_UP(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "PICK_UP()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PRODUCE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "PRODUCE()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    RAISE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "RAISE()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    TRANSFER(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "TRANSFER()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    TRANSFER_ALL_RIGHTS(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "TRANSFER_ALL_RIGHTS()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    TRANSFER_CUSTODY(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "TRANSFER_CUSTODY()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    USE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "USE()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    WORK(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "WORK()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    /**
     * Returns the address of the current owner.
     */
    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    /**
     * Returns the address of the current owner.
     */
    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    /**
     * Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.
     */
    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    /**
     * Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.
     */
    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    /**
     * Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.
     */
    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    /**
     * Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.
     */
    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    /**
     * Setters
     */
    setCompaniesContract(
      _companies: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    /**
     * Setters
     */
    "setCompaniesContract(address)"(
      _companies: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPermission(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPermission(uint8,address,address,bool)"(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPermissions(
      _permissions: BigNumberish[],
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPermissions(uint8[],address,address,bool)"(
      _permissions: BigNumberish[],
      _company: string,
      _nftAddress: string,
      _allow: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setBoolPermissions(
      _permissions: [
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean
      ],
      _company: string,
      _nftAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setBoolPermissions(bool[16],address,address)"(
      _permissions: [
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        boolean
      ],
      _company: string,
      _nftAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    /**
     * Getters
     */
    getPermission(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    /**
     * Getters
     */
    "getPermission(uint8,address,address,address)"(
      _action: BigNumberish,
      _company: string,
      _nftAddress: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPermissions(
      _company: string,
      _nftAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPermissions(address,address)"(
      _company: string,
      _nftAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isSignerApproved(
      _company: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isSignerApproved(address,address)"(
      _company: string,
      _signer: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCompaniesContract(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCompaniesContract()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
