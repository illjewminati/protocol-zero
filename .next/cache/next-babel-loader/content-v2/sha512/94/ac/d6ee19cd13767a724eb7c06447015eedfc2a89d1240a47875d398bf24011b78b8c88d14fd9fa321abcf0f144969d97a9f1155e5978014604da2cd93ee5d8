{"ast":null,"code":"import { utils } from \"ethers\";\nimport { loadTokenSwapContract } from \"./token_swap\";\nexport const swap = async (signer, gsnProvider, token, amount, minGas) => {\n  const tSwap = await loadTokenSwapContract(signer);\n  const amountBN = utils.parseUnits(amount, token.decimals);\n  return tSwap.connect(gsnProvider.getSigner()).swapTokensForEth(token.address, amountBN, {\n    gasLimit: minGas\n  });\n};","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/services/gsn_service.ts"],"names":["utils","loadTokenSwapContract","swap","signer","gsnProvider","token","amount","minGas","tSwap","amountBN","parseUnits","decimals","connect","getSigner","swapTokensForEth","address","gasLimit"],"mappings":"AAAA,SAAyBA,KAAzB,QAAsC,QAAtC;AAEA,SAASC,qBAAT,QAAsC,cAAtC;AAGA,OAAO,MAAMC,IAAI,GAAG,OAChBC,MADgB,EAEhBC,WAFgB,EAGhBC,KAHgB,EAIhBC,MAJgB,EAKhBC,MALgB,KAMf;AACD,QAAMC,KAAK,GAAG,MAAMP,qBAAqB,CAACE,MAAD,CAAzC;AAEA,QAAMM,QAAQ,GAAGT,KAAK,CAACU,UAAN,CAAiBJ,MAAjB,EAAyBD,KAAK,CAACM,QAA/B,CAAjB;AACA,SAAOH,KAAK,CACHI,OADF,CACUR,WAAW,CAACS,SAAZ,EADV,EAEEC,gBAFF,CAEmBT,KAAK,CAACU,OAFzB,EAEkCN,QAFlC,EAE4C;AAACO,IAAAA,QAAQ,EAAET;AAAX,GAF5C,CAAP;AAGH,CAbM","sourcesContent":["import { ethers, Signer, utils } from \"ethers\";\nimport { Token } from \"../types/blockchain\";\nimport { loadTokenSwapContract } from \"./token_swap\";\n\n\nexport const swap = async (\n    signer: Signer, \n    gsnProvider: ethers.providers.Web3Provider,\n    token: Token,\n    amount: string,\n    minGas: string\n) => {\n    const tSwap = await loadTokenSwapContract(signer);\n\n    const amountBN = utils.parseUnits(amount, token.decimals);\n    return tSwap\n            .connect(gsnProvider.getSigner())\n            .swapTokensForEth(token.address, amountBN, {gasLimit: minGas})\n}"]},"metadata":{},"sourceType":"module"}