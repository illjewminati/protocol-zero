{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport { getEthAccount, getSelectedNetworkID, getWeb3State } from '../../store/blockchain/selectors';\nimport { Logo } from './logo';\nimport { WalletConnectionContentContainer } from './wallet_connection_content';\nimport { Web3State } from '../../types/blockchain';\nimport { ErrorIcons, FontSize, ErrorCard } from './error_card';\nimport { errorsWallet } from '../../util/error_messages';\nimport { getNetworkName } from '../../util/web3_utils';\nimport { NETWORK_ID } from '../../common/constants';\nvar NavActive;\n\n(function (NavActive) {\n  NavActive[NavActive[\"INDEX\"] = 0] = \"INDEX\";\n  NavActive[NavActive[\"MULTISIG\"] = 1] = \"MULTISIG\";\n})(NavActive || (NavActive = {}));\n\nvar ToolbarContent = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ToolbarContent, _PureComponent);\n\n  var _super = _createSuper(ToolbarContent);\n\n  function ToolbarContent() {\n    var _this;\n\n    _classCallCheck(this, ToolbarContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      active: NavActive.INDEX\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidUpdate\", function () {\n      var activePath = _this.getActivePath();\n\n      if (_this.state.active !== activePath) {\n        _this.setState({\n          active: activePath\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getActivePath\", function () {\n      var router = _this.props.router;\n\n      switch (router.pathname) {\n        case \"/multisig\":\n          return NavActive.MULTISIG;\n\n        default:\n          return NavActive.INDEX;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (position) {\n      var router = _this.props.router;\n\n      _this.setState({\n        active: NavActive.INDEX\n      });\n\n      switch (position) {\n        case NavActive.MULTISIG:\n          return router.push('/multisig/new');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getContentFromWeb3State\", function (web3State) {\n      console.log(web3State);\n\n      switch (web3State) {\n        case Web3State.Locked:\n          return /*#__PURE__*/_jsx(ErrorCard, {\n            fontSize: FontSize.Large,\n            text: errorsWallet.mmLocked,\n            icon: ErrorIcons.Lock\n          });\n\n        case Web3State.NotInstalled:\n          return /*#__PURE__*/_jsx(ErrorCard, {\n            fontSize: FontSize.Large,\n            text: errorsWallet.mmNotInstalled,\n            icon: ErrorIcons.Metamask\n          });\n\n        case Web3State.Loading:\n          return /*#__PURE__*/_jsx(ErrorCard, {\n            fontSize: FontSize.Large,\n            text: errorsWallet.mmLoading,\n            icon: ErrorIcons.Metamask\n          });\n\n        case Web3State.Error:\n          console.log(\"aca\");\n          return /*#__PURE__*/_jsx(ErrorCard, {\n            fontSize: FontSize.Large,\n            text: errorsWallet.mmWrongNetwork(NETWORK_ID),\n            icon: ErrorIcons.Warning\n          });\n\n        case Web3State.Done:\n          return /*#__PURE__*/_jsx(\"div\", {\n            className: \"wallet-dropdown separator\",\n            children: /*#__PURE__*/_jsx(WalletConnectionContentContainer, {})\n          });\n\n        default:\n          var _exhaustiveCheck = web3State;\n          return _exhaustiveCheck;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderNetworkName\", function () {\n      var selectedNetwork = _this.props.selectedNetwork;\n\n      if (selectedNetwork === 0) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          className: \"network-name\",\n          children: \"Loading...\"\n        });\n      }\n\n      var netValue = selectedNetwork === 1 ? \"Ethereum Mainnet\" : getNetworkName(selectedNetwork) + \"Network Selected\";\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: \"network-name\",\n        children: netValue\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ToolbarContent, [{\n    key: \"render\",\n    value: function render() {\n      var logo = /*#__PURE__*/_jsx(\"img\", {\n        className: \"logo-styled\",\n        src: \"/static/img/logo.png\"\n      });\n\n      var active = this.state.active;\n      var web3State = this.props.web3State;\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: \"header_area\",\n        children: /*#__PURE__*/_jsxs(Navbar, {\n          bg: \"light\",\n          expand: \"lg\",\n          children: [/*#__PURE__*/_jsx(Navbar.Brand, {\n            children: /*#__PURE__*/_jsx(Logo, {\n              image: logo,\n              text: \"\"\n            })\n          }), /*#__PURE__*/_jsx(Navbar.Toggle, {\n            \"aria-controls\": \"basic-navbar-nav\"\n          }), /*#__PURE__*/_jsx(Navbar.Collapse, {\n            id: \"basic-navbar-nav\",\n            children: /*#__PURE__*/_jsxs(Nav, {\n              className: \"\",\n              children: [/*#__PURE__*/_jsx(Nav, {\n                className: \"spacer\"\n              }), /*#__PURE__*/_jsx(Nav.Item, {\n                children: this.renderNetworkName()\n              }), /*#__PURE__*/_jsx(Nav.Item, {\n                children: this.getContentFromWeb3State(web3State)\n              })]\n            })\n          })]\n        })\n      });\n    }\n  }]);\n\n  return ToolbarContent;\n}(PureComponent);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ethAccount: getEthAccount(state),\n    web3State: getWeb3State(state),\n    selectedNetwork: getSelectedNetworkID(state)\n  };\n};\n\nvar ToolbarContentContainer = connect(mapStateToProps)(withRouter(ToolbarContent));\nexport { ToolbarContentContainer };","map":null,"metadata":{},"sourceType":"module"}