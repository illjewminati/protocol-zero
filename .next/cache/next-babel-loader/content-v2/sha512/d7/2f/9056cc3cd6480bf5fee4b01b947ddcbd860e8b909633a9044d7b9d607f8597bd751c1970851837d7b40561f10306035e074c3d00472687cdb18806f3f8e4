{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChainService = void 0;\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar simple_uniswap_sdk_1 = require(\"simple-uniswap-sdk\");\n\nvar ChainService =\n/** @class */\nfunction () {\n  function ChainService(_ethereumProvider) {\n    this._ethereumProvider = _ethereumProvider;\n    this.newBlock$ = new rxjs_1.Subject();\n    this.unwatch();\n    this.watchBlocks();\n  }\n  /**\r\n   * Get the block explorer for transaction hash\r\n   * @param chainId The chain id\r\n   * @param transactionHash The transaction hash\r\n   */\n\n\n  ChainService.prototype.getBlockExplorerLinkForTransactionHash = function (chainId, transactionHash) {\n    return this.getBlockExplorerForNetwork(chainId) + \"tx/\" + transactionHash;\n  };\n  /**\r\n   * unwatch any block streams\r\n   */\n\n\n  ChainService.prototype.unwatch = function () {\n    this._ethereumProvider.provider.removeAllListeners('block');\n  };\n  /**\r\n   * Get block explorer link for network\r\n   * @param network The network\r\n   */\n\n\n  ChainService.prototype.getBlockExplorerForNetwork = function (chainId) {\n    switch (chainId) {\n      case simple_uniswap_sdk_1.ChainId.MAINNET:\n        return 'https://etherscan.io/';\n\n      case simple_uniswap_sdk_1.ChainId.RINKEBY:\n        return 'https://rinkeby.etherscan.io/';\n\n      case simple_uniswap_sdk_1.ChainId.ROPSTEN:\n        return 'https://ropsten.etherscan.io/';\n\n      case simple_uniswap_sdk_1.ChainId.KOVAN:\n        return 'https://kovan.etherscan.io/';\n\n      case simple_uniswap_sdk_1.ChainId.GÖRLI:\n        return 'https://goerli.etherscan.io/';\n\n      default:\n        throw new Error('Network is not defined');\n    }\n  };\n  /**\r\n   * Watch blocks\r\n   */\n\n\n  ChainService.prototype.watchBlocks = function () {\n    var _this = this;\n\n    this._ethereumProvider.provider.on('block', function (block) {\n      _this.handleNewBlock(block);\n    });\n  };\n  /**\r\n   * Handle new block\r\n   */\n\n\n  ChainService.prototype.handleNewBlock = function (block) {\n    this.newBlock$.next(block);\n  };\n\n  return ChainService;\n}();\n\nexports.ChainService = ChainService;","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/uniswap_components/uniswap-dapp-integration-shared/dist/cjs/chain/index.js"],"names":["Object","defineProperty","exports","value","ChainService","rxjs_1","require","simple_uniswap_sdk_1","_ethereumProvider","newBlock$","Subject","unwatch","watchBlocks","prototype","getBlockExplorerLinkForTransactionHash","chainId","transactionHash","getBlockExplorerForNetwork","provider","removeAllListeners","ChainId","MAINNET","RINKEBY","ROPSTEN","KOVAN","GÖRLI","Error","_this","on","block","handleNewBlock","next"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,oBAAD,CAAlC;;AACA,IAAIF,YAAY;AAAG;AAAe,YAAY;AAC1C,WAASA,YAAT,CAAsBI,iBAAtB,EAAyC;AACrC,SAAKA,iBAAL,GAAyBA,iBAAzB;AACA,SAAKC,SAAL,GAAiB,IAAIJ,MAAM,CAACK,OAAX,EAAjB;AACA,SAAKC,OAAL;AACA,SAAKC,WAAL;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIR,EAAAA,YAAY,CAACS,SAAb,CAAuBC,sCAAvB,GAAgE,UAAUC,OAAV,EAAmBC,eAAnB,EAAoC;AAChG,WAAO,KAAKC,0BAAL,CAAgCF,OAAhC,IAA2C,KAA3C,GAAmDC,eAA1D;AACH,GAFD;AAGA;AACJ;AACA;;;AACIZ,EAAAA,YAAY,CAACS,SAAb,CAAuBF,OAAvB,GAAiC,YAAY;AACzC,SAAKH,iBAAL,CAAuBU,QAAvB,CAAgCC,kBAAhC,CAAmD,OAAnD;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIf,EAAAA,YAAY,CAACS,SAAb,CAAuBI,0BAAvB,GAAoD,UAAUF,OAAV,EAAmB;AACnE,YAAQA,OAAR;AACI,WAAKR,oBAAoB,CAACa,OAArB,CAA6BC,OAAlC;AACI,eAAO,uBAAP;;AACJ,WAAKd,oBAAoB,CAACa,OAArB,CAA6BE,OAAlC;AACI,eAAO,+BAAP;;AACJ,WAAKf,oBAAoB,CAACa,OAArB,CAA6BG,OAAlC;AACI,eAAO,+BAAP;;AACJ,WAAKhB,oBAAoB,CAACa,OAArB,CAA6BI,KAAlC;AACI,eAAO,6BAAP;;AACJ,WAAKjB,oBAAoB,CAACa,OAArB,CAA6BK,KAAlC;AACI,eAAO,8BAAP;;AACJ;AACI,cAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AAZR;AAcH,GAfD;AAgBA;AACJ;AACA;;;AACItB,EAAAA,YAAY,CAACS,SAAb,CAAuBD,WAAvB,GAAqC,YAAY;AAC7C,QAAIe,KAAK,GAAG,IAAZ;;AACA,SAAKnB,iBAAL,CAAuBU,QAAvB,CAAgCU,EAAhC,CAAmC,OAAnC,EAA4C,UAAUC,KAAV,EAAiB;AACzDF,MAAAA,KAAK,CAACG,cAAN,CAAqBD,KAArB;AACH,KAFD;AAGH,GALD;AAMA;AACJ;AACA;;;AACIzB,EAAAA,YAAY,CAACS,SAAb,CAAuBiB,cAAvB,GAAwC,UAAUD,KAAV,EAAiB;AACrD,SAAKpB,SAAL,CAAesB,IAAf,CAAoBF,KAApB;AACH,GAFD;;AAGA,SAAOzB,YAAP;AACH,CAzDiC,EAAlC;;AA0DAF,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ChainService = void 0;\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar simple_uniswap_sdk_1 = require(\"simple-uniswap-sdk\");\r\nvar ChainService = /** @class */ (function () {\r\n    function ChainService(_ethereumProvider) {\r\n        this._ethereumProvider = _ethereumProvider;\r\n        this.newBlock$ = new rxjs_1.Subject();\r\n        this.unwatch();\r\n        this.watchBlocks();\r\n    }\r\n    /**\r\n     * Get the block explorer for transaction hash\r\n     * @param chainId The chain id\r\n     * @param transactionHash The transaction hash\r\n     */\r\n    ChainService.prototype.getBlockExplorerLinkForTransactionHash = function (chainId, transactionHash) {\r\n        return this.getBlockExplorerForNetwork(chainId) + \"tx/\" + transactionHash;\r\n    };\r\n    /**\r\n     * unwatch any block streams\r\n     */\r\n    ChainService.prototype.unwatch = function () {\r\n        this._ethereumProvider.provider.removeAllListeners('block');\r\n    };\r\n    /**\r\n     * Get block explorer link for network\r\n     * @param network The network\r\n     */\r\n    ChainService.prototype.getBlockExplorerForNetwork = function (chainId) {\r\n        switch (chainId) {\r\n            case simple_uniswap_sdk_1.ChainId.MAINNET:\r\n                return 'https://etherscan.io/';\r\n            case simple_uniswap_sdk_1.ChainId.RINKEBY:\r\n                return 'https://rinkeby.etherscan.io/';\r\n            case simple_uniswap_sdk_1.ChainId.ROPSTEN:\r\n                return 'https://ropsten.etherscan.io/';\r\n            case simple_uniswap_sdk_1.ChainId.KOVAN:\r\n                return 'https://kovan.etherscan.io/';\r\n            case simple_uniswap_sdk_1.ChainId.GÖRLI:\r\n                return 'https://goerli.etherscan.io/';\r\n            default:\r\n                throw new Error('Network is not defined');\r\n        }\r\n    };\r\n    /**\r\n     * Watch blocks\r\n     */\r\n    ChainService.prototype.watchBlocks = function () {\r\n        var _this = this;\r\n        this._ethereumProvider.provider.on('block', function (block) {\r\n            _this.handleNewBlock(block);\r\n        });\r\n    };\r\n    /**\r\n     * Handle new block\r\n     */\r\n    ChainService.prototype.handleNewBlock = function (block) {\r\n        this.newBlock$.next(block);\r\n    };\r\n    return ChainService;\r\n}());\r\nexports.ChainService = ChainService;\r\n"]},"metadata":{},"sourceType":"script"}