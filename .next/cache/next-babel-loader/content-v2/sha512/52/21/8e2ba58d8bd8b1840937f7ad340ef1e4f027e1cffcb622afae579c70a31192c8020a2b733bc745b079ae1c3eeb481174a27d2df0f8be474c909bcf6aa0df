{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/common/wallet_connection_content.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { connect } from 'react-redux';\nimport { getEthAccount } from '../../store/blockchain/selectors';\nimport { truncateAddress } from '../../util/number_utils';\nimport { WalletConnectionStatusContainer } from '../account/wallet_connection_status';\nimport { CardBase } from './card_base';\nimport { DropdownTextItem } from './dropdown_text_item';\n\nclass WalletConnectionContent extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"render\", () => {\n      const _this$props = this.props,\n            {\n        ethAccount\n      } = _this$props,\n            restProps = _objectWithoutProperties(_this$props, [\"ethAccount\"]);\n\n      const ethAccountText = ethAccount ? `${truncateAddress(ethAccount)}` : 'Not connected';\n\n      const content = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-items\",\n        children: /*#__PURE__*/_jsxDEV(CardBase, {\n          children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: ethAccount ? ethAccount : '',\n            children: /*#__PURE__*/_jsxDEV(DropdownTextItem, {\n              text: \"Copy Address to Clipboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(WalletConnectionStatusContainer, _objectSpread({\n        walletConnectionContent: content,\n        headerText: ethAccountText,\n        ethAccount: ethAccount\n      }, restProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ethAccount: getEthAccount(state)\n  };\n};\n\nconst WalletConnectionContentContainer = connect(mapStateToProps, {})(WalletConnectionContent);\nexport { WalletConnectionContent, WalletConnectionContentContainer };","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/common/wallet_connection_content.tsx"],"names":["React","CopyToClipboard","connect","getEthAccount","truncateAddress","WalletConnectionStatusContainer","CardBase","DropdownTextItem","WalletConnectionContent","PureComponent","props","ethAccount","restProps","ethAccountText","content","mapStateToProps","state","WalletConnectionContentContainer"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAsC,OAAtC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,kCAA9B;AAEA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,+BAAT,QAAgD,qCAAhD;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;;AAYA,MAAMC,uBAAN,SAAsCR,KAAK,CAACS,aAA5C,CAAiE;AAAA;AAAA;;AAAA,oCAC7C,MAAM;AAClB,0BAAqC,KAAKC,KAA1C;AAAA,YAAM;AAAEC,QAAAA;AAAF,OAAN;AAAA,YAAuBC,SAAvB;;AACA,YAAMC,cAAc,GAAGF,UAAU,GAAI,GAAEP,eAAe,CAACO,UAAD,CAAa,EAAlC,GAAsC,eAAvE;;AAGA,YAAMG,OAAO,gBACT;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI,QAAC,QAAD;AAAA,iCACI,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEH,UAAU,GAAGA,UAAH,GAAgB,EAAjD;AAAA,mCACI,QAAC,gBAAD;AAAkB,cAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;;AAYA,0BACI,QAAC,+BAAD;AACI,QAAA,uBAAuB,EAAEG,OAD7B;AAEI,QAAA,UAAU,EAAED,cAFhB;AAGI,QAAA,UAAU,EAAEF;AAHhB,SAIQC,SAJR;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KA1B4D;AAAA;;AAAA;;AA6BjE,MAAMG,eAAe,GAAIC,KAAD,IAAmC;AACvD,SAAO;AACHL,IAAAA,UAAU,EAAER,aAAa,CAACa,KAAD;AADtB,GAAP;AAGH,CAJD;;AAMA,MAAMC,gCAAgC,GAAGf,OAAO,CAC5Ca,eAD4C,EAE5C,EAF4C,CAAP,CAGvCP,uBAHuC,CAAzC;AAKA,SAASA,uBAAT,EAAkCS,gCAAlC","sourcesContent":["import React, { HTMLAttributes } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { connect } from 'react-redux';\nimport { getEthAccount } from '../../store/blockchain/selectors';\nimport { StoreState } from '../../types/store';\nimport { truncateAddress } from '../../util/number_utils';\nimport { WalletConnectionStatusContainer } from '../account/wallet_connection_status';\n\nimport { CardBase } from './card_base';\nimport { DropdownTextItem } from './dropdown_text_item';\n\n\ninterface OwnProps extends HTMLAttributes<HTMLSpanElement> {}\n\ninterface StateProps {\n    ethAccount: string;\n}\n\ntype Props = StateProps & OwnProps;\n\n\nclass WalletConnectionContent extends React.PureComponent<Props> {\n    public render = () => {\n        const { ethAccount, ...restProps } = this.props;\n        const ethAccountText = ethAccount ? `${truncateAddress(ethAccount)}` : 'Not connected';\n\n       \n        const content = (\n            <div className=\"dropdown-items\">\n                <CardBase>\n                    <CopyToClipboard text={ethAccount ? ethAccount : ''}>\n                        <DropdownTextItem text=\"Copy Address to Clipboard\" />\n                    </CopyToClipboard>\n                    {/* <DropdownTextItem onClick={connectToWallet} text=\"Connect a different Wallet\" />\n                    <DropdownTextItem onClick={goToURL} text=\"Manage Account\" /> */}\n                </CardBase>\n            </div>\n        );\n\n        return (\n            <WalletConnectionStatusContainer\n                walletConnectionContent={content}\n                headerText={ethAccountText}\n                ethAccount={ethAccount}\n                {...restProps}\n            />\n        );\n    };\n}\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n    return {\n        ethAccount: getEthAccount(state),\n    };\n};\n\nconst WalletConnectionContentContainer = connect(\n    mapStateToProps,\n    {},\n)(WalletConnectionContent as any);\n\nexport { WalletConnectionContent, WalletConnectionContentContainer };\n"]},"metadata":{},"sourceType":"module"}