{"ast":null,"code":"import { Network } from \"../types/blockchain\";\nexport const isZeroAddress = address => {\n  return address.toString().toUpperCase() === \"0x0000000000000000000000000000000000000000\".toString().toUpperCase();\n};\nexport const getNetworkName = networkID => Network[networkID];","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/util/web3_utils.ts"],"names":["Network","isZeroAddress","address","toString","toUpperCase","getNetworkName","networkID"],"mappings":"AAAA,SAASA,OAAT,QAAwB,qBAAxB;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AACtC,SAAOA,OAAO,CAACC,QAAR,GAAmBC,WAAnB,OAAqC,6CAA6CD,QAA7C,GAAwDC,WAAxD,EAA5C;AACH,CAFM;AAIP,OAAO,MAAMC,cAAc,GAAIC,SAAD,IAA+BN,OAAO,CAACM,SAAD,CAA7D","sourcesContent":["import { Network } from \"../types/blockchain\";\n\nexport const isZeroAddress = (address) => {\n    return address.toString().toUpperCase() === \"0x0000000000000000000000000000000000000000\".toString().toUpperCase()\n}\n\nexport const getNetworkName = (networkID: number): string => Network[networkID];"]},"metadata":{},"sourceType":"module"}