{"ast":null,"code":"import { applyMiddleware } from 'redux';\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { createRootReducer } from './reducers';\nimport thunk from 'redux-thunk';\nimport { enableWeb3, getWeb3Wrapper, listenNetwork, initializeWeb3Wrapper, getExternalSigner, getExternalProvider, getWebSocketProvider } from '../services/web3_wrapper';\n// \"@opengsn/common\": \"^3.0.0-beta.1\",\n// \"@opengsn/provider@^3.0.0-beta.1\",\n\n/** If you want to add more than one middleware */\nvar rootReducer = createRootReducer();\nvar extraArgument = {\n  enableWeb3: enableWeb3,\n  getWeb3Wrapper: getWeb3Wrapper,\n  listenNetwork: listenNetwork,\n  initializeWeb3Wrapper: initializeWeb3Wrapper,\n  getExternalSigner: getExternalSigner,\n  getExternalProvider: getExternalProvider,\n  getWebSocketProvider: getWebSocketProvider\n};\nvar thunkMiddleware = thunk.withExtraArgument(extraArgument);\nvar middlewares = [thunkMiddleware];\nvar middlewareEnhancer = applyMiddleware.apply(void 0, middlewares);\nvar enhancers = [middlewareEnhancer];\nexport function initializeStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return configureStore({\n    reducer: rootReducer,\n    preloadedState: initialState,\n    middleware: middlewares,\n    devTools: true,\n    enhancers: enhancers\n  });\n}","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/store/index.ts"],"names":["applyMiddleware","configureStore","createRootReducer","thunk","enableWeb3","getWeb3Wrapper","listenNetwork","initializeWeb3Wrapper","getExternalSigner","getExternalProvider","getWebSocketProvider","rootReducer","extraArgument","thunkMiddleware","withExtraArgument","middlewares","middlewareEnhancer","enhancers","initializeStore","initialState","reducer","preloadedState","middleware","devTools"],"mappings":"AAAA,SAASA,eAAT,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,SAASC,iBAAT,QAAkC,YAAlC;AACA,OAAOC,KAAP,MAAuC,aAAvC;AAEA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,aAArC,EAAoDC,qBAApD,EAA2EC,iBAA3E,EAA8FC,mBAA9F,EAAmHC,oBAAnH,QAA+I,0BAA/I;AAGI;AACA;;AAGJ;AAEA,IAAMC,WAAW,GAAGT,iBAAiB,EAArC;AAEA,IAAMU,aAAa,GAAG;AACpBR,EAAAA,UAAU,EAAVA,UADoB;AAEpBC,EAAAA,cAAc,EAAdA,cAFoB;AAGpBC,EAAAA,aAAa,EAAbA,aAHoB;AAIpBC,EAAAA,qBAAqB,EAArBA,qBAJoB;AAKpBC,EAAAA,iBAAiB,EAAjBA,iBALoB;AAMpBC,EAAAA,mBAAmB,EAAnBA,mBANoB;AAOpBC,EAAAA,oBAAoB,EAApBA;AAPoB,CAAtB;AAWA,IAAMG,eAAe,GAAGV,KAAK,CAACW,iBAAN,CAAwBF,aAAxB,CAAxB;AAEA,IAAMG,WAAW,GAAG,CAACF,eAAD,CAApB;AAGA,IAAMG,kBAAkB,GAAGhB,eAAe,MAAf,SAAmBe,WAAnB,CAA3B;AAEA,IAAME,SAAS,GAAG,CAACD,kBAAD,CAAlB;AAEA,OAAO,SAASE,eAAT,GAA6C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AAClD,SAAOlB,cAAc,CAAC;AACpBmB,IAAAA,OAAO,EAAET,WADW;AAEpBU,IAAAA,cAAc,EAAEF,YAFI;AAGpBG,IAAAA,UAAU,EAAEP,WAHQ;AAIpBQ,IAAAA,QAAQ,EAAE,IAJU;AAKpBN,IAAAA,SAAS,EAATA;AALoB,GAAD,CAArB;AAOD","sourcesContent":["import { applyMiddleware, AnyAction } from 'redux'\nimport { configureStore } from \"@reduxjs/toolkit\"\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { createRootReducer } from './reducers';\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\nimport { StoreState } from '../types/store';\nimport { enableWeb3, getWeb3Wrapper, listenNetwork, initializeWeb3Wrapper, getExternalSigner, getExternalProvider, getWebSocketProvider } from '../services/web3_wrapper'\nimport { localStorageMiddleware } from './middlewares';\n\n    // \"@opengsn/common\": \"^3.0.0-beta.1\",\n    // \"@opengsn/provider@^3.0.0-beta.1\",\n\n\n/** If you want to add more than one middleware */\n\nconst rootReducer = createRootReducer();\n\nconst extraArgument = {\n  enableWeb3,\n  getWeb3Wrapper,\n  listenNetwork,\n  initializeWeb3Wrapper,\n  getExternalSigner,\n  getExternalProvider,\n  getWebSocketProvider\n};\nexport type ExtraArgument = typeof extraArgument;\n\nconst thunkMiddleware = thunk.withExtraArgument(extraArgument) as ThunkMiddleware<StoreState, AnyAction>;\n\nconst middlewares = [thunkMiddleware]\n\n\nconst middlewareEnhancer = applyMiddleware(...middlewares)\n\nconst enhancers = [middlewareEnhancer]\n\nexport function initializeStore (initialState = {}) {\n  return configureStore({\n    reducer: rootReducer, \n    preloadedState: initialState,\n    middleware: middlewares,\n    devTools: true,\n    enhancers\n  })\n}\n"]},"metadata":{},"sourceType":"module"}