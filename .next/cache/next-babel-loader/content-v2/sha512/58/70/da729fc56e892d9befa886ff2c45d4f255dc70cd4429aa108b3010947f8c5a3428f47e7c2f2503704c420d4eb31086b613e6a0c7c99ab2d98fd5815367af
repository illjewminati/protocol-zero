{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/common/steps_modal/allowance_step.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getStepsModalCurrentStep } from '../../../store/ui/selectors';\nimport { BaseStepModal } from './base_step_modal';\nimport { initBalances, setAllowance, stepsModalAdvanceStep } from '../../../store/actions';\nimport { getWeb3Wrapper } from '../../../services/web3_wrapper';\n\nclass AllowanceStep extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"render\", () => {\n      const {\n        buildStepsProgress,\n        step\n      } = this.props;\n      const {\n        token\n      } = step;\n      const title = `Approve ${token.symbol} Tokens`;\n      const confirmCaption = `Confirm on Metamask to approve tokens`;\n      const loadingCaption = \"Approving Tokens\";\n      const doneCaption = \"Tokens Approved\";\n      const errorCaption = `Failed to approve tokens`;\n      const loadingFooterCaption = `Waiting for confirmation...`;\n      const doneFooterCaption = `Tokens Approved`;\n      return /*#__PURE__*/_jsxDEV(BaseStepModal, {\n        step: step,\n        title: title,\n        confirmCaption: confirmCaption,\n        loadingCaption: loadingCaption,\n        doneCaption: doneCaption,\n        errorCaption: errorCaption,\n        loadingFooterCaption: loadingFooterCaption,\n        doneFooterCaption: doneFooterCaption,\n        buildStepsProgress: buildStepsProgress,\n        estimatedTxTimeMs: 30000,\n        runAction: this._approveTokens,\n        showPartialProgress: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this);\n    });\n\n    _defineProperty(this, \"_approveTokens\", async ({\n      onLoading,\n      onDone,\n      onError\n    }) => {\n      const {\n        step,\n        onTokensToApprove,\n        advanceStep,\n        initBalances\n      } = this.props;\n      const web3Wrapper = await getWeb3Wrapper();\n\n      try {\n        const contractTransaction = await onTokensToApprove(step.token.address, step.amount, step.to);\n        onLoading();\n        const contractReceipt = await contractTransaction.wait();\n        await web3Wrapper.waitForTransaction(contractReceipt.transactionHash);\n        initBalances();\n        advanceStep();\n      } catch (e) {\n        onError(e);\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    step: getStepsModalCurrentStep(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTokensToApprove: (tokenAddress, amount, from) => dispatch(setAllowance(tokenAddress, amount.toString(), from)),\n    advanceStep: () => dispatch(stepsModalAdvanceStep()),\n    initBalances: () => dispatch(initBalances())\n  };\n};\n\nconst AllowanceStepContainer = connect(mapStateToProps, mapDispatchToProps)(AllowanceStep);\nexport { AllowanceStep, AllowanceStepContainer };","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/common/steps_modal/allowance_step.tsx"],"names":["React","connect","getStepsModalCurrentStep","BaseStepModal","initBalances","setAllowance","stepsModalAdvanceStep","getWeb3Wrapper","AllowanceStep","Component","buildStepsProgress","step","props","token","title","symbol","confirmCaption","loadingCaption","doneCaption","errorCaption","loadingFooterCaption","doneFooterCaption","_approveTokens","onLoading","onDone","onError","onTokensToApprove","advanceStep","web3Wrapper","contractTransaction","address","amount","to","contractReceipt","wait","waitForTransaction","transactionHash","e","mapStateToProps","state","mapDispatchToProps","dispatch","tokenAddress","from","toString","AllowanceStepContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getStepsModalCurrentStep } from '../../../store/ui/selectors';\nimport { StoreState } from '../../../types/store';\nimport { BaseStepModal } from './base_step_modal';\nimport { StepItem } from './steps_progress';\nimport { BigNumberish, ContractReceipt, ContractTransaction } from 'ethers';\nimport { initBalances, setAllowance, stepsModalAdvanceStep } from '../../../store/actions';\nimport { StepAllowance } from '../../../types/steps-modal';\nimport { getWeb3Wrapper } from '../../../services/web3_wrapper';\n\ninterface OwnProps {\n    buildStepsProgress: (currentStepItem: StepItem) => StepItem[];\n}\ninterface StateProps {\n    step: StepAllowance;\n}\n\ninterface DispatchProps {\n    onTokensToApprove: (\n        address: string, \n        amount: BigNumberish, \n        from: string\n    ) => Promise<any>;\n    advanceStep: () => void;\n    initBalances: () => any\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass AllowanceStep extends React.Component<Props> {\n    public render = () => {\n        const { buildStepsProgress, step } = this.props;\n        const { token } = step;\n\n        const title = `Approve ${token.symbol} Tokens`;\n        const confirmCaption = `Confirm on Metamask to approve tokens`;\n        const loadingCaption = \"Approving Tokens\";\n        const doneCaption = \"Tokens Approved\";\n        const errorCaption = `Failed to approve tokens`;\n        const loadingFooterCaption = `Waiting for confirmation...`;\n        const doneFooterCaption = `Tokens Approved`;\n\n        return (\n            <BaseStepModal\n                step={step}\n                title={title}\n                confirmCaption={confirmCaption}\n                loadingCaption={loadingCaption}\n                doneCaption={doneCaption}\n                errorCaption={errorCaption}\n                loadingFooterCaption={loadingFooterCaption}\n                doneFooterCaption={doneFooterCaption}\n                buildStepsProgress={buildStepsProgress}\n                estimatedTxTimeMs={30000}\n                runAction={this._approveTokens}\n                showPartialProgress={true}\n            />\n        );\n    };\n\n    private readonly _approveTokens = async ({ onLoading, onDone, onError }: any) => {\n        const { step, onTokensToApprove, advanceStep, initBalances } = this.props;\n\n        const web3Wrapper = await getWeb3Wrapper();\n\n        try {\n            const contractTransaction: ContractTransaction = await onTokensToApprove(step.token.address, step.amount, step.to);\n            onLoading();\n    \n            const contractReceipt: ContractReceipt = await contractTransaction.wait();\n            await web3Wrapper.waitForTransaction(contractReceipt.transactionHash);\n            initBalances()\n            advanceStep();\n        } catch(e) {\n            onError(e)\n        }\n\n    };\n}\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n    return {\n        step: getStepsModalCurrentStep(state) as StepAllowance,\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => {\n    return {\n        onTokensToApprove: (tokenAddress: string, amount: BigNumberish, from: string) => \n            dispatch(setAllowance(tokenAddress, amount.toString(), from)),\n        advanceStep: () => dispatch(stepsModalAdvanceStep()),\n        initBalances: () => dispatch(initBalances())\n    }\n}\n\nconst AllowanceStepContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AllowanceStep);\n\nexport { AllowanceStep, AllowanceStepContainer };\n"]},"metadata":{},"sourceType":"module"}