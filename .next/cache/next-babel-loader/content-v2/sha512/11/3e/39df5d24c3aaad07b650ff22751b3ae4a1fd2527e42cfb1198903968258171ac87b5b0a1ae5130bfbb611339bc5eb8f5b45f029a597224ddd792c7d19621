{"ast":null,"code":"import { BigNumber } from 'bignumber.js';\n\nvar Utils =\n/** @class */\nfunction () {\n  function Utils() {}\n  /**\r\n   * To precision\r\n   */\n\n\n  Utils.toPrecision = function (value, significantDigits, significantDigitsForDecimalOnly) {\n    if (significantDigits === void 0) {\n      significantDigits = 4;\n    }\n\n    if (significantDigitsForDecimalOnly === void 0) {\n      significantDigitsForDecimalOnly = true;\n    }\n\n    var parsedValue = new BigNumber(value);\n\n    if (significantDigitsForDecimalOnly) {\n      var beforeDecimalsCount = parsedValue.toString().split('.')[0].length;\n      return parsedValue.precision(beforeDecimalsCount + significantDigits, BigNumber.ROUND_DOWN).toFixed();\n    } else {\n      return parsedValue.precision(significantDigits, BigNumber.ROUND_DOWN).toFixed();\n    }\n  };\n  /**\r\n   * Format the currency\r\n   * @value The value to format\r\n   */\n\n\n  Utils.formatCurrency = function (value) {\n    return Number(value).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  };\n  /**\r\n   * Deep clone a object\r\n   * @param object The object\r\n   */\n\n\n  Utils.deepClone = function (object) {\n    return JSON.parse(JSON.stringify(object));\n  };\n  /**\r\n   * Check if something is zero\r\n   * @param amount The amount\r\n   */\n\n\n  Utils.isZero = function (amount) {\n    if (!amount || amount === '') {\n      return true;\n    }\n\n    return new BigNumber(amount).eq(0);\n  };\n  /**\r\n   * Generate random id\r\n   */\n\n\n  Utils.randomId = function () {\n    var randLetter = String.fromCharCode(65 + Math.floor(Math.random() * 26));\n    return randLetter + Date.now();\n  };\n\n  return Utils;\n}();\n\nexport { Utils };","map":null,"metadata":{},"sourceType":"module"}