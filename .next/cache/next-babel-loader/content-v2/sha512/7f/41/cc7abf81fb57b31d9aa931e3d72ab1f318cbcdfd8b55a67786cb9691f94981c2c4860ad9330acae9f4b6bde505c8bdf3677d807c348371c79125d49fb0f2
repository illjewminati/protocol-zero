{"ast":null,"code":"import _defineProperty from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/common/dropdown_text_item.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nexport var DropdownTextItem = function DropdownTextItem(props) {\n  var text = props.text,\n      onClick = props.onClick,\n      restProps = _objectWithoutProperties(props, [\"text\", \"onClick\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n    className: \"dropdown-text-item-wrapper \",\n    onClick: onClick\n  }, restProps), {}, {\n    children: text\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n_c = DropdownTextItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownTextItem\");","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/common/dropdown_text_item.tsx"],"names":["React","DropdownTextItem","props","text","onClick","restProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAsC,OAAtC;AASA,OAAO,IAAMC,gBAAiC,GAAG,SAApCA,gBAAoC,CAAAC,KAAK,EAAI;AAAA,MAC9CC,IAD8C,GACdD,KADc,CAC9CC,IAD8C;AAAA,MACxCC,OADwC,GACdF,KADc,CACxCE,OADwC;AAAA,MAC5BC,SAD4B,4BACdH,KADc;;AAEtD,sBACI;AAAK,IAAA,SAAS,+BAAd;AAA+C,IAAA,OAAO,EAAEE;AAAxD,KAAqEC,SAArE;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAPM;KAAMF,gB","sourcesContent":["import React, { HTMLAttributes } from 'react';\n\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n    active?: boolean;\n    onClick?: any;\n    text: string;\n}\n\nexport const DropdownTextItem: React.FC<Props> = props => {\n    const { text, onClick, ...restProps } = props;\n    return (\n        <div className={`dropdown-text-item-wrapper `} onClick={onClick} {...restProps}>\n            {text}\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}