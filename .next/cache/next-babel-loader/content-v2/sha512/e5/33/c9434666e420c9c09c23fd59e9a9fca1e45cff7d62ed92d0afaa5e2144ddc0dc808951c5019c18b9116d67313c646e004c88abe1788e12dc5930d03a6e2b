{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { ChainId, removeEthFromContractAddress } from 'simple-uniswap-sdk';\nimport { Utils } from './utils';\n\nvar CoinGecko =\n/** @class */\nfunction () {\n  function CoinGecko() {\n    this._fiatPriceCache = undefined; // 90 seconds cache\n\n    this._cacheMilliseconds = 90000;\n  }\n  /**\r\n   * Get the coin gecko fiat price\r\n   * @param contractAddress The array of contract addresses\r\n   * @param chainId The chain id\r\n   */\n\n\n  CoinGecko.prototype.getCoinGeckoFiatPrices = function (contractAddresses, chainId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var now, response, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            contractAddresses = contractAddresses.map(function (address) {\n              return removeEthFromContractAddress(address);\n            });\n            if (!(chainId === ChainId.MAINNET)) return [3\n            /*break*/\n            , 6];\n\n            if (this._fiatPriceCache) {\n              now = Date.now();\n\n              if (Utils.deepClone(this._fiatPriceCache.timestamp) > now - this._cacheMilliseconds) {\n                return [2\n                /*return*/\n                , this._fiatPriceCache.cachedResponse];\n              }\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , fetch(\"https://api.coingecko.com/api/v3/simple/token_price/ethereum?contract_addresses=\" + contractAddresses.join() + \"&vs_currencies=usd\")];\n\n          case 2:\n            return [4\n            /*yield*/\n            , _a.sent().json()];\n\n          case 3:\n            response = _a.sent();\n            this._fiatPriceCache = {\n              cachedResponse: response,\n              timestamp: Date.now()\n            };\n            return [2\n            /*return*/\n            , response];\n\n          case 4:\n            e_1 = _a.sent(); // if coin gecko is down for any reason still allow the swapper to work\n\n            if (this._fiatPriceCache) {\n              return [2\n              /*return*/\n              , this._fiatPriceCache.cachedResponse];\n            }\n\n            return [2\n            /*return*/\n            , {}];\n\n          case 5:\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            return [2\n            /*return*/\n            , {}];\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return CoinGecko;\n}();\n\nexport { CoinGecko };","map":null,"metadata":{},"sourceType":"module"}