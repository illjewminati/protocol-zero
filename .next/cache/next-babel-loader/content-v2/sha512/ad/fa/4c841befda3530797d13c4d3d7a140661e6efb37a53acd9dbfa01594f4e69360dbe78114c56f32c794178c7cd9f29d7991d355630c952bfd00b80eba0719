{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createAction } from 'typesafe-actions';\nimport { StepKind } from '../../types/steps-modal';\nimport { createAllowanceAndSwapSteps, getSwapTokensStep } from '../../util/steps_modals_generation';\nexport var setStepsModalPendingSteps = createAction('ui/steps_modal/PENDING_STEPS_set', function (resolve) {\n  return function (pendingSteps) {\n    return resolve(pendingSteps);\n  };\n});\nexport var setStepsModalDoneSteps = createAction('ui/steps_modal/DONE_STEPS_set', function (resolve) {\n  return function (doneSteps) {\n    return resolve(doneSteps);\n  };\n});\nexport var setStepsModalCurrentStep = createAction('ui/steps_modal/CURRENT_STEP_set', function (resolve) {\n  return function (currentStep) {\n    return resolve(currentStep);\n  };\n});\nexport var stepsModalAdvanceStep = createAction('ui/steps_modal/advance_step');\nexport var stepsModalReset = createAction('ui/steps_modal/reset');\nexport var startAllowanceAndSwapSteps = function startAllowanceAndSwapSteps(token, to, amountToSwap, callback) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var allowanceAndSwapSteps;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              allowanceAndSwapSteps = createAllowanceAndSwapSteps(token, to, amountToSwap, callback);\n              dispatch(setStepsModalCurrentStep(allowanceAndSwapSteps[0]));\n              dispatch(setStepsModalPendingSteps(allowanceAndSwapSteps.slice(1)));\n              dispatch(setStepsModalDoneSteps([]));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var startSwapStep = function startSwapStep(token, amountToSwap, callback) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(setStepsModalCurrentStep(getSwapTokensStep(token, amountToSwap, callback)));\n              dispatch(setStepsModalPendingSteps([]));\n              dispatch(setStepsModalDoneSteps([]));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var startPaymasterSetMinBalance = function startPaymasterSetMinBalance(amount) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var step;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              step = {\n                kind: StepKind.SetMinBalance,\n                amount: amount\n              };\n              dispatch(setStepsModalCurrentStep(step));\n              dispatch(setStepsModalPendingSteps([]));\n              dispatch(setStepsModalDoneSteps([]));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var startPaymasterSetPaymentToken = function startPaymasterSetPaymentToken(address) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      var step;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              step = {\n                kind: StepKind.SetPaymentToken,\n                address: address\n              };\n              dispatch(setStepsModalCurrentStep(step));\n              dispatch(setStepsModalPendingSteps([]));\n              dispatch(setStepsModalDoneSteps([]));\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var startPaymasterSetFee = function startPaymasterSetFee(amount) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      var step;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              step = {\n                kind: StepKind.SetFee,\n                amount: amount\n              };\n              dispatch(setStepsModalCurrentStep(step));\n              dispatch(setStepsModalPendingSteps([]));\n              dispatch(setStepsModalDoneSteps([]));\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var startPaymasterWhitelisToken = function startPaymasterWhitelisToken(address, whitelist) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n      var step;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              step = {\n                kind: StepKind.Whitelist,\n                address: address,\n                whitelist: whitelist\n              };\n              dispatch(setStepsModalCurrentStep(step));\n              dispatch(setStepsModalPendingSteps([]));\n              dispatch(setStepsModalDoneSteps([]));\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport var startPaymasterSetGasUsedByPost = function startPaymasterSetGasUsedByPost(amount) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch, getState) {\n      var step;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              step = {\n                kind: StepKind.SetGasUsedByPost,\n                amount: amount\n              };\n              dispatch(setStepsModalCurrentStep(step));\n              dispatch(setStepsModalPendingSteps([]));\n              dispatch(setStepsModalDoneSteps([]));\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x13, _x14) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n};\nexport var startPaymasterSetMinGas = function startPaymasterSetMinGas(amount) {\n  return /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch, getState) {\n      var step;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              step = {\n                kind: StepKind.SetMinGas,\n                amount: amount\n              };\n              dispatch(setStepsModalCurrentStep(step));\n              dispatch(setStepsModalPendingSteps([]));\n              dispatch(setStepsModalDoneSteps([]));\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function (_x15, _x16) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n};\nexport var startPaymasterSetTarget = function startPaymasterSetTarget(address) {\n  return /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(dispatch, getState) {\n      var step;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              step = {\n                kind: StepKind.SetTarget,\n                address: address\n              };\n              dispatch(setStepsModalCurrentStep(step));\n              dispatch(setStepsModalPendingSteps([]));\n              dispatch(setStepsModalDoneSteps([]));\n\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function (_x17, _x18) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n};\nexport var startPaymasterSetRelayHub = function startPaymasterSetRelayHub(address) {\n  return /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(dispatch, getState) {\n      var step;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              step = {\n                kind: StepKind.SetRelayHub,\n                address: address\n              };\n              dispatch(setStepsModalCurrentStep(step));\n              dispatch(setStepsModalPendingSteps([]));\n              dispatch(setStepsModalDoneSteps([]));\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function (_x19, _x20) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n};\nexport var startPaymasterSetForwarder = function startPaymasterSetForwarder(address) {\n  return /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(dispatch, getState) {\n      var step;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              step = {\n                kind: StepKind.SetForwarder,\n                address: address\n              };\n              dispatch(setStepsModalCurrentStep(step));\n              dispatch(setStepsModalPendingSteps([]));\n              dispatch(setStepsModalDoneSteps([]));\n\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function (_x21, _x22) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n};\nexport var startPaymasterWithdraw = function startPaymasterWithdraw(amount, receiver) {\n  return /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(dispatch, getState) {\n      var step;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              step = {\n                kind: StepKind.Withdraw,\n                amount: amount,\n                receiver: receiver\n              };\n              dispatch(setStepsModalCurrentStep(step));\n              dispatch(setStepsModalPendingSteps([]));\n              dispatch(setStepsModalDoneSteps([]));\n\n            case 4:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function (_x23, _x24) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}