{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/uniswap_swap.tsx\";\nimport React, { useEffect } from 'react';\nimport { ChainId } from 'uniswap-dapp-integration-shared';\nimport UniswapReact from 'uniswap-react';\n\nfunction App() {\n  const [uniswapDappSharedLogicContext, setUniswapDappSharedLogicContext] = React.useState(undefined);\n  useEffect(() => {\n    (async () => {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const uniswapDappSharedLogicContext = {\n        supportedNetworkTokens: [{\n          chainId: ChainId.MAINNET,\n          defaultInputValue: '0.000001',\n          defaultInputToken: ch,\n          defaultOutputToken: '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984',\n          supportedTokens: [{\n            contractAddress: '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984'\n          }]\n        }],\n        ethereumAddress: accounts[0],\n        ethereumProvider: window.ethereum\n      };\n      setUniswapDappSharedLogicContext(uniswapDappSharedLogicContext);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uniswap-container\",\n      children: uniswapDappSharedLogicContext !== undefined && /*#__PURE__*/_jsxDEV(UniswapReact, {\n        uniswapDappSharedLogicContext: uniswapDappSharedLogicContext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/uniswap_swap.tsx"],"names":["React","useEffect","ChainId","UniswapReact","App","uniswapDappSharedLogicContext","setUniswapDappSharedLogicContext","useState","undefined","accounts","window","ethereum","request","method","supportedNetworkTokens","chainId","MAINNET","defaultInputValue","defaultInputToken","ch","defaultOutputToken","supportedTokens","contractAddress","ethereumAddress","ethereumProvider"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,OADF,QAIO,iCAJP;AAKA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,6BAAD,EAAgCC,gCAAhC,IACJN,KAAK,CAACO,QAAN,CAA0DC,SAA1D,CADF;AAGAP,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMQ,QAAQ,GAAG,MAAOC,MAAD,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC;AACtDC,QAAAA,MAAM,EAAE;AAD8C,OAAjC,CAAvB;AAIA,YAAMR,6BAA4D,GAAG;AACnES,QAAAA,sBAAsB,EAAE,CACtB;AACEC,UAAAA,OAAO,EAAEb,OAAO,CAACc,OADnB;AAEEC,UAAAA,iBAAiB,EAAE,UAFrB;AAGEC,UAAAA,iBAAiB,EAAEC,EAHrB;AAIEC,UAAAA,kBAAkB,EAAE,4CAJtB;AAKEC,UAAAA,eAAe,EAAE,CACf;AACEC,YAAAA,eAAe,EAAE;AADnB,WADe;AALnB,SADsB,CAD2C;AAcnEC,QAAAA,eAAe,EAAEd,QAAQ,CAAC,CAAD,CAd0C;AAenEe,QAAAA,gBAAgB,EAAGd,MAAD,CAAgBC;AAfiC,OAArE;AAkBAL,MAAAA,gCAAgC,CAACD,6BAAD,CAAhC;AACD,KAxBD;AAyBD,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACGA,6BAA6B,KAAKG,SAAlC,iBACC,QAAC,YAAD;AACE,QAAA,6BAA6B,EAAEH;AADjC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  ChainId,\n  ETH,\n  UniswapDappSharedLogicContext,\n} from 'uniswap-dapp-integration-shared';\nimport UniswapReact from 'uniswap-react';\n\nfunction App() {\n  const [uniswapDappSharedLogicContext, setUniswapDappSharedLogicContext] =\n    React.useState<undefined | UniswapDappSharedLogicContext>(undefined);\n    \n  useEffect(() => {\n    (async () => {\n      const accounts = await (window as any).ethereum.request({\n        method: 'eth_requestAccounts',\n      });\n\n      const uniswapDappSharedLogicContext: UniswapDappSharedLogicContext = {\n        supportedNetworkTokens: [\n          {\n            chainId: ChainId.MAINNET,\n            defaultInputValue: '0.000001',\n            defaultInputToken: ch,\n            defaultOutputToken: '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984',\n            supportedTokens: [\n              {\n                contractAddress: '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984',\n              },\n            ],\n          }\n        ],\n        ethereumAddress: accounts[0],\n        ethereumProvider: (window as any).ethereum,\n      };\n\n      setUniswapDappSharedLogicContext(uniswapDappSharedLogicContext);\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"uniswap-container\">\n        {uniswapDappSharedLogicContext !== undefined && (\n          <UniswapReact\n            uniswapDappSharedLogicContext={uniswapDappSharedLogicContext}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}