{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nconst initialStepsModalState = {\n  doneSteps: [],\n  currentStep: null,\n  pendingSteps: []\n};\nconst initialState = {\n  stepsModal: initialStepsModalState\n};\nexport function stepsModal(state = initialStepsModalState, action) {\n  switch (action.type) {\n    case getType(actions.setStepsModalDoneSteps):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        doneSteps: action.payload\n      });\n\n    case getType(actions.setStepsModalPendingSteps):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pendingSteps: action.payload\n      });\n\n    case getType(actions.setStepsModalCurrentStep):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentStep: action.payload\n      });\n\n    case getType(actions.stepsModalAdvanceStep):\n      const {\n        doneSteps,\n        currentStep,\n        pendingSteps\n      } = state; // This first condition may happen in async scenarios\n\n      if (currentStep === null && pendingSteps.length === 0) {\n        return state;\n      } else if (pendingSteps.length === 0 && currentStep !== null) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          doneSteps: doneSteps.concat([currentStep]),\n          currentStep: null\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          pendingSteps: pendingSteps.slice(1),\n          doneSteps: doneSteps.concat([currentStep]),\n          currentStep: pendingSteps[0]\n        });\n      }\n\n    case getType(actions.stepsModalReset):\n      return initialStepsModalState;\n\n    default:\n      return state;\n  }\n}\nexport default function uiReducer(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        stepsModal: stepsModal(state.stepsModal, action)\n      });\n  }\n}","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/store/ui/reducers.ts"],"names":["getType","actions","initialStepsModalState","doneSteps","currentStep","pendingSteps","initialState","stepsModal","state","action","type","setStepsModalDoneSteps","payload","setStepsModalPendingSteps","setStepsModalCurrentStep","stepsModalAdvanceStep","length","concat","slice","stepsModalReset","uiReducer"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AAIA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AAGA,MAAMC,sBAAuC,GAAG;AAC5CC,EAAAA,SAAS,EAAE,EADiC;AAE5CC,EAAAA,WAAW,EAAE,IAF+B;AAG5CC,EAAAA,YAAY,EAAE;AAH8B,CAAhD;AAMA,MAAMC,YAAgB,GAAG;AACrBC,EAAAA,UAAU,EAAEL;AADS,CAAzB;AAKA,OAAO,SAASK,UAAT,CAAoBC,KAAsB,GAAGN,sBAA7C,EAAqEO,MAArE,EAA0G;AAC7G,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,OAAO,CAACC,OAAO,CAACU,sBAAT,CAAZ;AACI,6CAAYH,KAAZ;AAAmBL,QAAAA,SAAS,EAAEM,MAAM,CAACG;AAArC;;AACJ,SAAKZ,OAAO,CAACC,OAAO,CAACY,yBAAT,CAAZ;AACI,6CAAYL,KAAZ;AAAmBH,QAAAA,YAAY,EAAEI,MAAM,CAACG;AAAxC;;AACJ,SAAKZ,OAAO,CAACC,OAAO,CAACa,wBAAT,CAAZ;AACI,6CAAYN,KAAZ;AAAmBJ,QAAAA,WAAW,EAAEK,MAAM,CAACG;AAAvC;;AACJ,SAAKZ,OAAO,CAACC,OAAO,CAACc,qBAAT,CAAZ;AACI,YAAM;AAAEZ,QAAAA,SAAF;AAAaC,QAAAA,WAAb;AAA0BC,QAAAA;AAA1B,UAA2CG,KAAjD,CADJ,CAEI;;AACA,UAAIJ,WAAW,KAAK,IAAhB,IAAwBC,YAAY,CAACW,MAAb,KAAwB,CAApD,EAAuD;AACnD,eAAOR,KAAP;AACH,OAFD,MAEO,IAAIH,YAAY,CAACW,MAAb,KAAwB,CAAxB,IAA6BZ,WAAW,KAAK,IAAjD,EAAuD;AAC1D,+CACOI,KADP;AAEIL,UAAAA,SAAS,EAAEA,SAAS,CAACc,MAAV,CAAiB,CAACb,WAAD,CAAjB,CAFf;AAGIA,UAAAA,WAAW,EAAE;AAHjB;AAKH,OANM,MAMA;AACH,+CACOI,KADP;AAEIH,UAAAA,YAAY,EAAEA,YAAY,CAACa,KAAb,CAAmB,CAAnB,CAFlB;AAGIf,UAAAA,SAAS,EAAEA,SAAS,CAACc,MAAV,CAAiB,CAACb,WAAD,CAAjB,CAHf;AAIIA,UAAAA,WAAW,EAAEC,YAAY,CAAC,CAAD;AAJ7B;AAMH;;AACL,SAAKL,OAAO,CAACC,OAAO,CAACkB,eAAT,CAAZ;AACI,aAAOjB,sBAAP;;AACJ;AACI,aAAOM,KAAP;AA7BR;AA+BH;AAED,eAAe,SAASY,SAAT,CAAmBZ,KAAS,GAAGF,YAA/B,EAA6CG,MAA7C,EAAqE;AAEhF,UAAQA,MAAM,CAACC,IAAf;AAEI;AACI,6CACOF,KADP;AAEID,QAAAA,UAAU,EAAEA,UAAU,CAACC,KAAK,CAACD,UAAP,EAAmBE,MAAnB;AAF1B;AAHR;AAQH","sourcesContent":["import { getType } from 'typesafe-actions';\nimport { Step, StepsModalState } from '../../types/steps-modal';\nimport { UI } from '../../types/ui';\n\nimport * as actions from '../actions';\nimport { RootAction } from '../reducers';\n\nconst initialStepsModalState: StepsModalState = {\n    doneSteps: [],\n    currentStep: null,\n    pendingSteps: [],\n};\n\nconst initialState: UI = {\n    stepsModal: initialStepsModalState\n}\n\n\nexport function stepsModal(state: StepsModalState = initialStepsModalState, action: RootAction): StepsModalState {\n    switch (action.type) {\n        case getType(actions.setStepsModalDoneSteps):\n            return { ...state, doneSteps: action.payload };\n        case getType(actions.setStepsModalPendingSteps):\n            return { ...state, pendingSteps: action.payload };\n        case getType(actions.setStepsModalCurrentStep):\n            return { ...state, currentStep: action.payload };\n        case getType(actions.stepsModalAdvanceStep):\n            const { doneSteps, currentStep, pendingSteps } = state;\n            // This first condition may happen in async scenarios\n            if (currentStep === null && pendingSteps.length === 0) {\n                return state;\n            } else if (pendingSteps.length === 0 && currentStep !== null) {\n                return {\n                    ...state,\n                    doneSteps: doneSteps.concat([currentStep as Step]),\n                    currentStep: null,\n                };\n            } else {\n                return {\n                    ...state,\n                    pendingSteps: pendingSteps.slice(1),\n                    doneSteps: doneSteps.concat([currentStep as Step]),\n                    currentStep: pendingSteps[0] as Step,\n                };\n            }\n        case getType(actions.stepsModalReset):\n            return initialStepsModalState;\n        default:\n            return state;\n    }\n}\n\nexport default function uiReducer(state: UI = initialState, action: RootAction): UI {\n\n    switch (action.type) {\n       \n        default:\n            return {\n                ...state,\n                stepsModal: stepsModal(state.stepsModal, action),\n            };\n    }\n}"]},"metadata":{},"sourceType":"module"}