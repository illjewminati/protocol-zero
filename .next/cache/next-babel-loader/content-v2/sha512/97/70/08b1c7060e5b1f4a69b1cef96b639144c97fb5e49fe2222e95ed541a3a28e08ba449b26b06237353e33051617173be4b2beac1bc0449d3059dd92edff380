{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/danildovgal/Desktop/protocol_zero/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/danildovgal/Desktop/protocol_zero/src/components/account/swap_token.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { ethers, utils } from \"ethers\";\nimport { PureComponent } from \"react\";\nimport { Alert, Button, Container, Form, InputGroup, Spinner } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addToken } from \"../../services/metamask\";\nimport { initBalances, reviewSwap as _reviewSwap, startAllowanceAndSwapSteps as _startAllowanceAndSwapSteps, startSwapStep as _startSwapStep } from \"../../store/actions\";\nimport { getBalances, getGasPrice, getGSNProvider, getPaymasterData, getTokenBalances, getWeb3State } from \"../../store/blockchain/selectors\";\nimport { Web3State } from \"../../types/blockchain\";\nvar maxGasUsage = 1600000;\nvar SwapState;\n\n(function (SwapState) {\n  SwapState[SwapState[\"Init\"] = 0] = \"Init\";\n  SwapState[SwapState[\"Loading\"] = 1] = \"Loading\";\n  SwapState[SwapState[\"Done\"] = 2] = \"Done\";\n})(SwapState || (SwapState = {}));\n\nvar SwapToken = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SwapToken, _PureComponent);\n\n  var _super = _createSuper(SwapToken);\n\n  function SwapToken() {\n    var _this;\n\n    _classCallCheck(this, SwapToken);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      amount: \"\",\n      swapState: SwapState.Init,\n      txHash: null,\n      gasUsed: \"\",\n      selectedToken: process.env.ZRO_TOKEN,\n      txPrice: \"\",\n      errorMessage: null,\n      reviewSwap: false,\n      swapReviewResponse: \"\",\n      deposited: \"\",\n      withdrawn: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addToken\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return addToken(token);\n\n              case 3:\n                _context.next = 8;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 5]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onSwap\", function (res) {\n      if (res.error) {\n        return _this.setState({\n          swapState: SwapState.Init,\n          errorMessage: res.message\n        });\n      }\n\n      _this.setState({\n        txHash: res.data.txHash,\n        gasUsed: res.data.gasUsed,\n        swapState: SwapState.Done,\n        txPrice: res.data.txPrice,\n        deposited: res.data.deposited,\n        withdrawn: res.data.withdrawn\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reviewSwap\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this$state, selectedToken, amount, tokensBalance, tokenBalance, swapReviewResponse;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, selectedToken = _this$state.selectedToken, amount = _this$state.amount;\n\n              if (!(selectedToken === \"\")) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", null);\n\n            case 3:\n              tokensBalance = _this.props.tokensBalance;\n              tokenBalance = tokensBalance.find(function (t) {\n                return t.token.address === selectedToken;\n              });\n              _context2.next = 7;\n              return _this.props.reviewSwap(amount, tokenBalance.token);\n\n            case 7:\n              swapReviewResponse = _context2.sent;\n\n              _this.setState({\n                swapReviewResponse: ethers.utils.formatEther(swapReviewResponse)\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"swap\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(address) {\n        var _this$state2, amount, reviewSwap, _this$props, tokensBalance, paymasterData, tokenBalance, amountBN, feeBN, allowanceBN, minAllowanceBN, message;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$state2 = _this.state, amount = _this$state2.amount, reviewSwap = _this$state2.reviewSwap;\n\n                if (reviewSwap) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                _this.setState({\n                  reviewSwap: true\n                });\n\n                return _context3.abrupt(\"return\", _this.reviewSwap());\n\n              case 4:\n                _this.setState({\n                  swapState: SwapState.Loading,\n                  errorMessage: null\n                });\n\n                _this$props = _this.props, tokensBalance = _this$props.tokensBalance, paymasterData = _this$props.paymasterData;\n                tokenBalance = tokensBalance.find(function (t) {\n                  return t.token.address === address;\n                });\n                amountBN = utils.parseUnits(amount, tokenBalance.token.decimals);\n                feeBN = utils.parseUnits(paymasterData.paymentData.fee, tokenBalance.token.decimals);\n                allowanceBN = utils.parseUnits(tokenBalance.tokenSwapAllowance, tokenBalance.token.decimals);\n                _context3.prev = 10;\n                minAllowanceBN = amountBN.add(feeBN);\n\n                if (!allowanceBN.lt(minAllowanceBN)) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                _context3.next = 15;\n                return _this.props.startAllowanceAndSwapSteps(tokenBalance.token, process.env.GSN_TOKEN_SWAP, amount, _this.onSwap);\n\n              case 15:\n                _context3.next = 18;\n                break;\n\n              case 17:\n                _this.props.startSwapStep(tokenBalance.token, amount, _this.onSwap);\n\n              case 18:\n                _context3.next = 24;\n                break;\n\n              case 20:\n                _context3.prev = 20;\n                _context3.t0 = _context3[\"catch\"](10);\n                message = _context3.t0.message;\n\n                if (message.startsWith(\"user rejected transaction\")) {} else if (message.includes(\"Not enough to pay for tx\")) {\n                  _this.setState({\n                    swapState: SwapState.Init,\n                    errorMessage: \"Not enough to pay for tx, try swapping more tokens\"\n                  });\n                }\n\n              case 24:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[10, 20]]);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTokenInfo\", function () {\n      var selectedToken = _this.state.selectedToken;\n      if (selectedToken === \"\") return null;\n      var tokensBalance = _this.props.tokensBalance;\n      var tokenBalance = tokensBalance.find(function (t) {\n        return t.token.address === selectedToken;\n      });\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [tokenBalance.token.symbol, \" Balance: \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: Number(utils.formatUnits(tokenBalance.balance)).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, _assertThisInitialized(_this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"1 ETH  = \", Number(utils.formatUnits(tokenBalance.uniswapValue)).toLocaleString(), \" \", tokenBalance.token.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, _assertThisInitialized(_this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Supply: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: Number(tokenBalance.totalSupply).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, _assertThisInitialized(_this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Burned: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: Number(tokenBalance.burned).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, _assertThisInitialized(_this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"link\",\n            onClick: function onClick() {\n              return _this.addToken(tokenBalance.token);\n            },\n            children: \"Add token To Metamask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, _assertThisInitialized(_this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, _assertThisInitialized(_this))]\n      }, void 0, true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderAmountToGet\", function () {\n      var _this$state3 = _this.state,\n          amount = _this$state3.amount,\n          selectedToken = _this$state3.selectedToken,\n          reviewSwap = _this$state3.reviewSwap,\n          swapReviewResponse = _this$state3.swapReviewResponse;\n      if (amount === \"\" || isNaN(parseFloat(amount))) return null;\n      var title = reviewSwap ? \"Swap\" : \"Review Swap\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [swapReviewResponse === \"\" ? null : /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [swapReviewResponse, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 54\n        }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"swap_button\",\n            onClick: function onClick() {\n              return _this.swap(selectedToken);\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, _assertThisInitialized(_this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 18\n        }, _assertThisInitialized(_this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, _assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSwapInfo\", function () {\n      var _this$state4 = _this.state,\n          swapState = _this$state4.swapState,\n          txHash = _this$state4.txHash,\n          gasUsed = _this$state4.gasUsed,\n          selectedToken = _this$state4.selectedToken,\n          errorMessage = _this$state4.errorMessage,\n          deposited = _this$state4.deposited,\n          withdrawn = _this$state4.withdrawn;\n      if (selectedToken === \"\") return null;\n      var tokensBalance = _this.props.tokensBalance;\n\n      if (swapState === SwapState.Loading) {\n        return /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, _assertThisInitialized(_this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, _assertThisInitialized(_this));\n      } else if (swapState === SwapState.Done) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Transaction Mined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            href: \"https://goerli.etherscan.io/tx/\".concat(txHash),\n            children: \"View on Goerli\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Gas Used: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 26\n            }, _assertThisInitialized(_this)), gasUsed]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Amount Swapped: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 26\n            }, _assertThisInitialized(_this)), deposited, \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 21\n          }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Amount Gotten: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 26\n            }, _assertThisInitialized(_this)), withdrawn, \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Amount Charged: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 26\n            }, _assertThisInitialized(_this)), parseFloat(deposited) - parseFloat(withdrawn), \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }, _assertThisInitialized(_this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, _assertThisInitialized(_this));\n      } else if (swapState === SwapState.Init && errorMessage) {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          onClose: function onClose() {\n            return _this.setState({\n              errorMessage: null\n            });\n          },\n          dismissible: true,\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, _assertThisInitialized(_this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            style: {\n              width: \"200px\",\n              margin: \"5px auto 0px auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"swap\",\n              placeholder: \"Amount to swap\",\n              \"aria-label\": \"Amount to swap\",\n              \"aria-describedby\": \"basic-addon1\",\n              type: \"number\",\n              value: _this.state.amount,\n              onChange: function onChange(_ref4) {\n                var target = _ref4.target;\n                return _this.setState({\n                  amount: target.value,\n                  errorMessage: null,\n                  reviewSwap: false,\n                  swapReviewResponse: \"\"\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }, _assertThisInitialized(_this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, _assertThisInitialized(_this)), _this.renderAmountToGet()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, _assertThisInitialized(_this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, _assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderUserInfo\", function () {\n      var ethBalance = _this.props.ethBalance;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"ETH Balance: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: Number(utils.formatUnits(ethBalance.balance)).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, _assertThisInitialized(_this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }, _assertThisInitialized(_this));\n    });\n\n    return _this;\n  }\n\n  _createClass(SwapToken, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          ethBalance = _this$props2.ethBalance,\n          tokensBalance = _this$props2.tokensBalance,\n          web3State = _this$props2.web3State;\n      if (web3State !== Web3State.Done || !ethBalance || tokensBalance.length === 0) return null;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens_info\",\n        children: [this.renderUserInfo(), this.renderTokenInfo(), this.renderSwapInfo()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return SwapToken;\n}(PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ethBalance: getBalances(state),\n    tokensBalance: getTokenBalances(state),\n    gsnProvider: getGSNProvider(state),\n    gasPrice: getGasPrice(state),\n    web3State: getWeb3State(state),\n    paymasterData: getPaymasterData(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchBalances: function fetchBalances() {\n      return dispatch(initBalances());\n    },\n    startAllowanceAndSwapSteps: function startAllowanceAndSwapSteps(token, to, amount, callback) {\n      return dispatch(_startAllowanceAndSwapSteps(token, to, amount, callback));\n    },\n    startSwapStep: function startSwapStep(token, amount, callback) {\n      return dispatch(_startSwapStep(token, amount, callback));\n    },\n    reviewSwap: function reviewSwap(amount, token) {\n      return dispatch(_reviewSwap(amount, token));\n    }\n  };\n};\n\nvar SwapTokenContainer = connect(mapStateToProps, mapDispatchToProps)(SwapToken);\nexport { SwapTokenContainer };","map":{"version":3,"sources":["/Users/danildovgal/Desktop/protocol_zero/src/components/account/swap_token.tsx"],"names":["ethers","utils","PureComponent","Alert","Button","Container","Form","InputGroup","Spinner","connect","addToken","initBalances","reviewSwap","startAllowanceAndSwapSteps","startSwapStep","getBalances","getGasPrice","getGSNProvider","getPaymasterData","getTokenBalances","getWeb3State","Web3State","maxGasUsage","SwapState","SwapToken","amount","swapState","Init","txHash","gasUsed","selectedToken","process","env","ZRO_TOKEN","txPrice","errorMessage","swapReviewResponse","deposited","withdrawn","token","console","log","res","error","setState","message","data","Done","state","tokensBalance","props","tokenBalance","find","t","address","formatEther","Loading","paymasterData","amountBN","parseUnits","decimals","feeBN","paymentData","fee","allowanceBN","tokenSwapAllowance","minAllowanceBN","add","lt","GSN_TOKEN_SWAP","onSwap","startsWith","includes","symbol","Number","formatUnits","balance","toLocaleString","uniswapValue","totalSupply","burned","isNaN","parseFloat","title","swap","width","margin","target","value","renderAmountToGet","ethBalance","web3State","length","renderUserInfo","renderTokenInfo","renderSwapInfo","mapStateToProps","gsnProvider","gasPrice","mapDispatchToProps","dispatch","fetchBalances","to","callback","SwapTokenContainer"],"mappings":"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","sourcesContent":["import { BigNumber, ethers, utils } from \"ethers\";\nimport { PureComponent } from \"react\";\nimport { Alert, Button, Container, Form, InputGroup, Spinner } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addToken } from \"../../services/metamask\";\nimport { initBalances, reviewSwap, startAllowanceAndSwapSteps, startSwapStep } from \"../../store/actions\";\nimport { getBalances, getGasPrice, getGSNProvider, getPaymasterData, getTokenBalances, getWeb3State } from \"../../store/blockchain/selectors\";\nimport { Balance, Paymaster, SwapResponse, Token, TokenBalance, Web3State } from \"../../types/blockchain\";\nimport { StoreState } from \"../../types/store\";\n\nconst maxGasUsage = 1600000;\n\n\nenum SwapState {\n    Init,\n    Loading,\n    Done\n}\n\ninterface StateProps {\n    ethBalance: Balance,\n    tokensBalance: Array<TokenBalance>,\n    gsnProvider: ethers.providers.Web3Provider,\n    gasPrice: string,\n    web3State: Web3State,\n    paymasterData: Paymaster\n}\n\ninterface DispatchProps {\n    fetchBalances: () => any; //\n    startAllowanceAndSwapSteps: (\n        token: Token, \n        to: string, \n        amount: string,\n        callback: (res: SwapResponse) => void\n    ) => any;\n    startSwapStep: (\n        token: Token,\n        amount: string,\n        callback: (res: SwapResponse) => void\n    ) => any;\n    reviewSwap: (amount: string, token: Token) => Promise<string>\n}\n\ninterface OwnProps {\n    amount: string,\n    swapState: SwapState,\n    txHash: string,\n    gasUsed: string,\n    selectedToken: string,\n    txPrice: string,\n    errorMessage: string,\n    reviewSwap: boolean,\n    swapReviewResponse: string,\n    deposited: string,\n    withdrawn: string\n}\n\ntype Props = StateProps & DispatchProps;\n\n\nclass SwapToken extends PureComponent<Props, OwnProps> {\n\n    state = {\n        amount: \"\",\n        swapState: SwapState.Init,\n        txHash: null,\n        gasUsed: \"\",\n        selectedToken: process.env.ZRO_TOKEN,\n        txPrice: \"\",\n        errorMessage: null,\n        reviewSwap: false,\n        swapReviewResponse: \"\",\n        deposited: \"\",\n        withdrawn: \"\"\n    }\n\n    addToken = async (token: Token) => {\n        try {\n            await addToken(token);\n        } catch(e) {\n            console.log(e)\n        }\n    }\n\n    onSwap = (res: SwapResponse) => {\n        if(res.error) {\n            return this.setState({swapState: SwapState.Init, errorMessage: res.message})\n        }\n        this.setState({\n            txHash: res.data.txHash, \n            gasUsed: res.data.gasUsed, \n            swapState: SwapState.Done,\n            txPrice: res.data.txPrice,\n            deposited: res.data.deposited,\n            withdrawn: res.data.withdrawn\n        })\n\n    }\n\n    reviewSwap = async () => {\n        const { selectedToken, amount } = this.state\n        if(selectedToken === \"\") return null;\n        const { tokensBalance } = this.props;\n        const tokenBalance = tokensBalance.find(t => t.token.address === selectedToken)\n        const swapReviewResponse = await this.props.reviewSwap(amount, tokenBalance.token)\n        this.setState({swapReviewResponse: ethers.utils.formatEther(swapReviewResponse)})\n    }\n\n    swap = async (address: string) => {\n        const { amount, reviewSwap } = this.state;\n        if(!reviewSwap) {\n            this.setState({reviewSwap: true});\n            return this.reviewSwap()\n        }\n\n        this.setState({swapState: SwapState.Loading, errorMessage: null})\n        const { tokensBalance, paymasterData } = this.props\n        const tokenBalance = tokensBalance.find(t => t.token.address === address);\n\n        const amountBN = utils.parseUnits(amount, tokenBalance.token.decimals);\n        const feeBN = utils.parseUnits(paymasterData.paymentData.fee, tokenBalance.token.decimals)\n        const allowanceBN = utils.parseUnits(tokenBalance.tokenSwapAllowance, tokenBalance.token.decimals)\n\n        try {\n            let minAllowanceBN = amountBN.add(feeBN)\n\n            if(allowanceBN.lt(minAllowanceBN)) {\n                await this.props.startAllowanceAndSwapSteps(tokenBalance.token, process.env.GSN_TOKEN_SWAP, amount, this.onSwap);\n            } else {\n                this.props.startSwapStep(tokenBalance.token, amount, this.onSwap)\n            }\n            \n        } catch(e) {\n            const {message} = e;\n            if(message.startsWith(\"user rejected transaction\")){\n               \n            } else if(message.includes(\"Not enough to pay for tx\")) {\n                this.setState({swapState: SwapState.Init, errorMessage: \"Not enough to pay for tx, try swapping more tokens\"})\n            }\n            \n        }\n    }\n\n    renderTokenInfo = () => {\n        const { selectedToken } = this.state\n        if(selectedToken === \"\") return null;\n        const { tokensBalance } = this.props;\n        const tokenBalance = tokensBalance.find(t => t.token.address === selectedToken)\n        return (\n            <>\n                <div>\n                    <strong>{tokenBalance.token.symbol} Balance: </strong>\n                    <span>{Number(utils.formatUnits(tokenBalance.balance)).toLocaleString()}</span>\n                </div>\n                <div>\n                    <strong></strong>\n                    <span>1 ETH  = {Number(utils.formatUnits(tokenBalance.uniswapValue)).toLocaleString()} {tokenBalance.token.symbol}</span>\n                </div>\n                <div>\n                    <strong>Total Supply: </strong>\n                    <span>{Number(tokenBalance.totalSupply).toLocaleString()}</span>\n                </div>\n                <div>\n                    <strong>Total Burned: </strong>\n                    <span>{Number(tokenBalance.burned).toLocaleString()}</span>\n                </div>\n                \n                <div>\n                    <Button variant=\"link\" onClick={() => this.addToken(tokenBalance.token)}>Add token To Metamask</Button>\n\n                </div>\n            </>\n        )\n    }\n\n    renderAmountToGet = () => {\n        const { amount, selectedToken, reviewSwap, swapReviewResponse } = this.state;\n        if(amount === \"\" || isNaN(parseFloat(amount))) return null\n\n        const title = reviewSwap ? \"Swap\" : \"Review Swap\"\n\n        return (\n            <div>\n                 {swapReviewResponse === \"\" ? null : <small>{swapReviewResponse} ETH</small>}\n                 \n                 <div>\n                    <Button className=\"swap_button\" onClick={() => this.swap(selectedToken)}>{title}</Button>\n                 </div>\n            </div>\n        )\n    }\n\n    renderSwapInfo = () => {\n        const { swapState, txHash, gasUsed, selectedToken, errorMessage, deposited, withdrawn} = this.state;\n        if(selectedToken === \"\") return null;\n        const { tokensBalance } = this.props\n\n        if(swapState === SwapState.Loading) {\n            return (\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"visually-hidden\"></span>\n                </Spinner>\n            )\n        } else if(swapState === SwapState.Done) {\n            return (\n                <div>\n                    <br/>\n                    <div>Transaction Mined</div>\n                    <a target=\"_blank\" href={`https://goerli.etherscan.io/tx/${txHash}`}>View on Goerli</a>\n                    <div><strong>Gas Used: </strong>{gasUsed}</div>\n                    <div><strong>Amount Swapped: </strong>{deposited} ETH</div>\n                    <div><strong>Amount Gotten: </strong>{withdrawn} ETH</div>\n                    <div><strong>Amount Charged: </strong>{parseFloat(deposited) - parseFloat(withdrawn)} ETH</div>\n                </div>\n            )\n        } else if(swapState === SwapState.Init && errorMessage) {\n            return (\n                <Alert variant=\"danger\" onClose={() => this.setState({errorMessage: null})} dismissible>{errorMessage}</Alert>\n            )\n        }\n        return (\n            <Container >\n                <div>\n                    <InputGroup className=\"mb-3\" style={{width: \"200px\", margin: \"5px auto 0px auto\"}}>\n                        <Form.Control\n                            className=\"swap\"\n                            placeholder=\"Amount to swap\"\n                            aria-label=\"Amount to swap\"\n                            aria-describedby=\"basic-addon1\"\n                            type=\"number\"\n                            value={this.state.amount}\n                            onChange={\n                                ({target}) => this.setState({\n                                    amount: target.value, \n                                    errorMessage: null, \n                                    reviewSwap: false, \n                                    swapReviewResponse: \"\"\n                                })\n                            }\n                        />\n                    </InputGroup>\n                    {this.renderAmountToGet()}\n                </div>\n                \n            </Container>\n        )\n    }\n\n    renderUserInfo = () => {\n        const { ethBalance } = this.props\n        return (\n            <div>\n                <strong>ETH Balance: </strong>\n                <span>{Number(utils.formatUnits(ethBalance.balance)).toLocaleString()}</span>\n            </div>\n        )\n    }\n    \n\n    render() {\n        const { ethBalance, tokensBalance, web3State } = this.props;\n        if(web3State!== Web3State.Done || !ethBalance || tokensBalance.length === 0) return null\n        return (\n            <div className=\"tokens_info\">\n                {this.renderUserInfo()}\n               \n                {this.renderTokenInfo()}\n                {this.renderSwapInfo()}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: StoreState): StateProps => {\n    return {\n        ethBalance: getBalances(state),\n        tokensBalance: getTokenBalances(state),\n        gsnProvider: getGSNProvider(state),\n        gasPrice: getGasPrice(state),\n        web3State: getWeb3State(state),\n        paymasterData: getPaymasterData(state)\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any): DispatchProps => {\n    return {\n        fetchBalances: () => dispatch(initBalances()),\n        startAllowanceAndSwapSteps: (\n            token: Token, \n            to: string, \n            amount: string,\n            callback: (res: SwapResponse) => void\n        ) => dispatch(startAllowanceAndSwapSteps(token, to, amount, callback)),\n        startSwapStep: (\n            token: Token,\n            amount: string,\n            callback: (res: SwapResponse) => void\n        ) => dispatch(startSwapStep(token, amount, callback)),\n        reviewSwap: (\n            amount: string,\n            token: Token\n        ) => dispatch(reviewSwap(amount, token))\n    };\n};\n\nconst SwapTokenContainer = connect(mapStateToProps, mapDispatchToProps)(SwapToken);\n\nexport { SwapTokenContainer }"]},"metadata":{},"sourceType":"module"}