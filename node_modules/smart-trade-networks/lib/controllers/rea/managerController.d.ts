import { BigNumberish, ContractTransaction, Signer } from "ethers";
import { ProviderOrSigner } from "../../localTypes";
import { STN721Manager } from "../../types/STN721Manager";
export declare class ManagerController {
    private _managerAddress;
    private _signer;
    private _managerContract?;
    constructor(managerAddress: string, signerOrProvider: ProviderOrSigner);
    private _getManagerContract;
    static deploySTN721ManagerContract(signer: Signer, produceAddress: string, controllers: Array<string>): Promise<STN721Manager>;
    /**Getters */
    getContract(): Promise<STN721Manager>;
    getChild(stn721Parent: string, tokenId: BigNumberish): Promise<string>;
    getAll(): Promise<Array<string>>;
    /** Setters */
    addController(newController: string): Promise<ContractTransaction>;
    removeController(controller: string): Promise<ContractTransaction>;
    createParentSTN721(name: string, symbol: string): Promise<ContractTransaction>;
    createChildSTN721(stn721Parent: string, tokenId: BigNumberish, name: string, symbol: string): Promise<ContractTransaction>;
    mint(stn721: string, divisible: boolean, tokenIds: Array<BigNumberish>, receiver: string): Promise<ContractTransaction>;
    mintChild(stn721Child: string, divisible: boolean, tokenIds: Array<BigNumberish>): Promise<ContractTransaction>;
}
