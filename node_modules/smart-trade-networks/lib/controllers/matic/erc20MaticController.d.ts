import { BytesLike, ContractTransaction, EventFilter } from "ethers";
import { DecodedCall } from "../helpers/abiDecoderController";
import { ChildMintableERC20 } from "../../types";
import { ERC20Controller } from "../tokens/erc20Controller";
import { ProviderOrSigner } from "../../localTypes";
export declare class ERC20MaticController extends ERC20Controller {
    private _erc20MaticAddress;
    private _erc20MaticContract?;
    constructor(erc20MaticAddress: string, signerOrProvider: ProviderOrSigner);
    private _getERC20MaticContract;
    /**Getters */
    getContract(): Promise<ChildMintableERC20>;
    /** Setters */
    deposit(user: string, depositData: BytesLike): Promise<ContractTransaction>;
    withdraw(amount: string): Promise<ContractTransaction>;
    mint(sender: string, amount: string): Promise<ContractTransaction>;
    /** Helpers */
    static encodeCall(functionName: string, args?: any[]): string;
    static decodeCall(data: string): DecodedCall | null;
    onEvent(filter: EventFilter, onContractevent: any): Promise<any>;
}
